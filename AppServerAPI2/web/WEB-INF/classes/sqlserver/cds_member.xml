<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cds_member">
    <select id="getRecordList" resultType="CdsMember">
        <![CDATA[
            select top 1000 m.member_id,m.name,m.phone,s.* from cds_member m
            left join cds_message_code s on m.member_id = s.member_id and s.mc_date>'2017-02-11' and s.mc_type=9
            where s.id is null
            and m.last_order_time>'2016-12-10'
        ]]>
    </select>

    <!--更新饿了么-->
    <update id="updateMemberRecord1" parameterType="CdsMember">
        <![CDATA[
            UPDATE cds_member
            SET
            last_order_time = #{last_order_time},
            all_order_count = all_order_count+1,
            last_order_time1 = #{last_order_time1},
            all_order_count1 = all_order_count1+1
            WHERE  member_id= #{member_id}
        ]]>
    </update>

    <!--更新美团-->
    <update id="updateMemberRecord2" parameterType="CdsMember">
        <![CDATA[
            UPDATE cds_member
            SET
            last_order_time = #{last_order_time},
            all_order_count = all_order_count+1,
            last_order_time2 = #{last_order_time2},
            all_order_count2 = all_order_count2+1
            WHERE  member_id= #{member_id}
        ]]>
    </update>

    <!--更新百度-->
    <update id="updateMemberRecord3" parameterType="CdsMember">
        <![CDATA[
            UPDATE cds_member
            SET
            last_order_time = #{last_order_time},
            all_order_count = all_order_count+1,
            last_order_time3 = #{last_order_time3},
            all_order_count3 = all_order_count3+1
            WHERE  member_id= #{member_id}
        ]]>
    </update>
    <!--更新微信-->
    <update id="updateMemberRecord4" parameterType="CdsMember">
        <![CDATA[
            UPDATE cds_member
            SET
            last_order_time = #{last_order_time},
            all_order_count = all_order_count+1,
            last_order_time4 = #{last_order_time4},
            all_order_count4 = all_order_count4+1
            WHERE  member_id= #{member_id}
        ]]>
    </update>



    <!--某个用户数据处理-->
    <select id="getMemberCount" parameterType="CdsMember" resultType="CdsMember">
        <![CDATA[
            select member_id,
            min(create_date) as first_order_time,
            max(create_date) as last_order_time,
            COUNT(1) as all_order_count,
            min(case when fromin='饿了么' then create_date else null end ) as first_order_time1,
            max(case when fromin='饿了么' then create_date else null end ) as last_order_time1,
            sum(case when fromin='饿了么' then 1 else 0 end ) as all_order_count1,
            min(case when fromin='美团' then create_date else null end ) as first_order_time2,
            max(case when fromin='美团' then create_date else null end ) as last_order_time2,
            sum(case when fromin='美团' then 1 else 0 end ) as all_order_count2,
            min(case when fromin='百度外卖' then create_date else null end ) as first_order_time3,
            max(case when fromin='百度外卖' then create_date else null end ) as last_order_time3,
            sum(case when fromin='百度外卖' then 1 else 0 end ) as all_order_count3,
            min(case when fromin='微信' then create_date else null end ) as first_order_time4,
            max(case when fromin='微信' then create_date else null end ) as last_order_time4,
            sum(case when fromin='微信' then 1 else 0 end ) as all_order_count4
            from cds_order_info
            where member_id=#{member_id}
            group by member_id
        ]]>
    </select>

    <!--某个用户数据处理-->
    <select id="getMemberStoresCount" parameterType="CdsMember" resultType="CdsMemberStores">
        <![CDATA[
           select member_id,
            stores_id,
            min(create_date) as first_order_time,
            max(create_date) as last_order_time,
            COUNT(1) as all_order_count,
            min(case when fromin='饿了么' then create_date else null end ) as first_order_time1,
            max(case when fromin='饿了么' then create_date else null end ) as last_order_time1,
            sum(case when fromin='饿了么' then 1 else 0 end ) as all_order_count1,
            min(case when fromin='美团' then create_date else null end ) as first_order_time2,
            max(case when fromin='美团' then create_date else null end ) as last_order_time2,
            sum(case when fromin='美团' then 1 else 0 end ) as all_order_count2,
            min(case when fromin='百度外卖' then create_date else null end ) as first_order_time3,
            max(case when fromin='百度外卖' then create_date else null end ) as last_order_time3,
            sum(case when fromin='百度外卖' then 1 else 0 end ) as all_order_count3,
            min(case when fromin='微信' then create_date else null end ) as first_order_time4,
            max(case when fromin='微信' then create_date else null end ) as last_order_time4,
            sum(case when fromin='微信' then 1 else 0 end ) as all_order_count4
            from cds_order_info
            where member_id=#{member_id}
            group by member_id,stores_id
        ]]>
    </select>


    <select id="getIsNotMember" resultType="CdsMember">
        <![CDATA[
            select top 60 * from cds_member where isdo=0
         ]]>
    </select>




</mapper>