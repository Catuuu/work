[INFO][2017-08-08 19:14:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-08-08
参数2:2017-08-08
参数3:0
参数4:2017-08-08
参数5:2017-08-08
参数6:0
参数7:2017-08-07
参数8:2017-08-07
参数9:0
参数10:2017-08-07
参数11:2017-08-07
参数12:0
参数13:2017-08-01
参数14:2017-08-01
参数15:0
 
[INFO][2017-08-08 19:14:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-08 19:14:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:14:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-08 19:14:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:14:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:14:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:14:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-08 19:14:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-08 19:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-08 19:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-08 19:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-08 19:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-08 19:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-08 19:14:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:14:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-08 19:14:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:14:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:14:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-08-08 19:14:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:14:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:14:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:14:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-08-08 19:14:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:14:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-08 19:14:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:11
 
[INFO][2017-08-08 19:14:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ) 
[INFO][2017-08-08 19:14:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:11
 
[INFO][2017-08-08 19:14:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-08 19:14:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-08 19:14:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-08-08 19:14:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-08 19:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-08 19:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:26
 
[INFO][2017-08-08 19:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-08-08 19:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:26
 
[INFO][2017-08-08 19:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-08 19:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:13
 
[INFO][2017-08-08 19:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ) 
[INFO][2017-08-08 19:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:13
 
[INFO][2017-08-08 19:15:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-08 19:15:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-08 19:15:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-08-08 19:15:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-08 19:16:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-08 19:16:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:26
 
[INFO][2017-08-08 19:16:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-08-08 19:16:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:26
 
[INFO][2017-08-08 19:18:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-08 19:18:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-08 19:18:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-08-08 19:18:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-08 19:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-08 19:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-08 19:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[WARN][2017-08-08 19:19:56] org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:251) ActiveMQ Transport: tcp:///127.0.0.1:61616@54414 Transport (tcp://127.0.0.1:61616) failed, reason:  java.io.EOFException, attempting to automatically reconnect 
[INFO][2017-08-08 19:19:56] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1042) ActiveMQ Task-3 Successfully reconnected to tcp://127.0.0.1:61616 
[INFO][2017-08-08 19:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-08 19:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-08-08 19:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:20:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-08-08 19:20:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:20:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:20:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-08 19:20:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:20:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:20:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-08 19:20:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:20:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:20:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:20:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[WARN][2017-08-08 19:21:21] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: com.alibaba.fastjson.JSONException: syntax error, expect [, actual {, pos 0 
[WARN][2017-08-08 19:26:02] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: com.alibaba.fastjson.JSONException: syntax error, expect [, actual {, pos 0 
[WARN][2017-08-08 19:26:02] org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:251) ActiveMQ Transport: tcp:///127.0.0.1:61616@54523 Transport (tcp://127.0.0.1:61616) failed, reason:  java.io.EOFException, attempting to automatically reconnect 
[INFO][2017-08-08 19:26:02] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1042) ActiveMQ Task-5 Successfully reconnected to tcp://127.0.0.1:61616 
[INFO][2017-08-08 19:26:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:26:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:26:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:26:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:26:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-08 19:26:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-08 19:26:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-08 19:26:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:chenbin
 
[INFO][2017-08-08 19:26:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-08 19:26:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:351
参数2:1032
 
[INFO][2017-08-08 19:26:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-08 19:26:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:352
参数2:1032
 
[INFO][2017-08-08 19:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-08 19:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:375
参数2:1032
 
[INFO][2017-08-08 19:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-08 19:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:380
参数2:1032
 
[INFO][2017-08-08 19:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-08 19:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:353
参数2:1032
 
[INFO][2017-08-08 19:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-08 19:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:376
参数2:1032
 
[INFO][2017-08-08 19:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-08 19:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:372
参数2:1032
 
[INFO][2017-08-08 19:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-08 19:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:354
参数2:1032
 
[INFO][2017-08-08 19:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-08 19:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:355
参数2:1032
 
[INFO][2017-08-08 19:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-08 19:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:356
参数2:1032
 
[INFO][2017-08-08 19:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-08 19:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
 
[INFO][2017-08-08 19:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-08 19:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-08 19:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
参数2:2017-08-08
参数3:2017-08-08
参数4:0
参数5:2017-08-08
参数6:2017-08-08
参数7:0
参数8:2017-08-08
参数9:2017-08-08
参数10:0
参数11:2017-08-08
参数12:2017-08-08
参数13:0
参数14:2017-08-08
参数15:2017-08-08
参数16:0
参数17:2017-08-08
参数18:2017-08-08
参数19:0
参数20:2017-08-08
参数21:2017-08-08
参数22:0
参数23:2017-08-08
参数24:2017-08-08
参数25:0
参数26:2017-08-08
参数27:2017-08-08
 
[INFO][2017-08-08 19:26:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:26:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:26:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-08 19:26:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-08
参数2:2017-08-08
 
[INFO][2017-08-08 19:26:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-08 19:26:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-08
参数2:2017-08-08
参数3:0
参数4:2017-08-08
参数5:2017-08-08
参数6:0
参数7:2017-08-07
参数8:2017-08-07
参数9:0
参数10:2017-08-07
参数11:2017-08-07
参数12:0
参数13:2017-08-01
参数14:2017-08-01
参数15:0
 
[INFO][2017-08-08 19:26:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:26:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:26:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-08 19:26:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:26:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:26:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-08 19:26:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-08 19:26:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:26:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:26:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-08 19:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:29:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:29:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:29:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:29:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:29:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-08 19:29:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-08 19:30:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:30:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:30:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-08 19:30:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:30:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:30:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-08 19:30:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-08 19:30:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:30:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:30:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-08 19:30:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:30:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-08 19:30:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:30:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:30:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:30:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:30:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:30:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:30:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:30:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-08 19:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-08 19:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_class_id
         , 
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-08 19:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:10
参数3:0
参数4:null
参数5:null
参数6:1
参数7:null
参数8:测试-水果
参数9:6
参数10:少时诵诗书
参数11:1
 
[INFO][2017-08-08 19:31:34] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) http-nio-80-exec-5 Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
[INFO][2017-08-08 19:31:34] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:127) http-nio-80-exec-5 SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
[WARN][2017-08-08 19:31:34] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 当 IDENTITY_INSERT 设置为 OFF 时，不能为表 'cds_stores_class' 中的标识列插入显式值。
### The error may involve baseSqlMap.insertRecord-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO cds_stores_class(                        stores_class_id          ,              stores_brand_id          ,              class_id          ,              food_category_id          ,              meituan_cat_id          ,              type          ,              baidu_cat_id          ,              class_name          ,              listorder          ,              class_desc          ,              brand_id                   ) VALUES(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?                   )
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 当 IDENTITY_INSERT 设置为 OFF 时，不能为表 'cds_stores_class' 中的标识列插入显式值。
; SQL []; 当 IDENTITY_INSERT 设置为 OFF 时，不能为表 'cds_stores_class' 中的标识列插入显式值。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 当 IDENTITY_INSERT 设置为 OFF 时，不能为表 'cds_stores_class' 中的标识列插入显式值。 
[INFO][2017-08-08 19:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-08 19:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-08 19:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-08 19:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-08 19:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-08 19:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-08 19:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
参数2:2017-08-08
参数3:2017-08-08
参数4:0
参数5:2017-08-08
参数6:2017-08-08
参数7:0
参数8:2017-08-08
参数9:2017-08-08
参数10:0
参数11:2017-08-08
参数12:2017-08-08
参数13:0
参数14:2017-08-08
参数15:2017-08-08
参数16:0
参数17:2017-08-08
参数18:2017-08-08
参数19:0
参数20:2017-08-08
参数21:2017-08-08
参数22:0
参数23:2017-08-08
参数24:2017-08-08
参数25:0
参数26:2017-08-08
参数27:2017-08-08
 
[INFO][2017-08-08 19:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-08 19:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-08
参数2:2017-08-08
 
[INFO][2017-08-08 19:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-08 19:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-08
参数2:2017-08-08
参数3:0
参数4:2017-08-08
参数5:2017-08-08
参数6:0
参数7:2017-08-07
参数8:2017-08-07
参数9:0
参数10:2017-08-07
参数11:2017-08-07
参数12:0
参数13:2017-08-01
参数14:2017-08-01
参数15:0
 
[INFO][2017-08-08 19:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-08 19:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:31:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:31:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-08 19:31:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-08 19:31:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:31:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:31:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-08 19:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:31:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-08 19:33:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:33:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:33:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-08 19:33:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:33:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-08 19:33:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:33:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:33:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-08 19:33:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:33:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-08 19:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-08 19:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-08 19:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-08 19:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-08 19:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:33:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-08 19:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-08 19:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-08 19:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-08 19:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-08 19:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-08 19:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-08 19:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-08 19:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-08 19:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-08 19:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-08 19:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-08 19:34:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:34:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:34:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:34:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:34:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-08 19:34:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-08 19:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-08 19:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-08 19:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-08 19:34:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:34:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:34:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-08 19:34:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:34:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:34:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:34:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:34:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-08 19:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-08 19:34:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:34:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:34:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:34:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:34:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:34:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:34:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:34:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-08 19:35:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-08 19:35:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-08 19:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-08 19:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-08 19:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-08 19:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-08 19:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-08 19:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:36:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:36:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-08 19:36:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-08 19:36:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-08 19:36:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-08 19:36:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-08 19:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-08 19:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-08 19:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-08 19:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-08 19:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-08 19:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-08 19:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-08 19:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 09:01:22] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 09:01:22] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 09:01:22 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 09:01:22] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 09:01:22] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 09:01:22] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 09:01:22] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(7)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 09:01:25] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 09:01:25] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization completed in 3540 ms 
[INFO][2017-08-09 09:01:25] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 09:01:25] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 09:01:25 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 09:01:25] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 09:01:27] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(7)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:28] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:01:29] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(7)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 09:01:25 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 09:01:30] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(7)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 09:01:30] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 09:01:30] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(7)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-49637-1502240490424-1:1,clientId=null,started=false} 
[INFO][2017-08-09 09:02:54] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 09:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(7)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 09:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(7)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 09:02:55] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 89632 ms 
[INFO][2017-08-09 09:06:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 09:06:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:chenbin
 
[INFO][2017-08-09 09:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:351
参数2:1032
 
[INFO][2017-08-09 09:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:352
参数2:1032
 
[INFO][2017-08-09 09:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:375
参数2:1032
 
[INFO][2017-08-09 09:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:380
参数2:1032
 
[INFO][2017-08-09 09:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:353
参数2:1032
 
[INFO][2017-08-09 09:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:376
参数2:1032
 
[INFO][2017-08-09 09:06:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:06:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:372
参数2:1032
 
[INFO][2017-08-09 09:06:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:06:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:354
参数2:1032
 
[INFO][2017-08-09 09:06:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:06:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:355
参数2:1032
 
[INFO][2017-08-09 09:06:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:06:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:356
参数2:1032
 
[INFO][2017-08-09 09:06:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 09:06:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-08-09 09:06:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 09:06:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:06:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 09:06:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 09:06:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 09:06:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 09:06:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:06:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:06:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 09:06:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 09:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 09:11:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-09 09:11:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:11:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 09:11:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 09:11:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 09:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 09:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 09:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 09:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 09:11:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:11:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 09:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 09:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 09:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 09:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 09:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:13:06] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 09:01:25 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 09:13:06] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 09:13:07] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 09:13:07] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 09:01:22 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 09:13:07] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 09:13:26] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(4)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 09:13:26] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(4)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 09:13:26 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 09:13:26] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 09:13:26] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 09:13:26] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 09:13:26] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(4)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 09:13:28] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(4)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 09:13:28] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(4)-127.0.0.1 Root WebApplicationContext: initialization completed in 2574 ms 
[INFO][2017-08-09 09:13:28] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(4)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 09:13:28] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(4)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 09:13:28 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 09:13:28] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 09:13:30] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(4)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:31] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 09:13:32] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(4)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 09:13:28 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 09:13:33] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(4)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 09:13:33] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(4)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 09:13:33] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(4)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50385-1502241213438-1:1,clientId=null,started=false} 
[INFO][2017-08-09 09:13:33] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 09:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(4)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 09:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(4)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 09:13:34] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(4)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5233 ms 
[INFO][2017-08-09 09:13:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 09:13:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:chenbin
 
[INFO][2017-08-09 09:13:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:13:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:351
参数2:1032
 
[INFO][2017-08-09 09:13:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:13:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:352
参数2:1032
 
[INFO][2017-08-09 09:13:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:13:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:375
参数2:1032
 
[INFO][2017-08-09 09:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:380
参数2:1032
 
[INFO][2017-08-09 09:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:353
参数2:1032
 
[INFO][2017-08-09 09:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:376
参数2:1032
 
[INFO][2017-08-09 09:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:372
参数2:1032
 
[INFO][2017-08-09 09:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:354
参数2:1032
 
[INFO][2017-08-09 09:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:13:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:355
参数2:1032
 
[INFO][2017-08-09 09:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 09:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:356
参数2:1032
 
[INFO][2017-08-09 09:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 09:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
 
[INFO][2017-08-09 09:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 09:13:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 09:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 09:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 09:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 09:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 09:13:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 09:14:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 09:14:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:14:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 09:14:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:14:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:
 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 09:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 09:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 09:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 09:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 09:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 09:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 09:14:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 09:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:14:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:14:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            meituan_cat_id
         , 
            type
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 09:14:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
参数2:0
参数3:null
参数4:1
参数5:测试-蔬菜
参数6:5
参数7:少时诵诗书
参数8:0
 
[INFO][2017-08-09 09:14:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:14:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 09:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 09:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 09:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 09:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 09:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 09:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 09:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 09:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-08-09 09:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 09:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:18:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:18:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 09:18:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:18:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 09:18:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:18:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 09:18:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 09:18:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 09:18:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 09:18:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:18:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 09:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 09:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 09:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 09:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-09 09:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:18:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 09:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-09 09:19:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 09:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 09:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-09 09:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:31:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:31:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-09 09:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-09 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 09:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 09:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 09:35:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:35:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:35:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 09:35:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:35:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:35:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-08-09 09:35:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            meituan_cat_id
         , 
            type
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 09:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
参数2:0
参数3:null
参数4:1
参数5:测试-调料
参数6:1
参数7:少时诵诗书
参数8:0
 
[INFO][2017-08-09 09:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 09:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 09:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 09:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 09:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 09:36:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:36:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:36:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-09 09:36:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:36:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            meituan_cat_id
         , 
            type
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 09:36:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
参数2:0
参数3:null
参数4:1
参数5:测试-五谷杂粮
参数6:8
参数7:少时诵诗书
参数8:0
 
[INFO][2017-08-09 09:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:37:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                class_name = ?
            ,
                listorder = ?
            ,
                class_desc = ?
            ,
                brand_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-08-09 09:37:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
参数2:0
参数3:null
参数4:1
参数5:测试-五谷杂粮
参数6:8
参数7:少时诵诗书2
参数8:0
参数9:0
 
[INFO][2017-08-09 09:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                class_name = ?
            ,
                listorder = ?
            ,
                class_desc = ?
            ,
                brand_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-08-09 09:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
参数2:0
参数3:null
参数4:1
参数5:测试-五谷杂粮
参数6:8
参数7:少时诵诗书2
参数8:0
参数9:0
 
[INFO][2017-08-09 09:38:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:38:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:38:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:38:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:38:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 09:38:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 09:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:39:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:39:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 09:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 09:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 09:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 09:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 09:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 09:40:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:40:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 09:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:40:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 09:40:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                class_name = ?
            ,
                listorder = ?
            ,
                class_desc = ?
            ,
                brand_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-08-09 09:40:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
参数2:0
参数3:null
参数4:1
参数5:测试-五谷杂粮
参数6:8
参数7:少时诵诗书3
参数8:0
参数9:0
 
[INFO][2017-08-09 09:40:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:40:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:40:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:40:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                class_name = ?
            ,
                listorder = ?
            ,
                class_desc = ?
            ,
                brand_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-08-09 09:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
参数2:0
参数3:null
参数4:1
参数5:测试-五谷杂粮
参数6:9
参数7:少时诵诗书
参数8:0
参数9:0
 
[INFO][2017-08-09 09:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:40:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:40:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:40:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:40:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:40:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 09:42:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                class_name = ?
            ,
                listorder = ?
            ,
                class_desc = ?
            ,
                brand_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-08-09 09:42:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
参数2:0
参数3:null
参数4:1
参数5:测试-五谷杂粮
参数6:8
参数7:少时诵诗书2
参数8:0
参数9:0
 
[INFO][2017-08-09 09:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:43:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:43:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 09:43:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:43:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:43:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 09:43:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:43:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:43:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:43:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:43:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 09:43:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 09:43:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 09:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 09:43:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:43:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:43:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:43:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 09:43:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 09:43:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 09:48:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:48:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 09:48:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 09:48:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-09 09:48:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:48:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 09:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 09:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 09:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 09:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 09:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 09:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 09:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 09:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 09:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 10:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-09 10:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:04:40] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 09:13:28 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 10:04:40] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 10:04:41] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 10:04:41] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 09:13:26 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 10:04:41] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 10:04:53] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 10:04:54] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 10:04:54 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 10:04:54] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 10:04:54] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 10:04:54] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 10:04:54] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 10:04:56] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 10:04:56] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2713 ms 
[INFO][2017-08-09 10:04:56] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 10:04:56] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 10:04:56 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 10:04:56] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 10:04:58] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkName(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:04:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:05:00] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 10:04:56 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 10:05:00] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 10:05:01] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 10:05:01] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51508-1502244301103-1:1,clientId=null,started=false} 
[INFO][2017-08-09 10:05:01] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 10:05:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 10:05:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 10:05:01] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5113 ms 
[INFO][2017-08-09 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:chenbin
 
[INFO][2017-08-09 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:351
参数2:1032
 
[INFO][2017-08-09 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:352
参数2:1032
 
[INFO][2017-08-09 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:375
参数2:1032
 
[INFO][2017-08-09 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:380
参数2:1032
 
[INFO][2017-08-09 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:353
参数2:1032
 
[INFO][2017-08-09 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:376
参数2:1032
 
[INFO][2017-08-09 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:372
参数2:1032
 
[INFO][2017-08-09 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:354
参数2:1032
 
[INFO][2017-08-09 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:355
参数2:1032
 
[INFO][2017-08-09 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:356
参数2:1032
 
[INFO][2017-08-09 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:0
 
[INFO][2017-08-09 10:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 10:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-09 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-09 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-09 10:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 10:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 10:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 10:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 10:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 10:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 10:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 10:05:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:05:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 10:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 10:07:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:07:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:07:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:07:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:07:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:07:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:07:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 10:08:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:08:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:08:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:08:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:09:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:09:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 10:09:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:09:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:09:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:09:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:09:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:09:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:09:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:09:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:09:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:09:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:10:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:10:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:10:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 10:10:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 10:10:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:10:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:11:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:11:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:11:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 10:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:15:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 10:15:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 10:15:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:15:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:19:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:19:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:19:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 10:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 10:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 10:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:19:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:19:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 10:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 10:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:23:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:23:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:24:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:24:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 10:24:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:24:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:24:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:24:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:25:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:25:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:25:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:25:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:25:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 10:25:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-09 10:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 10:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:26:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:26:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 10:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:28:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 10:28:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:28:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:28:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:28:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:28:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            meituan_cat_id
         , 
            type
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:28:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
参数2:0
参数3:null
参数4:1
参数5:测试-调料
参数6:2
参数7:少时诵诗书
参数8:0
 
[INFO][2017-08-09 10:28:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:28:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:28:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-08-09 10:28:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:29:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 10:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 10:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 10:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 10:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 10:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 10:29:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:29:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:29:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:29:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-五谷杂粮
参数8:8
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 10:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-调料
参数8:1
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 10:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-蔬菜
参数8:5
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 10:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-水果
参数8:6
参数9:少时诵诗书
参数10:1
 
[INFO][2017-08-09 10:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-09 10:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:29:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:29:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:29:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 10:30:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 10:30:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 10:30:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:30:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:30:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:30:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:30:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-09 10:30:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:30:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 10:30:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:30:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:30:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:30:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-09 10:30:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:30:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-09 10:30:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:30:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 10:30:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 10:30:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[WARN][2017-08-09 10:30:23] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-09 10:30:23] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-09 10:30:23] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-09 10:30:23] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-09 10:30:25] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-09 10:30:25] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-09 10:34:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:34:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:34:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 10:34:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:34:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:34:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:34:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:35:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:35:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:35:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:35:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:35:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 10:35:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-五谷杂粮
参数8:8
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-调料
参数8:1
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-蔬菜
参数8:5
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-水果
参数8:6
参数9:少时诵诗书
参数10:1
 
[INFO][2017-08-09 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-09 10:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:36:25] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 10:04:56 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 10:36:25] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 10:36:26] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 10:36:26] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 10:04:54 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 10:36:26] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 10:36:38] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 10:36:38] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 10:36:38 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 10:36:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 10:36:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 10:36:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 10:36:38] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 10:36:40] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 10:36:40] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2792 ms 
[INFO][2017-08-09 10:36:40] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 10:36:40] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 10:36:40 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 10:36:40] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 10:36:42] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkName(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:36:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:36:44] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 10:36:40 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 10:36:44] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 10:36:45] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 10:36:45] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52552-1502246205184-1:1,clientId=null,started=false} 
[INFO][2017-08-09 10:36:45] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 10:36:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 10:36:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 10:36:45] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5091 ms 
[INFO][2017-08-09 10:37:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 10:37:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:chenbin
 
[INFO][2017-08-09 10:37:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:37:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:351
参数2:1032
 
[INFO][2017-08-09 10:37:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:37:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:352
参数2:1032
 
[INFO][2017-08-09 10:37:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:37:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:375
参数2:1032
 
[INFO][2017-08-09 10:37:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:37:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:380
参数2:1032
 
[INFO][2017-08-09 10:37:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:37:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:353
参数2:1032
 
[INFO][2017-08-09 10:37:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:37:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:376
参数2:1032
 
[INFO][2017-08-09 10:37:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:37:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:372
参数2:1032
 
[INFO][2017-08-09 10:37:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:37:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:354
参数2:1032
 
[INFO][2017-08-09 10:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:355
参数2:1032
 
[INFO][2017-08-09 10:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:356
参数2:1032
 
[INFO][2017-08-09 10:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 10:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
 
[INFO][2017-08-09 10:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 10:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 10:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 10:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 10:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 10:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 10:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 10:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 10:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 10:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 10:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 10:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 10:37:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:37:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:37:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:37:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:37:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:37:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-五谷杂粮
参数8:8
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 10:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-调料
参数8:1
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 10:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-蔬菜
参数8:5
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 10:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-水果
参数8:6
参数9:少时诵诗书
参数10:1
 
[INFO][2017-08-09 10:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-09 10:37:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:38:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:38:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-09 10:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 10:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 10:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-09 10:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:42:22] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 10:36:40 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 10:42:22] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 10:42:23] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 10:42:23] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 10:36:38 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 10:42:23] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 10:42:36] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 10:42:36] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 10:42:36 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 10:42:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 10:42:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 10:42:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 10:42:36] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 10:42:38] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 10:42:38] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2651 ms 
[INFO][2017-08-09 10:42:39] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 10:42:39] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 10:42:39 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 10:42:39] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 10:42:40] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkName(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:42:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:42:43] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 10:42:39 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 10:42:43] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 10:42:43] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 10:42:43] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52654-1502246563593-1:1,clientId=null,started=false} 
[INFO][2017-08-09 10:42:43] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 10:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 10:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 10:42:44] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5257 ms 
[INFO][2017-08-09 10:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 10:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:chenbin
 
[INFO][2017-08-09 10:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:351
参数2:1032
 
[INFO][2017-08-09 10:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:352
参数2:1032
 
[INFO][2017-08-09 10:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:375
参数2:1032
 
[INFO][2017-08-09 10:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:380
参数2:1032
 
[INFO][2017-08-09 10:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:353
参数2:1032
 
[INFO][2017-08-09 10:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:376
参数2:1032
 
[INFO][2017-08-09 10:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:372
参数2:1032
 
[INFO][2017-08-09 10:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:354
参数2:1032
 
[INFO][2017-08-09 10:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:355
参数2:1032
 
[INFO][2017-08-09 10:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:356
参数2:1032
 
[INFO][2017-08-09 10:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 10:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
 
[INFO][2017-08-09 10:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 10:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 10:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 10:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 10:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 10:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 10:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 10:43:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:43:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:43:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 10:43:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:43:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 10:43:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:43:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 10:43:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 10:43:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 10:43:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 10:43:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:43:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:43:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:43:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:43:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-09 10:43:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-09 10:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:43:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:43:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-09 10:43:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:43:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-09 10:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 10:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
参数2:测试-水果
 
[INFO][2017-08-09 10:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-水果
参数8:6
参数9:少时诵诗书
参数10:1
 
[INFO][2017-08-09 10:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 10:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
参数2:测试-蔬菜
 
[INFO][2017-08-09 10:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-蔬菜
参数8:5
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 10:43:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 10:43:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
参数2:测试-调料
 
[INFO][2017-08-09 10:43:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:43:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-调料
参数8:1
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 10:43:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 10:43:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
参数2:测试-五谷杂粮
 
[INFO][2017-08-09 10:43:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:43:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-五谷杂粮
参数8:8
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 10:43:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:43:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:43:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 10:43:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-09 10:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-09 10:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 10:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
参数2:测试-水果
 
[INFO][2017-08-09 10:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 10:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
参数2:测试-蔬菜
 
[INFO][2017-08-09 10:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 10:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
参数2:测试-调料
 
[INFO][2017-08-09 10:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 10:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
参数2:测试-五谷杂粮
 
[INFO][2017-08-09 10:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 10:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:44:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:44:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-09 10:44:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:44:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-09 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-09 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-09 10:44:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:44:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:11
 
[INFO][2017-08-09 10:44:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:44:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:11
 
[INFO][2017-08-09 10:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-09 10:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-09 10:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-09 10:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-09 10:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:12
 
[INFO][2017-08-09 10:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ) 
[INFO][2017-08-09 10:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:12
 
[INFO][2017-08-09 10:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:11
 
[INFO][2017-08-09 10:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:11
 
[INFO][2017-08-09 10:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-08-09 10:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-08-09 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-09 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-09 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-09 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-09 10:45:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:45:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 10:45:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:45:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:45:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 10:45:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
参数2:测试-调料
 
[INFO][2017-08-09 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            meituan_cat_id
         , 
            type
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
参数2:0
参数3:null
参数4:1
参数5:测试-调料
参数6:2
参数7:少时诵诗书
参数8:0
 
[INFO][2017-08-09 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 13 
[INFO][2017-08-09 10:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:47:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 10:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 10:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-09 10:51:54] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 10:42:39 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 10:51:54] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 10:51:55] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 10:51:55] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 10:42:36 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 10:51:55] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 10:52:07] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 10:52:07] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 10:52:07 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 10:52:07] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 10:52:08] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 10:52:08] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 10:52:08] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 10:52:10] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 10:52:10] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2759 ms 
[INFO][2017-08-09 10:52:10] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 10:52:10] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 10:52:10 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 10:52:10] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 10:52:12] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 10:52:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 10:52:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 10:52:10 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 10:52:14] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 10:52:14] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 10:52:14] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52796-1502247134736-1:1,clientId=null,started=false} 
[INFO][2017-08-09 10:52:14] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 10:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 10:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 10:52:15] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 4832 ms 
[INFO][2017-08-09 10:53:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 10:53:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:chenbin
 
[INFO][2017-08-09 10:53:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:53:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:351
参数2:1032
 
[INFO][2017-08-09 10:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:352
参数2:1032
 
[INFO][2017-08-09 10:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:375
参数2:1032
 
[INFO][2017-08-09 10:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:380
参数2:1032
 
[INFO][2017-08-09 10:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:353
参数2:1032
 
[INFO][2017-08-09 10:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:376
参数2:1032
 
[INFO][2017-08-09 10:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:372
参数2:1032
 
[INFO][2017-08-09 10:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:354
参数2:1032
 
[INFO][2017-08-09 10:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:355
参数2:1032
 
[INFO][2017-08-09 10:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 10:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:356
参数2:1032
 
[INFO][2017-08-09 10:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 10:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
 
[INFO][2017-08-09 10:53:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 10:53:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:53:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 10:53:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 10:53:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:53:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:53:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 10:53:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 10:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 10:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 10:53:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 10:53:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:53:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 10:53:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:53:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:53:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:
 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 10:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 10:53:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:53:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:53:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 10:53:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:53:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 10:53:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:53:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 10:53:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 10:53:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ? 
[INFO][2017-08-09 10:53:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 10:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 10:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 10:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 10:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 10:54:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:54:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:54:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 10:54:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 10:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
参数2:测试-调料
 
[INFO][2017-08-09 10:54:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 10:54:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
参数2:测试-调料
 
[INFO][2017-08-09 10:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 10:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 10:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 10:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 10:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-09 10:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 10:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-09 10:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 10:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 10:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 10:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 10:58:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 11:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 11:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 11:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 11:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 11:13:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:13:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:13:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:13:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:13:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 11:13:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 11:14:03] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 10:52:10 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:14:03] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 11:14:04] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 11:14:04] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 10:52:07 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 11:14:04] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 11:14:16] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 11:14:17] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 11:14:17 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 11:14:17] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 11:14:17] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 11:14:17] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 11:14:17] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 11:14:19] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 11:14:19] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2612 ms 
[INFO][2017-08-09 11:14:19] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 11:14:19] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:14:19 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:14:19] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 11:14:21] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:14:22] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:14:23] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:14:19 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:14:23] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 11:14:23] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 11:14:24] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-53210-1502248463997-1:1,clientId=null,started=false} 
[INFO][2017-08-09 11:14:24] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 11:14:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 11:14:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 11:14:24] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5065 ms 
[INFO][2017-08-09 11:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 11:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:chenbin
 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:351
参数2:1032
 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:352
参数2:1032
 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:375
参数2:1032
 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:380
参数2:1032
 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:353
参数2:1032
 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:376
参数2:1032
 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:372
参数2:1032
 
[INFO][2017-08-09 11:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:354
参数2:1032
 
[INFO][2017-08-09 11:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:355
参数2:1032
 
[INFO][2017-08-09 11:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:356
参数2:1032
 
[INFO][2017-08-09 11:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 11:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-08-09 11:14:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:14:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:14:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 11:14:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 11:14:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:14:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:14:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 11:14:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 11:14:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 11:14:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 11:14:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:14:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:14:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 11:14:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:14:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:14:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:14:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:14:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:9
 
[INFO][2017-08-09 11:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:10
 
[INFO][2017-08-09 11:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:11
 
[INFO][2017-08-09 11:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:12
 
[INFO][2017-08-09 11:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:13
 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:14
 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:15
 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:16
 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:17
 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:18
 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:19
 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:20
 
[INFO][2017-08-09 11:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:21
 
[INFO][2017-08-09 11:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:9
 
[INFO][2017-08-09 11:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:10
 
[INFO][2017-08-09 11:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:11
 
[INFO][2017-08-09 11:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:12
 
[INFO][2017-08-09 11:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:13
 
[INFO][2017-08-09 11:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:14
 
[INFO][2017-08-09 11:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:15
 
[INFO][2017-08-09 11:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:16
 
[INFO][2017-08-09 11:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:17
 
[INFO][2017-08-09 11:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:18
 
[INFO][2017-08-09 11:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:19
 
[INFO][2017-08-09 11:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:20
 
[INFO][2017-08-09 11:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:21
 
[INFO][2017-08-09 11:15:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 11:15:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:15:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 11:15:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:15:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:15:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:
 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:15:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:15:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:15:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 11:15:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:15:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:15:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:15:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:15:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:16:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:16:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:9
 
[INFO][2017-08-09 11:17:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:17:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:10
 
[INFO][2017-08-09 11:18:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:18:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:11
 
[INFO][2017-08-09 11:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:12
 
[INFO][2017-08-09 11:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:19:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:13
 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:14
 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:15
 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:16
 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:17
 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:18
 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:19
 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:19:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:20
 
[INFO][2017-08-09 11:19:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:19:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:21
 
[WARN][2017-08-09 11:22:56] org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:251) ActiveMQ Transport: tcp:///127.0.0.1:61616@53211 Transport (tcp://127.0.0.1:61616) failed, reason:  java.io.EOFException, attempting to automatically reconnect 
[INFO][2017-08-09 11:23:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 11:23:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-09 11:23:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:23:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:23:04] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1042) ActiveMQ Task-3 Successfully reconnected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 11:23:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:23:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:23:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:23:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:23:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:9
 
[INFO][2017-08-09 11:23:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:10
 
[INFO][2017-08-09 11:23:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:11
 
[INFO][2017-08-09 11:23:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:12
 
[INFO][2017-08-09 11:23:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:13
 
[INFO][2017-08-09 11:23:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:14
 
[INFO][2017-08-09 11:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:15
 
[INFO][2017-08-09 11:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:16
 
[INFO][2017-08-09 11:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:17
 
[INFO][2017-08-09 11:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:18
 
[INFO][2017-08-09 11:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:19
 
[INFO][2017-08-09 11:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:20
 
[INFO][2017-08-09 11:23:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:21
 
[INFO][2017-08-09 11:23:09] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:14:19 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:23:09] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 11:23:09] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 11:23:09] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 11:14:17 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 11:23:09] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 11:23:23] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 11:23:23] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 11:23:23 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 11:23:23] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 11:23:23] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 11:23:24] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 11:23:24] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 11:23:26] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 11:23:26] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2668 ms 
[INFO][2017-08-09 11:23:26] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 11:23:26] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:23:26 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:23:26] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 11:23:28] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:23:29] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:23:30] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:23:26 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:23:30] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 11:23:30] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 11:23:30] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-53340-1502249010635-1:1,clientId=null,started=false} 
[INFO][2017-08-09 11:23:30] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 11:23:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 11:23:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 11:23:31] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5015 ms 
[INFO][2017-08-09 11:23:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 11:23:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:chenbin
 
[INFO][2017-08-09 11:23:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:23:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:351
参数2:1032
 
[INFO][2017-08-09 11:23:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:23:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:352
参数2:1032
 
[INFO][2017-08-09 11:23:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:23:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:375
参数2:1032
 
[INFO][2017-08-09 11:23:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:23:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:380
参数2:1032
 
[INFO][2017-08-09 11:23:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:23:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:353
参数2:1032
 
[INFO][2017-08-09 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:376
参数2:1032
 
[INFO][2017-08-09 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:372
参数2:1032
 
[INFO][2017-08-09 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:354
参数2:1032
 
[INFO][2017-08-09 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:355
参数2:1032
 
[INFO][2017-08-09 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:356
参数2:1032
 
[INFO][2017-08-09 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:0
 
[INFO][2017-08-09 11:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 11:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 11:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 11:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 11:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 11:23:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-09 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:10
 
[INFO][2017-08-09 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:11
 
[INFO][2017-08-09 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:12
 
[INFO][2017-08-09 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:13
 
[INFO][2017-08-09 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:14
 
[INFO][2017-08-09 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:15
 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:16
 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:17
 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:18
 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:19
 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:20
 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:21
 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:9
 
[INFO][2017-08-09 11:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:10
 
[INFO][2017-08-09 11:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:11
 
[INFO][2017-08-09 11:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:12
 
[INFO][2017-08-09 11:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:13
 
[INFO][2017-08-09 11:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:14
 
[INFO][2017-08-09 11:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:15
 
[INFO][2017-08-09 11:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:16
 
[INFO][2017-08-09 11:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:17
 
[INFO][2017-08-09 11:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:18
 
[INFO][2017-08-09 11:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:19
 
[INFO][2017-08-09 11:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:20
 
[INFO][2017-08-09 11:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:21
 
[INFO][2017-08-09 11:26:44] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:23:26 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:26:44] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 11:26:45] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 11:26:45] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 11:23:23 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 11:26:45] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 11:26:57] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 11:26:57] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 11:26:57 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 11:26:57] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 11:26:57] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 11:26:58] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 11:26:58] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 11:27:00] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 11:27:00] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2686 ms 
[INFO][2017-08-09 11:27:00] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 11:27:00] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:27:00 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:27:00] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 11:27:02] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:27:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:27:04] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:27:00 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:27:04] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 11:27:05] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 11:27:05] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-53429-1502249225077-1:1,clientId=null,started=false} 
[INFO][2017-08-09 11:27:05] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 11:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 11:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 11:27:05] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5432 ms 
[INFO][2017-08-09 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:chenbin
 
[INFO][2017-08-09 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:351
参数2:1032
 
[INFO][2017-08-09 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:352
参数2:1032
 
[INFO][2017-08-09 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:375
参数2:1032
 
[INFO][2017-08-09 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:380
参数2:1032
 
[INFO][2017-08-09 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:353
参数2:1032
 
[INFO][2017-08-09 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:376
参数2:1032
 
[INFO][2017-08-09 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:372
参数2:1032
 
[INFO][2017-08-09 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:354
参数2:1032
 
[INFO][2017-08-09 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:355
参数2:1032
 
[INFO][2017-08-09 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:356
参数2:1032
 
[INFO][2017-08-09 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-08-09 11:27:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:27:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:
 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 11:27:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:27:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:27:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:27:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 11:27:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:27:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:27:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:27:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:27:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:27:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:9
 
[INFO][2017-08-09 11:27:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:10
 
[INFO][2017-08-09 11:27:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:11
 
[INFO][2017-08-09 11:27:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:12
 
[INFO][2017-08-09 11:27:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:13
 
[INFO][2017-08-09 11:27:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:14
 
[INFO][2017-08-09 11:27:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:15
 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:16
 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:17
 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:18
 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:19
 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:20
 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:21
 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:9
 
[INFO][2017-08-09 11:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:10
 
[INFO][2017-08-09 11:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:11
 
[INFO][2017-08-09 11:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:12
 
[INFO][2017-08-09 11:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:13
 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:14
 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:15
 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:16
 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:17
 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:18
 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:19
 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:20
 
[INFO][2017-08-09 11:27:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:27:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:21
 
[INFO][2017-08-09 11:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:28:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[WARN][2017-08-09 11:28:25] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String 
[INFO][2017-08-09 11:28:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 11:28:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:28:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:28:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[WARN][2017-08-09 11:28:40] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String 
[INFO][2017-08-09 11:28:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 11:28:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:28:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:28:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[WARN][2017-08-09 11:30:31] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String 
[INFO][2017-08-09 11:30:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 11:30:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:30:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:30:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 11:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[WARN][2017-08-09 11:31:56] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String 
[INFO][2017-08-09 11:31:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:31:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:31:57] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:27:00 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:31:57] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 11:31:57] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 11:31:58] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 11:26:57 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 11:31:58] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 11:32:11] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 11:32:11] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 11:32:11 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 11:32:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 11:32:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 11:32:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 11:32:11] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 11:32:13] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 11:32:13] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2744 ms 
[INFO][2017-08-09 11:32:13] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 11:32:13] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:32:13 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:32:13] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 11:32:15] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:32:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:32:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:32:13 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:32:17] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 11:32:18] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 11:32:18] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-53550-1502249538174-1:1,clientId=null,started=false} 
[INFO][2017-08-09 11:32:18] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 11:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 11:32:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 11:32:18] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5132 ms 
[INFO][2017-08-09 11:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 11:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:chenbin
 
[INFO][2017-08-09 11:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:351
参数2:1032
 
[INFO][2017-08-09 11:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:352
参数2:1032
 
[INFO][2017-08-09 11:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:375
参数2:1032
 
[INFO][2017-08-09 11:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:380
参数2:1032
 
[INFO][2017-08-09 11:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:353
参数2:1032
 
[INFO][2017-08-09 11:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:376
参数2:1032
 
[INFO][2017-08-09 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:372
参数2:1032
 
[INFO][2017-08-09 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:354
参数2:1032
 
[INFO][2017-08-09 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:355
参数2:1032
 
[INFO][2017-08-09 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:356
参数2:1032
 
[INFO][2017-08-09 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
 
[INFO][2017-08-09 11:32:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:32:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 11:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 11:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 11:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 11:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 11:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[WARN][2017-08-09 11:32:40] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-09 11:32:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 11:32:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:32:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:32:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:33:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 11:33:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[WARN][2017-08-09 11:33:35] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-09 11:33:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:33:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:33:36] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:32:13 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:33:36] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 11:33:36] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 11:33:36] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 11:32:11 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 11:33:36] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 11:33:49] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 11:33:49] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 11:33:49 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 11:33:49] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 11:33:49] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 11:33:49] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 11:33:50] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 11:33:52] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 11:33:52] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2536 ms 
[INFO][2017-08-09 11:33:52] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 11:33:52] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:33:52 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:33:52] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 11:33:53] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:54] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 11:33:55] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:33:52 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 11:33:56] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 11:33:56] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 11:33:56] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-53616-1502249636421-1:1,clientId=null,started=false} 
[INFO][2017-08-09 11:33:56] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 11:33:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 11:33:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 11:33:57] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5274 ms 
[INFO][2017-08-09 11:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 11:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:chenbin
 
[INFO][2017-08-09 11:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:351
参数2:1032
 
[INFO][2017-08-09 11:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:352
参数2:1032
 
[INFO][2017-08-09 11:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:375
参数2:1032
 
[INFO][2017-08-09 11:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:380
参数2:1032
 
[INFO][2017-08-09 11:34:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:34:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:353
参数2:1032
 
[INFO][2017-08-09 11:34:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:34:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:376
参数2:1032
 
[INFO][2017-08-09 11:34:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:34:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:372
参数2:1032
 
[INFO][2017-08-09 11:34:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:34:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:354
参数2:1032
 
[INFO][2017-08-09 11:34:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:34:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:355
参数2:1032
 
[INFO][2017-08-09 11:34:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 11:34:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:356
参数2:1032
 
[INFO][2017-08-09 11:34:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 11:34:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
 
[INFO][2017-08-09 11:34:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:34:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 11:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 11:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-09 11:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:10
 
[INFO][2017-08-09 11:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:11
 
[INFO][2017-08-09 11:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:12
 
[INFO][2017-08-09 11:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:13
 
[INFO][2017-08-09 11:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:14
 
[INFO][2017-08-09 11:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:15
 
[INFO][2017-08-09 11:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:16
 
[INFO][2017-08-09 11:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:17
 
[INFO][2017-08-09 11:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:18
 
[INFO][2017-08-09 11:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:19
 
[INFO][2017-08-09 11:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:20
 
[INFO][2017-08-09 11:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:21
 
[INFO][2017-08-09 11:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 11:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:9
 
[INFO][2017-08-09 11:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:10
 
[INFO][2017-08-09 11:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:11
 
[INFO][2017-08-09 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:12
 
[INFO][2017-08-09 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:13
 
[INFO][2017-08-09 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:14
 
[INFO][2017-08-09 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:15
 
[INFO][2017-08-09 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:16
 
[INFO][2017-08-09 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:17
 
[INFO][2017-08-09 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:18
 
[INFO][2017-08-09 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:19
 
[INFO][2017-08-09 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:20
 
[INFO][2017-08-09 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:21
 
[INFO][2017-08-09 11:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 11:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 11:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 11:43:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:43:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 11:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 11:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 11:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 11:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 11:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 11:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 11:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 11:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 11:50:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:50:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:50:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:50:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:50:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:50:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:50:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:50:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:50:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:50:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 11:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-09 11:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 11:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-09 11:51:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:51:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 11:51:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:51:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:51:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:51:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:51:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:51:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:51:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:51:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:51:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:51:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:51:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:51:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:51:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:51:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:51:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:51:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 11:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 11:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:28
 
[INFO][2017-08-09 11:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ) 
[INFO][2017-08-09 11:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:28
 
[INFO][2017-08-09 11:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 11:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-09 11:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 11:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-09 11:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:53:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:53:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:53:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:53:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:53:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 11:53:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-09 11:53:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 11:53:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-09 11:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 11:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-09 11:55:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:55:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:55:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 11:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 11:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 11:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 11:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 11:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 11:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:55:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:55:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:55:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:55:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-08-09 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 11:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 11:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:测试-五谷杂粮
 
[INFO][2017-08-09 11:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 11:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-五谷杂粮
参数8:8
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 11:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 11:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:测试-调料
 
[INFO][2017-08-09 11:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 11:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-调料
参数8:1
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 11:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 11:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:测试-蔬菜
 
[INFO][2017-08-09 11:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 11:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-蔬菜
参数8:5
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 11:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 11:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:测试-水果
 
[INFO][2017-08-09 11:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 11:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-水果
参数8:6
参数9:少时诵诗书
参数10:1
 
[INFO][2017-08-09 11:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 11:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:测试-水果
 
[INFO][2017-08-09 11:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 11:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:测试-蔬菜
 
[INFO][2017-08-09 11:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 11:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:测试-调料
 
[INFO][2017-08-09 11:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 11:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:测试-五谷杂粮
 
[INFO][2017-08-09 11:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 11:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:测试-五谷杂粮
 
[INFO][2017-08-09 11:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 11:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:测试-调料
 
[INFO][2017-08-09 11:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 11:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:测试-蔬菜
 
[INFO][2017-08-09 11:56:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 11:56:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:28
参数2:测试-水果
 
[INFO][2017-08-09 11:56:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:56:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:56:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:56:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 11:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 16 
[INFO][2017-08-09 11:56:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 11:56:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 11:56:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:28
 
[INFO][2017-08-09 11:56:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 11:56:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:28
 
[INFO][2017-08-09 11:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 16 and 16 
[INFO][2017-08-09 11:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 11:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 11:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 11:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 11:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 11:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 11:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 11:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 11:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 12:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 12:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 12:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-09 12:05:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:05:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 12:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 12:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 12:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 12:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 12:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 12:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 12:05:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:05:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 12:05:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 16 
[INFO][2017-08-09 12:05:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 12:05:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:05:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 12:05:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 16 
[INFO][2017-08-09 12:05:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 12:06:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 12:06:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-09 12:06:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 12:06:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-09 12:06:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 12:06:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-09 12:06:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 12:06:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-09 12:06:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 12:06:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:25
参数2:测试-五谷杂粮
 
[INFO][2017-08-09 12:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 12:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:25
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-五谷杂粮
参数8:8
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 12:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 12:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:25
参数2:测试-调料
 
[INFO][2017-08-09 12:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 12:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:25
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-调料
参数8:1
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 12:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 12:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:25
参数2:测试-蔬菜
 
[INFO][2017-08-09 12:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 12:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:25
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-蔬菜
参数8:5
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 12:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 12:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:25
参数2:测试-水果
 
[INFO][2017-08-09 12:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 12:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:25
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-水果
参数8:6
参数9:少时诵诗书
参数10:1
 
[INFO][2017-08-09 12:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 12:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 12:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 12:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 12:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 12:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-09 12:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 12:09:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:09:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 12:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 12:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 12:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 12:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 12:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 12:09:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:09:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 12:10:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:10:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:10:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 12:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 12:13:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:13:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 12:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 12:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 12:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 12:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:13:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:13:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 12:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 12:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 12:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 12:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 12:15:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 12:15:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 12:15:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 12:15:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 12:16:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 12:16:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-09 12:16:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 12:16:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-09 12:16:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 12:16:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:25
 
[INFO][2017-08-09 12:16:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 12:16:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:25
 
[INFO][2017-08-09 12:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 12:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:11
 
[INFO][2017-08-09 12:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 12:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:11
 
[INFO][2017-08-09 12:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 12:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 12:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 12:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 12:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 12:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 12:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 12:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 12:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 12:16:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 12:16:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 12:16:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 12:16:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 12:16:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 12:16:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-09 12:16:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 12:16:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-09 12:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 12:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 12:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ) 
[INFO][2017-08-09 12:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 12:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 12:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 12:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 12:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 12:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 12:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-09 12:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 12:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-09 12:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 12:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 12:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 12:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 12:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 12:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 12:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 12:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-09 12:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 12:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 12:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-09 12:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 12:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 12:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 12:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-09 12:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 12:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 12:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 12:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 12:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 12:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 12:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 12:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 12:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 12:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 13:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 13:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 13:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 13:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 13:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 13:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 13:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 13:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 13:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 13:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 13:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 13:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 13:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 13:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-09 13:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 13:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-09 13:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 13:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 13:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 13:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 13:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-09 13:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 13:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 13:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 13:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 13:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:13
 
[INFO][2017-08-09 13:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ) 
[INFO][2017-08-09 13:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:13
 
[INFO][2017-08-09 13:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-09 13:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 13:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-09 13:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 13:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 13:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 13:35:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:35:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 13:35:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 13:35:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 13:35:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:35:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:35:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 13:35:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 13:35:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-09 13:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 13:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-09 13:35:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:35:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 13:35:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 13:35:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 13:35:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:35:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-09 13:35:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 13:35:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-09 13:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-09 13:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 13:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-09 13:35:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:35:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:11
 
[INFO][2017-08-09 13:35:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 13:35:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:11
 
[INFO][2017-08-09 13:35:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:35:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-08-09 13:35:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 13:35:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-08-09 13:38:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-09 13:38:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:0
 
[INFO][2017-08-09 13:38:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-09 13:38:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:0
 
[INFO][2017-08-09 13:38:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-09 13:38:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
 
[INFO][2017-08-09 13:38:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-09 13:38:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
 
[INFO][2017-08-09 13:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:0
 
[INFO][2017-08-09 13:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-08-09 13:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:0
 
[INFO][2017-08-09 13:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:0
 
[INFO][2017-08-09 13:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-08-09 13:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:0
 
[INFO][2017-08-09 13:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:0
 
[INFO][2017-08-09 13:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-08-09 13:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:0
 
[INFO][2017-08-09 13:38:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-09 13:38:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:0
 
[INFO][2017-08-09 13:38:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-09 13:38:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
参数2:0
 
[INFO][2017-08-09 13:38:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-09 13:38:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
 
[INFO][2017-08-09 13:38:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-09 13:38:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
 
[INFO][2017-08-09 13:38:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:38:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:0
 
[INFO][2017-08-09 13:38:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-08-09 13:38:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:0
 
[INFO][2017-08-09 13:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-09 13:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:0
 
[INFO][2017-08-09 13:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-09 13:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
参数2:0
 
[INFO][2017-08-09 13:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-09 13:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
 
[INFO][2017-08-09 13:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-09 13:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
 
[INFO][2017-08-09 13:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:0
 
[INFO][2017-08-09 13:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-08-09 13:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:0
 
[INFO][2017-08-09 13:39:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 13:39:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 13:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 13:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 13:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 13:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 13:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 13:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 13:39:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 13:39:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 13:39:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 13:39:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 13:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 13:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 13:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 13:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[WARN][2017-08-09 13:44:46] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String 
[INFO][2017-08-09 13:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 13:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 13:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 13:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 13:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[WARN][2017-08-09 13:45:20] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String 
[INFO][2017-08-09 13:45:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 13:45:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:45:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 13:45:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[WARN][2017-08-09 13:45:43] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String 
[INFO][2017-08-09 13:45:51] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 11:33:52 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 13:45:51] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 13:45:52] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 13:45:52] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 11:33:49 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 13:45:52] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 13:46:03] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 13:46:03] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 13:46:03 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 13:46:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 13:46:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 13:46:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 13:46:04] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(7)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 13:46:06] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 13:46:06] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization completed in 2660 ms 
[INFO][2017-08-09 13:46:06] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 13:46:06] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 13:46:06 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 13:46:06] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 13:46:07] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(7)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 13:46:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 13:46:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 13:46:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 13:46:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 13:46:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 13:46:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 13:46:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 13:46:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 13:46:10] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(7)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 13:46:06 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 13:46:10] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(7)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 13:46:10] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 13:46:10] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(7)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-56329-1502257570436-1:1,clientId=null,started=false} 
[INFO][2017-08-09 13:46:10] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 13:46:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(7)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 13:46:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(7)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 13:46:11] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 4932 ms 
[INFO][2017-08-09 13:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 13:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:chenbin
 
[INFO][2017-08-09 13:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 13:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:351
参数2:1032
 
[INFO][2017-08-09 13:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 13:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:352
参数2:1032
 
[INFO][2017-08-09 13:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 13:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:375
参数2:1032
 
[INFO][2017-08-09 13:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 13:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:380
参数2:1032
 
[INFO][2017-08-09 13:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 13:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:353
参数2:1032
 
[INFO][2017-08-09 13:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 13:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:376
参数2:1032
 
[INFO][2017-08-09 13:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 13:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:372
参数2:1032
 
[INFO][2017-08-09 13:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 13:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:354
参数2:1032
 
[INFO][2017-08-09 13:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 13:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:355
参数2:1032
 
[INFO][2017-08-09 13:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 13:46:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:356
参数2:1032
 
[INFO][2017-08-09 13:46:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 13:46:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:0
 
[INFO][2017-08-09 13:46:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 13:46:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 13:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 13:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 13:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 13:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 13:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 13:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 13:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 13:46:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:46:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 13:46:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 13:46:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 13:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 13:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 13:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:9
 
[INFO][2017-08-09 13:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:10
 
[INFO][2017-08-09 13:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:11
 
[INFO][2017-08-09 13:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:12
 
[INFO][2017-08-09 13:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:13
 
[INFO][2017-08-09 13:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:14
 
[INFO][2017-08-09 13:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:15
 
[INFO][2017-08-09 13:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:16
 
[INFO][2017-08-09 13:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:17
 
[INFO][2017-08-09 13:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:18
 
[INFO][2017-08-09 13:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:19
 
[INFO][2017-08-09 13:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:20
 
[INFO][2017-08-09 13:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:21
 
[INFO][2017-08-09 13:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 13:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 13:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:9
 
[INFO][2017-08-09 13:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:10
 
[INFO][2017-08-09 13:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:11
 
[INFO][2017-08-09 13:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:12
 
[INFO][2017-08-09 13:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:13
 
[INFO][2017-08-09 13:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:14
 
[INFO][2017-08-09 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:15
 
[INFO][2017-08-09 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:16
 
[INFO][2017-08-09 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:17
 
[INFO][2017-08-09 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:18
 
[INFO][2017-08-09 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:19
 
[INFO][2017-08-09 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:20
 
[INFO][2017-08-09 13:46:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:46:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:21
 
[INFO][2017-08-09 13:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 13:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:15
 
[INFO][2017-08-09 13:47:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ) 
[INFO][2017-08-09 13:47:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:15
 
[INFO][2017-08-09 13:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 13:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-09 13:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 13:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-09 13:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 13:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 13:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 13:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 13:47:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:47:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 13:47:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 13:47:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 13:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 13:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 13:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 13:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 13:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 13:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 13:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 13:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 13:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 13:48:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 13:49:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:49:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 13:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 13:49:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 13:49:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:49:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 16 and 20 
[INFO][2017-08-09 13:49:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 13:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 13:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 13:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 13:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 13:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 13:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 13:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 13:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 13:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:
 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 13:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:9
 
[INFO][2017-08-09 13:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:10
 
[INFO][2017-08-09 13:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:11
 
[INFO][2017-08-09 13:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:12
 
[INFO][2017-08-09 13:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:13
 
[INFO][2017-08-09 13:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:14
 
[INFO][2017-08-09 13:58:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:15
 
[INFO][2017-08-09 13:58:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:16
 
[INFO][2017-08-09 13:58:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:17
 
[INFO][2017-08-09 13:58:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:18
 
[INFO][2017-08-09 13:58:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:19
 
[INFO][2017-08-09 13:58:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:20
 
[INFO][2017-08-09 13:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:21
 
[INFO][2017-08-09 13:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 13:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 13:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:9
 
[INFO][2017-08-09 13:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:10
 
[INFO][2017-08-09 13:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:11
 
[INFO][2017-08-09 13:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:12
 
[INFO][2017-08-09 13:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:13
 
[INFO][2017-08-09 13:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:14
 
[INFO][2017-08-09 13:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:15
 
[INFO][2017-08-09 13:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:16
 
[INFO][2017-08-09 13:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:17
 
[INFO][2017-08-09 13:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:18
 
[INFO][2017-08-09 13:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:19
 
[INFO][2017-08-09 13:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:20
 
[INFO][2017-08-09 13:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 13:58:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:21
 
[INFO][2017-08-09 14:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:9
 
[INFO][2017-08-09 14:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:10
 
[INFO][2017-08-09 14:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:11
 
[INFO][2017-08-09 14:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:12
 
[INFO][2017-08-09 14:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:13
 
[INFO][2017-08-09 14:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:14
 
[INFO][2017-08-09 14:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:15
 
[INFO][2017-08-09 14:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:16
 
[INFO][2017-08-09 14:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:17
 
[INFO][2017-08-09 14:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:18
 
[INFO][2017-08-09 14:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:19
 
[INFO][2017-08-09 14:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:20
 
[INFO][2017-08-09 14:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:21
 
[INFO][2017-08-09 14:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 14:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:9
 
[INFO][2017-08-09 14:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:10
 
[INFO][2017-08-09 14:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:11
 
[INFO][2017-08-09 14:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:12
 
[INFO][2017-08-09 14:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:13
 
[INFO][2017-08-09 14:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:14
 
[INFO][2017-08-09 14:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:15
 
[INFO][2017-08-09 14:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:16
 
[INFO][2017-08-09 14:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:17
 
[INFO][2017-08-09 14:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:18
 
[INFO][2017-08-09 14:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:19
 
[INFO][2017-08-09 14:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:20
 
[INFO][2017-08-09 14:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:21
 
[INFO][2017-08-09 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-09 14:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 14:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 14:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:06:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 14:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 14:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 14:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:06:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 14:06:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:06:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 14:06:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:06:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 14:06:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:06:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 14:06:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:10
 
[INFO][2017-08-09 14:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:11
 
[INFO][2017-08-09 14:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:12
 
[INFO][2017-08-09 14:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:13
 
[INFO][2017-08-09 14:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:14
 
[INFO][2017-08-09 14:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:15
 
[INFO][2017-08-09 14:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:16
 
[INFO][2017-08-09 14:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:17
 
[INFO][2017-08-09 14:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:18
 
[INFO][2017-08-09 14:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:19
 
[INFO][2017-08-09 14:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:20
 
[INFO][2017-08-09 14:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:21
 
[INFO][2017-08-09 14:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 14:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:9
 
[INFO][2017-08-09 14:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:10
 
[INFO][2017-08-09 14:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:11
 
[INFO][2017-08-09 14:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:12
 
[INFO][2017-08-09 14:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:13
 
[INFO][2017-08-09 14:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:14
 
[INFO][2017-08-09 14:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:15
 
[INFO][2017-08-09 14:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:16
 
[INFO][2017-08-09 14:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:17
 
[INFO][2017-08-09 14:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:18
 
[INFO][2017-08-09 14:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:19
 
[INFO][2017-08-09 14:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:20
 
[INFO][2017-08-09 14:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:21
 
[INFO][2017-08-09 14:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 14:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 14:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 14:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 14:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 14:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 14:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 14:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 14:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:9
 
[INFO][2017-08-09 14:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:10
 
[INFO][2017-08-09 14:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:11
 
[INFO][2017-08-09 14:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:12
 
[INFO][2017-08-09 14:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:13
 
[INFO][2017-08-09 14:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:14
 
[INFO][2017-08-09 14:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:15
 
[INFO][2017-08-09 14:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:16
 
[INFO][2017-08-09 14:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:17
 
[INFO][2017-08-09 14:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:18
 
[INFO][2017-08-09 14:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:19
 
[INFO][2017-08-09 14:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:20
 
[INFO][2017-08-09 14:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:21
 
[INFO][2017-08-09 14:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 14:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:9
 
[INFO][2017-08-09 14:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:10
 
[INFO][2017-08-09 14:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:11
 
[INFO][2017-08-09 14:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:12
 
[INFO][2017-08-09 14:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:13
 
[INFO][2017-08-09 14:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:14
 
[INFO][2017-08-09 14:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:15
 
[INFO][2017-08-09 14:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:16
 
[INFO][2017-08-09 14:14:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:17
 
[INFO][2017-08-09 14:14:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:18
 
[INFO][2017-08-09 14:14:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:19
 
[INFO][2017-08-09 14:14:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:20
 
[INFO][2017-08-09 14:14:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:14:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:21
 
[INFO][2017-08-09 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 14:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 14:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 14:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 14:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:10
 
[INFO][2017-08-09 14:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:11
 
[INFO][2017-08-09 14:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:12
 
[INFO][2017-08-09 14:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:13
 
[INFO][2017-08-09 14:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:14
 
[INFO][2017-08-09 14:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:15
 
[INFO][2017-08-09 14:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:16
 
[INFO][2017-08-09 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:17
 
[INFO][2017-08-09 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:18
 
[INFO][2017-08-09 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:19
 
[INFO][2017-08-09 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:20
 
[INFO][2017-08-09 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:21
 
[INFO][2017-08-09 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 14:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:9
 
[INFO][2017-08-09 14:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:10
 
[INFO][2017-08-09 14:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:11
 
[INFO][2017-08-09 14:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:12
 
[INFO][2017-08-09 14:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:13
 
[INFO][2017-08-09 14:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:14
 
[INFO][2017-08-09 14:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:15
 
[INFO][2017-08-09 14:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:16
 
[INFO][2017-08-09 14:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:17
 
[INFO][2017-08-09 14:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:18
 
[INFO][2017-08-09 14:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:19
 
[INFO][2017-08-09 14:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:20
 
[INFO][2017-08-09 14:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 14:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:21
 
[INFO][2017-08-09 14:26:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:26:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:26:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 14:26:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:26:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 14:26:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:26:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 14:26:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 14:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 14:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-09 14:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 14:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 14:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 14:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 14:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:
 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 14:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 14:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 14:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 14:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 14:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 14:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 14:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 14:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 14:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 14:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-09 14:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 14:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 14:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 14:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 14:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 14:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 14:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-09 14:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 14:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 14:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 14:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-09 14:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 14:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 14:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 14:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 14:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 14:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 14:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 14:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 14:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 15:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 15:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 15:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 15:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 15:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 15:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-09 15:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 15:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-09 15:01:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 15:01:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:01:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 15:01:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 15:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 15:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:03:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:03:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:03:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 15:03:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 15:03:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:03:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 15:03:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 15:03:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 15:03:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 15:03:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:1000002
参数3:红烧牛腩
参数4:hsn
参数5:红烧牛腩（小份）,红烧牛腩  (份),红烧牛腩（小份）,红烧牛腩,红烧牛腩-大份,红烧牛腩  (大份)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:29:46
参数12:1
参数13:0
参数14:26.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:360
参数20:null
参数21:null
参数22:10
参数23:2
 
[INFO][2017-08-09 15:03:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 15:03:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:3
 
[INFO][2017-08-09 15:03:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 15:03:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:1000003
参数3:农家小炒肉
参数4:njxcr
参数5:农家小炒肉,农家小炒肉  (份),农家小炒肉-份,农家小炒肉  (大份),农家小炒肉-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:49:41
参数12:1
参数13:0
参数14:18.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:340
参数20:null
参数21:null
参数22:10
参数23:3
 
[INFO][2017-08-09 15:03:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 15:03:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:7
 
[INFO][2017-08-09 15:03:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 15:03:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:1000007
参数3:番茄炒鸡蛋
参数4:fqcjd
参数5:番茄炒鸡蛋  (份),番茄炒鸡蛋饭-份,番茄炒鸡蛋 （份）,番茄炒鸡蛋,番茄炒鸡蛋-份,番茄炒鸡蛋 （大份）,番茄炒鸡蛋-大份,番茄炒鸡蛋  (大份),番茄炒鸡蛋饭-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:06:39
参数12:1
参数13:0
参数14:19.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:480
参数20:null
参数21:null
参数22:10
参数23:7
 
[INFO][2017-08-09 15:03:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 15:03:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-09 15:03:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 15:03:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:1000010
参数3:花菜炒豆腐
参数4:hccdf
参数5:花菜炒豆腐,花菜炒豆腐  (份),花菜炒豆腐-份,花菜炒豆腐（大份）,花菜炒豆腐(大份),花菜炒豆腐  (大份),花菜炒豆腐-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:05:30
参数12:1
参数13:0
参数14:20.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:10
 
[INFO][2017-08-09 15:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 15:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:24
 
[INFO][2017-08-09 15:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 15:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:1000024
参数3:小炒土豆片
参数4:xctdp
参数5:小炒土豆片
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:47:23
参数12:1
参数13:0
参数14:16.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:430
参数20:null
参数21:null
参数22:10
参数23:24
 
[INFO][2017-08-09 15:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 15:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:47
 
[INFO][2017-08-09 15:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 15:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:2000008
参数3:雪花蛋酒
参数4:xhdj
参数5:雪花蛋酒
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 17:27:42
参数12:0
参数13:0
参数14:3.5
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:47
 
[INFO][2017-08-09 15:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 15:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:73
 
[INFO][2017-08-09 15:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 15:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:6
参数2:6000007
参数3:百事可乐（听装）
参数4:bskltz
参数5:百事可乐（听装）,百事可乐（常温）
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 18:04:43
参数12:0
参数13:0
参数14:3.8
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:73
 
[INFO][2017-08-09 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 15:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-09 15:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 15:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 15:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:13:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:
 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:13:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 15:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:73
 
[INFO][2017-08-09 15:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 15:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 15:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 15:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 15:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:17:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 15:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 15:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:20:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:20:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:20:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:20:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:20:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:20:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 15:21:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:21:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:21:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:21:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:21:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:21:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:21:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:21:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 15:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 15:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 15:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 15:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 15:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 15:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 15:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-09 15:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:40:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:40:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 15:40:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:40:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:40:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:40:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:40:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:40:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 15:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 15:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 15:42:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:42:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:42:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:42:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:42:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:42:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:42:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:42:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:43:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:
 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:43:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:43:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-09 15:43:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:43:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 15:43:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:43:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:43:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:43:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-09 15:43:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:43:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-09 15:43:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:43:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:43:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:43:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:43:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:43:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:43:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:43:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:43:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:43:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:43:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:43:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:43:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:43:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:43:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:43:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:43:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:43:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:43:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-09 15:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 15:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-09 15:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:44:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:44:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:44:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:44:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:44:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:44:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:45:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:45:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 15:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 15:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 15:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 15:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 15:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 15:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 15:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 15:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 15:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 15:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 15:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 15:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 15:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:1000002
参数3:红烧牛腩
参数4:hsn
参数5:红烧牛腩（小份）,红烧牛腩  (份),红烧牛腩（小份）,红烧牛腩,红烧牛腩-大份,红烧牛腩  (大份)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:29:46
参数12:1
参数13:0
参数14:26.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:360
参数20:null
参数21:null
参数22:10
参数23:2
 
[INFO][2017-08-09 15:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 15:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 15:52:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:52:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:52:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:52:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:52:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:52:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:52:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:52:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 15:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 15:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-09 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:59:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:59:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 15:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 15:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 15:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 15:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 15:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 15:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 20 
[INFO][2017-08-09 15:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 15:59:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 15:59:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-09 15:59:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 15:59:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-09 15:59:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 15:59:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:18
参数2:测试-五谷杂粮
 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:18
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-五谷杂粮
参数8:8
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:18
参数2:测试-调料
 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:18
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-调料
参数8:1
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:18
参数2:测试-蔬菜
 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:18
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-蔬菜
参数8:5
参数9:少时诵诗书
参数10:0
 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_brand_id
                 , 
                    class_id
                 , 
                    food_category_id
                 , 
                    meituan_cat_id
                 , 
                    type
                 , 
                    baidu_cat_id
                 , 
                    class_name
                 , 
                    listorder
                 , 
                    class_desc
                 , 
                    brand_id
                 
                FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                class_name = ? 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:18
参数2:测试-水果
 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_class(
          
            stores_brand_id
         , 
            class_id
         , 
            food_category_id
         , 
            meituan_cat_id
         , 
            type
         , 
            baidu_cat_id
         , 
            class_name
         , 
            listorder
         , 
            class_desc
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-08-09 15:59:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:18
参数2:0
参数3:null
参数4:null
参数5:1
参数6:null
参数7:测试-水果
参数8:6
参数9:少时诵诗书
参数10:1
 
[INFO][2017-08-09 15:59:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 15:59:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:59:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 15:59:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 15:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      ))  tmp_count 
[INFO][2017-08-09 15:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:18
 
[INFO][2017-08-09 15:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE  (
                         b.stores_brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-09 15:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:18
 
[INFO][2017-08-09 16:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 16:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 16:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 16:00:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 16:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 16:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 16:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 16:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:9
 
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:10
 
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:11
 
[INFO][2017-08-09 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:12
 
[INFO][2017-08-09 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:13
 
[INFO][2017-08-09 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:14
 
[INFO][2017-08-09 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:15
 
[INFO][2017-08-09 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:16
 
[INFO][2017-08-09 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:17
 
[INFO][2017-08-09 16:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:18
 
[INFO][2017-08-09 16:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:19
 
[INFO][2017-08-09 16:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:20
 
[INFO][2017-08-09 16:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:21
 
[INFO][2017-08-09 16:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 16:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:9
 
[INFO][2017-08-09 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:10
 
[INFO][2017-08-09 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:11
 
[INFO][2017-08-09 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:12
 
[INFO][2017-08-09 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:13
 
[INFO][2017-08-09 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:14
 
[INFO][2017-08-09 16:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:15
 
[INFO][2017-08-09 16:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:16
 
[INFO][2017-08-09 16:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:17
 
[INFO][2017-08-09 16:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:18
 
[INFO][2017-08-09 16:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:19
 
[INFO][2017-08-09 16:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:20
 
[INFO][2017-08-09 16:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-08-09 16:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:21
 
[INFO][2017-08-09 16:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 16:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 16:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 16:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 16:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 16:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 16:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 16:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 16:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 16:09:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 16:09:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 16:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 16:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 16:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 16:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 16:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 16:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 16:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 16:11:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:11:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 16:11:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 16:11:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 16:11:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 16:11:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 16:11:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 16:11:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 16:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 16:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 16:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 16:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 16:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 16:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 16:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 16:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 16:19:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:19:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 16:19:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 16:19:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 16:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 16:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 16:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 16:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 16:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 16:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-09 16:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 16:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 16:22:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:22:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 16:22:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 16:22:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 16:22:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 16:22:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 16:22:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 16:22:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 16:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 16:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 16:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 16:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 16:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 16:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 16:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 16:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 16:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 16:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 16:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 16:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 16:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 16:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 16:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 16:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 16:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 16:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 16:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 16:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 16:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 16:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 16:41:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 16:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 16:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 16:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-09 16:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 16:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 16:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 16:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 16:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:51:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 16:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 16:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 16:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 16:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 16:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 16:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 16:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 16:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 16:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 16:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 16:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-09 16:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 16:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 16:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 16:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 24 
[INFO][2017-08-09 16:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 16:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 16:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 16:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 16:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 16:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 16:59:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 16:59:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 16:59:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 16:59:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 16:59:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:59:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:
 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 16:59:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 16:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 16:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 16:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 16:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 16:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 16:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 16:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 16:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-09 16:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-09 17:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 17:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-09 17:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:06:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 17:06:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 17:06:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 17:06:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:06:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 17:06:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 17:06:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 17:06:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 17:06:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:1000002
参数3:红烧牛腩
参数4:hsn
参数5:红烧牛腩（小份）,红烧牛腩  (份),红烧牛腩（小份）,红烧牛腩,红烧牛腩-大份,红烧牛腩  (大份)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:29:46
参数12:1
参数13:0
参数14:26.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:360
参数20:null
参数21:null
参数22:10
参数23:2
 
[INFO][2017-08-09 17:06:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 17:06:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-08-09 17:06:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 17:06:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:1000003
参数3:农家小炒肉
参数4:njxcr
参数5:农家小炒肉,农家小炒肉  (份),农家小炒肉-份,农家小炒肉  (大份),农家小炒肉-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:49:41
参数12:1
参数13:0
参数14:18.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:340
参数20:null
参数21:null
参数22:10
参数23:3
 
[INFO][2017-08-09 17:06:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 17:06:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:7
 
[INFO][2017-08-09 17:06:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 17:06:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:1000007
参数3:番茄炒鸡蛋
参数4:fqcjd
参数5:番茄炒鸡蛋  (份),番茄炒鸡蛋饭-份,番茄炒鸡蛋 （份）,番茄炒鸡蛋,番茄炒鸡蛋-份,番茄炒鸡蛋 （大份）,番茄炒鸡蛋-大份,番茄炒鸡蛋  (大份),番茄炒鸡蛋饭-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:06:39
参数12:1
参数13:0
参数14:19.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:480
参数20:null
参数21:null
参数22:10
参数23:7
 
[INFO][2017-08-09 17:06:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 17:06:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
 
[INFO][2017-08-09 17:06:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 17:06:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:1000010
参数3:花菜炒豆腐
参数4:hccdf
参数5:花菜炒豆腐,花菜炒豆腐  (份),花菜炒豆腐-份,花菜炒豆腐（大份）,花菜炒豆腐(大份),花菜炒豆腐  (大份),花菜炒豆腐-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:05:30
参数12:1
参数13:0
参数14:20.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:10
 
[INFO][2017-08-09 17:06:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 17:06:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:24
 
[INFO][2017-08-09 17:06:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 17:06:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:1000024
参数3:小炒土豆片
参数4:xctdp
参数5:小炒土豆片
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:47:23
参数12:1
参数13:0
参数14:16.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:430
参数20:null
参数21:null
参数22:10
参数23:24
 
[INFO][2017-08-09 17:06:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 17:06:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:47
 
[INFO][2017-08-09 17:06:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 17:06:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
参数2:2000008
参数3:雪花蛋酒
参数4:xhdj
参数5:雪花蛋酒
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 17:27:42
参数12:0
参数13:0
参数14:3.5
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:47
 
[INFO][2017-08-09 17:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:06:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:
 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:06:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 17:06:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:67
 
[INFO][2017-08-09 17:06:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 17:06:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:73
 
[INFO][2017-08-09 17:06:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 17:06:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:78
 
[INFO][2017-08-09 17:06:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 17:06:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:82
 
[INFO][2017-08-09 17:06:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 17:06:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:86
 
[INFO][2017-08-09 17:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 17:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:98
 
[INFO][2017-08-09 17:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 17:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 17:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 17:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 17:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 17:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 17:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-09 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 17:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 17:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 17:20:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:20:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:20:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:20:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:20:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:20:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:20:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:20:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:20:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:20:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:
 
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 17:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:20:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:21:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:21:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:21:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:21:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:21:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:21:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:21:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:21:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 17:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 17:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:23:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:23:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:23:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:23:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:23:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:23:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:23:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:23:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 17:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 17:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:25:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:25:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:25:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:25:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:25:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:25:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:25:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:25:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:26:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 17:26:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:26:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 17:26:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:26:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 17:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 17:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 17:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:30:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:30:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:30:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:30:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:30:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 17:30:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:30:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:30:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:30:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:30:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:30:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:30:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:30:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 17:30:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 17:30:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:30:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-09 17:30:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 17:30:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 17:30:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:30:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 17:30:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 17:30:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 17:30:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:30:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 17:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 17:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:31:49] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 13:46:06 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 17:31:49] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 17:31:50] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 17:31:50] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 13:46:03 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 17:31:50] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 17:32:04] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-09 17:32:04] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Aug 09 17:32:04 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 17:32:04] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-09 17:32:05] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-09 17:32:05] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-09 17:32:05] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-09 17:32:07] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 17:32:07] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2806 ms 
[INFO][2017-08-09 17:32:07] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-09 17:32:07] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 17:32:07 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 17:32:07] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-09 17:32:09] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-09 17:32:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-09 17:32:12] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 17:32:07 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 17:32:12] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-09 17:32:12] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-09 17:32:12] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-61595-1502271132598-1:1,clientId=null,started=false} 
[INFO][2017-08-09 17:32:12] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-09 17:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-09 17:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-09 17:32:13] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5712 ms 
[INFO][2017-08-09 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:chenbin
 
[INFO][2017-08-09 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:351
参数2:1032
 
[INFO][2017-08-09 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:352
参数2:1032
 
[INFO][2017-08-09 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:375
参数2:1032
 
[INFO][2017-08-09 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:380
参数2:1032
 
[INFO][2017-08-09 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 17:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:353
参数2:1032
 
[INFO][2017-08-09 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:376
参数2:1032
 
[INFO][2017-08-09 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:372
参数2:1032
 
[INFO][2017-08-09 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:354
参数2:1032
 
[INFO][2017-08-09 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:355
参数2:1032
 
[INFO][2017-08-09 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 17:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:356
参数2:1032
 
[INFO][2017-08-09 17:33:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 17:33:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
 
[INFO][2017-08-09 17:33:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 17:33:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 17:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 17:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 17:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 17:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 17:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 17:33:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:33:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:33:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:33:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:33:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 17:33:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:33:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:33:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 17:33:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:33:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:33:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:33:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 17:33:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:33:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 17:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-09 17:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:40:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:40:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 17:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 17:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 17:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 17:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 17:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 17:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 17:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 17:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-09 17:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 17:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 17:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:56:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:56:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:56:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:56:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:56:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:56:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:
 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 17:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 17:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 17:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 17:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 17:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:58:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:58:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:
 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 17:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 17:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 17:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 17:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 17:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:59:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:59:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:59:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:59:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:59:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:59:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:
 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:59:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 17:59:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 17:59:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 18:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 18:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 18:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 18:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 18:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 18:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 18:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 18:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 18:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 18:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 18:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 18:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 18:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 18:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 18:04:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:04:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:04:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:04:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 18:04:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 18:04:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 18:04:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 18:04:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 18:04:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 18:04:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 18:04:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:04:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 18:04:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:04:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 18:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 18:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-09 18:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 18:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 18:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 18:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 18:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 18:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 18:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 18:24:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:24:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 18:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 18:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 18:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 18:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 18:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 18:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:24:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 18:24:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:24:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:24:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:24:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:24:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 18:24:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:
 
[INFO][2017-08-09 18:24:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 18:24:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 18:24:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 18:24:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 18:24:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 18:24:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-09 18:24:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:24:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 18:24:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:24:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:24:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:24:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:25:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-09 18:25:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:chenbin
 
[INFO][2017-08-09 18:25:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 18:25:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:351
参数2:1032
 
[INFO][2017-08-09 18:25:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 18:25:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:352
参数2:1032
 
[INFO][2017-08-09 18:25:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 18:25:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:375
参数2:1032
 
[INFO][2017-08-09 18:25:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 18:25:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:380
参数2:1032
 
[INFO][2017-08-09 18:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 18:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:353
参数2:1032
 
[INFO][2017-08-09 18:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 18:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:376
参数2:1032
 
[INFO][2017-08-09 18:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 18:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:372
参数2:1032
 
[INFO][2017-08-09 18:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 18:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:354
参数2:1032
 
[INFO][2017-08-09 18:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 18:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:355
参数2:1032
 
[INFO][2017-08-09 18:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-09 18:25:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:356
参数2:1032
 
[INFO][2017-08-09 18:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-09 18:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
 
[INFO][2017-08-09 18:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-09 18:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 18:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-09 18:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
参数2:2017-08-09
参数3:2017-08-09
参数4:0
参数5:2017-08-09
参数6:2017-08-09
参数7:0
参数8:2017-08-09
参数9:2017-08-09
参数10:0
参数11:2017-08-09
参数12:2017-08-09
参数13:0
参数14:2017-08-09
参数15:2017-08-09
参数16:0
参数17:2017-08-09
参数18:2017-08-09
参数19:0
参数20:2017-08-09
参数21:2017-08-09
参数22:0
参数23:2017-08-09
参数24:2017-08-09
参数25:0
参数26:2017-08-09
参数27:2017-08-09
 
[INFO][2017-08-09 18:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-09 18:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-09
参数2:2017-08-09
 
[INFO][2017-08-09 18:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-09 18:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-09
参数2:2017-08-09
参数3:0
参数4:2017-08-09
参数5:2017-08-09
参数6:0
参数7:2017-08-08
参数8:2017-08-08
参数9:0
参数10:2017-08-08
参数11:2017-08-08
参数12:0
参数13:2017-08-02
参数14:2017-08-02
参数15:0
 
[INFO][2017-08-09 18:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 18:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 18:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 18:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-09 18:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:
 
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 18:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-09 18:25:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:25:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 18:25:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 18:25:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 18:25:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:25:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-09 18:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 18:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 18:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-09 18:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 18:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 18:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-09 18:30:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:30:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 18:30:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:30:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 18:30:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:30:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-09 18:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 18:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:33:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-09 18:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 18:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-09 18:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 18:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-09 18:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 18:40:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:40:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 18:40:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:40:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 18:40:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:40:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 18:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 18:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 18:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 18:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-09 18:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 18:46:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:46:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 18:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 18:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:46:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 18:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 18:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 18:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 18:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 18:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 18:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 18:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 18:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 18:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 18:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 18:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 18:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 18:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 18:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 18:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 18:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 18:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 18:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-09 18:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:48:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 18:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 18:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 18:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 18:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 18:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 18:49:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 18:49:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 18:49:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 18:49:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 18:50:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:50:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 18:50:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:50:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:50:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:50:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-09 18:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 18:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 18:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 18:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 18:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 18:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 18:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 18:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 18:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 18:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 18:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 18:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 18:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 18:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 18:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 18:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 18:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 18:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 18:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-09 18:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 18:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 18:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 18:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 18:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 18:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-09 19:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 19:00:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 19:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 19:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 19:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 19:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 19:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 19:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 19:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 19:00:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:00:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 19:00:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 19:00:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 19:00:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:00:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 19:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 19:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 19:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 19:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 19:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 19:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-09 19:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 19:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 19:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 19:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 19:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 19:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 19:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 19:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 19:04:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:04:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 19:04:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:04:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 19:05:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:05:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 19:05:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 19:05:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 19:05:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:05:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 19:05:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:05:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 19:05:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:05:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 19:05:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 19:05:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 19:05:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:05:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 19:05:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 19:05:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 19:05:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 19:05:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 19:05:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:05:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:05:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:05:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 19:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 19:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 19:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 19:08:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:08:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 19:08:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 19:08:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 19:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 19:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 19:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 19:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 19:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 19:08:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:08:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 19:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 19:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 19:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:08:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 19:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 19:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-09 19:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 19:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 19:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 19:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 19:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 19:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 19:13:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:13:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 19:13:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 19:13:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 19:13:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:13:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 19:13:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 19:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:14:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:14:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 19:15:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:15:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 19:15:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:15:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 19:15:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:15:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 19:15:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:15:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 19:15:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 19:15:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-09 19:15:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:15:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 19:15:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:15:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:15:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:15:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 19:15:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:15:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 19:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 19:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 19:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 19:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-09 19:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 19:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 19:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 19:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 19:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 19:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 19:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-09 19:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:18:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:18:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:18:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 19:18:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:18:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-09 19:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 19:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 19:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:19:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:19:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 19:19:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:19:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 19:20:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:20:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 19:20:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:20:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-09 19:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 19:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 19:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 19:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-09 19:21:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:21:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 19:21:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-09 19:21:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 19:21:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 19:21:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-09 19:21:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 19:21:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-09 19:21:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 19:21:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:1000002
参数3:红烧牛腩
参数4:hsn
参数5:红烧牛腩（小份）,红烧牛腩  (份),红烧牛腩（小份）,红烧牛腩,红烧牛腩-大份,红烧牛腩  (大份)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:29:46
参数12:1
参数13:0
参数14:26.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:360
参数20:null
参数21:null
参数22:10
参数23:2
 
[INFO][2017-08-09 19:21:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 19:21:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:3
 
[INFO][2017-08-09 19:21:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 19:21:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:1000003
参数3:农家小炒肉
参数4:njxcr
参数5:农家小炒肉,农家小炒肉  (份),农家小炒肉-份,农家小炒肉  (大份),农家小炒肉-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:49:41
参数12:1
参数13:0
参数14:18.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:340
参数20:null
参数21:null
参数22:10
参数23:3
 
[INFO][2017-08-09 19:21:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 19:21:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:7
 
[INFO][2017-08-09 19:21:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 19:21:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:1000007
参数3:番茄炒鸡蛋
参数4:fqcjd
参数5:番茄炒鸡蛋  (份),番茄炒鸡蛋饭-份,番茄炒鸡蛋 （份）,番茄炒鸡蛋,番茄炒鸡蛋-份,番茄炒鸡蛋 （大份）,番茄炒鸡蛋-大份,番茄炒鸡蛋  (大份),番茄炒鸡蛋饭-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:06:39
参数12:1
参数13:0
参数14:19.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:480
参数20:null
参数21:null
参数22:10
参数23:7
 
[INFO][2017-08-09 19:21:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 19:21:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:17
 
[INFO][2017-08-09 19:21:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 19:21:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:1000017
参数3:橄榄菜豆角肉末
参数4:cdjrm
参数5:橄榄菜豆角肉末
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:46:08
参数12:1
参数13:0
参数14:23.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:370
参数20:null
参数21:null
参数22:10
参数23:17
 
[INFO][2017-08-09 19:21:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 19:21:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-09 19:21:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 19:21:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:1000010
参数3:花菜炒豆腐
参数4:hccdf
参数5:花菜炒豆腐,花菜炒豆腐  (份),花菜炒豆腐-份,花菜炒豆腐（大份）,花菜炒豆腐(大份),花菜炒豆腐  (大份),花菜炒豆腐-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:05:30
参数12:1
参数13:0
参数14:20.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:10
 
[INFO][2017-08-09 19:21:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 19:21:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:6
 
[INFO][2017-08-09 19:21:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 19:21:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:1000006
参数3:川味辣子鸡
参数4:cwlzj
参数5:辣子鸡,正宗川味辣子鸡,正宗川味辣子鸡  (份),正宗川味辣子鸡-份,正宗川味辣子鸡-小份,正宗川味辣子鸡-大份,正宗川味辣子鸡 （大份）,正宗川味辣子鸡  (大份)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:47:57
参数12:1
参数13:0
参数14:20.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:290
参数20:null
参数21:null
参数22:10
参数23:6
 
[INFO][2017-08-09 19:21:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 19:21:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:24
 
[INFO][2017-08-09 19:21:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 19:21:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:1000024
参数3:小炒土豆片
参数4:xctdp
参数5:小炒土豆片
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:47:23
参数12:1
参数13:0
参数14:16.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:430
参数20:null
参数21:null
参数22:10
参数23:24
 
[INFO][2017-08-09 19:21:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 19:21:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:47
 
[INFO][2017-08-09 19:21:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 19:21:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:2000008
参数3:雪花蛋酒
参数4:xhdj
参数5:雪花蛋酒
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 17:27:42
参数12:0
参数13:0
参数14:3.5
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:47
 
[INFO][2017-08-09 19:21:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 19:21:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:74
 
[INFO][2017-08-09 19:21:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 19:21:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:6
参数2:6000008
参数3:雪碧（听装）
参数4:xbtz
参数5:雪碧（听装）
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 18:05:20
参数12:0
参数13:0
参数14:3.8
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:74
 
[INFO][2017-08-09 19:21:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-08-09 19:21:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:73
 
[INFO][2017-08-09 19:21:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-08-09 19:21:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:6
参数2:6000007
参数3:百事可乐（听装）
参数4:bskltz
参数5:百事可乐（听装）,百事可乐（常温）
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 18:04:43
参数12:0
参数13:0
参数14:3.8
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:73
 
[INFO][2017-08-09 19:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-09 19:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-09 19:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 19:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-09 19:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-09 19:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-09 19:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 19:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-09 19:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-09 19:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-09 19:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-09 19:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-09 19:23:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-09 19:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 19:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-09 19:23:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:23:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 19:23:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:23:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-09 19:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-09 19:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-09 19:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-09 19:25:17] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 09 17:32:07 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-09 19:25:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-09 19:25:18] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-09 19:25:18] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 09 17:32:04 CST 2017]; root of context hierarchy 
[INFO][2017-08-09 19:25:18] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-10 09:06:13] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-10 09:06:14] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 10 09:06:14 CST 2017]; root of context hierarchy 
[INFO][2017-08-10 09:06:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-10 09:06:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-10 09:06:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-10 09:06:14] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-10 09:06:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-10 09:06:17] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 3022 ms 
[INFO][2017-08-10 09:06:17] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-10 09:06:17] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 10 09:06:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-10 09:06:17] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-10 09:06:19] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-10 09:06:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-10 09:06:21] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 10 09:06:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-10 09:06:21] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-10 09:06:21] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-10 09:06:21] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-49980-1502327181629-1:1,clientId=null,started=false} 
[INFO][2017-08-10 09:06:21] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-10 09:06:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-10 09:06:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-10 09:06:22] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5549 ms 
[INFO][2017-08-10 09:06:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-10 09:06:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:chenbin
 
[INFO][2017-08-10 09:06:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-10 09:06:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:351
参数2:1032
 
[INFO][2017-08-10 09:06:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-10 09:06:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:352
参数2:1032
 
[INFO][2017-08-10 09:06:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-10 09:06:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:375
参数2:1032
 
[INFO][2017-08-10 09:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-10 09:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:380
参数2:1032
 
[INFO][2017-08-10 09:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-10 09:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:353
参数2:1032
 
[INFO][2017-08-10 09:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-10 09:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:376
参数2:1032
 
[INFO][2017-08-10 09:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-10 09:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:372
参数2:1032
 
[INFO][2017-08-10 09:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-10 09:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:354
参数2:1032
 
[INFO][2017-08-10 09:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-10 09:06:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:355
参数2:1032
 
[INFO][2017-08-10 09:06:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-10 09:06:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:356
参数2:1032
 
[INFO][2017-08-10 09:06:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-10 09:06:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:0
 
[INFO][2017-08-10 09:06:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-10 09:06:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-10 09:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
参数2:2017-08-10
参数3:2017-08-10
参数4:0
参数5:2017-08-10
参数6:2017-08-10
参数7:0
参数8:2017-08-10
参数9:2017-08-10
参数10:0
参数11:2017-08-10
参数12:2017-08-10
参数13:0
参数14:2017-08-10
参数15:2017-08-10
参数16:0
参数17:2017-08-10
参数18:2017-08-10
参数19:0
参数20:2017-08-10
参数21:2017-08-10
参数22:0
参数23:2017-08-10
参数24:2017-08-10
参数25:0
参数26:2017-08-10
参数27:2017-08-10
 
[INFO][2017-08-10 09:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-10 09:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-10
参数2:2017-08-10
 
[INFO][2017-08-10 09:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-10 09:06:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-10
参数2:2017-08-10
参数3:0
参数4:2017-08-10
参数5:2017-08-10
参数6:0
参数7:2017-08-09
参数8:2017-08-09
参数9:0
参数10:2017-08-09
参数11:2017-08-09
参数12:0
参数13:2017-08-03
参数14:2017-08-03
参数15:0
 
[INFO][2017-08-10 09:07:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:07:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:07:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:07:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:07:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:07:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:
 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:07:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-10 09:07:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:07:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:07:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:07:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:07:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:07:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:07:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:07:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:07:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:07:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:07:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:07:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:07:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:07:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:07:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:07:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:07:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:07:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:08:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:08:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 09:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-10 09:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:12:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:12:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:12:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:12:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:16:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:16:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:16:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:16:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:16:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 09:16:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-10 09:19:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:19:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:19:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:19:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:19:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:19:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:19:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:19:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:19:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:19:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:19:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:19:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:19:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:19:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:20:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:20:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-10 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-10 09:20:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:20:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:21:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:21:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 09:21:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:21:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 09:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 09:21:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-10 09:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 09:22:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:22:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:22:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:22:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:22:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:22:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:22:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:22:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 09:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-10 09:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:26:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 09:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 09:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:29:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:29:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:29:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 09:29:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:29:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 09:29:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:29:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:29:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:29:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:30:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:30:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:30:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:30:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:30:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:30:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:30:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:30:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:30:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:30:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:30:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:30:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:30:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:30:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:31:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:31:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:31:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:31:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:31:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 09:31:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-10 09:36:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:36:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 09:36:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:36:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:36:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 09:36:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-10 09:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:41:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:41:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:41:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:41:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:41:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:41:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:41:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:41:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:41:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:41:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 09:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-10 09:43:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-10 09:43:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-10 09:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-10 09:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-10 09:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:43:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:43:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 09:43:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:43:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:43:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:43:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:43:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:43:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:43:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:43:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:43:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:43:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:43:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:43:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:44:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-10 09:44:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:44:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-10 09:44:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:0
参数2:2017-08-10
参数3:2017-08-10
参数4:0
参数5:2017-08-10
参数6:2017-08-10
参数7:0
参数8:2017-08-10
参数9:2017-08-10
参数10:0
参数11:2017-08-10
参数12:2017-08-10
参数13:0
参数14:2017-08-10
参数15:2017-08-10
参数16:0
参数17:2017-08-10
参数18:2017-08-10
参数19:0
参数20:2017-08-10
参数21:2017-08-10
参数22:0
参数23:2017-08-10
参数24:2017-08-10
参数25:0
参数26:2017-08-10
参数27:2017-08-10
 
[INFO][2017-08-10 09:44:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-10 09:44:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-10
参数2:2017-08-10
 
[INFO][2017-08-10 09:44:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:44:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:44:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-10 09:44:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-08-10
参数2:2017-08-10
参数3:0
参数4:2017-08-10
参数5:2017-08-10
参数6:0
参数7:2017-08-09
参数8:2017-08-09
参数9:0
参数10:2017-08-09
参数11:2017-08-09
参数12:0
参数13:2017-08-03
参数14:2017-08-03
参数15:0
 
[INFO][2017-08-10 09:44:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:44:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 09:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-10 09:51:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:51:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:51:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:51:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:51:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:51:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:51:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:51:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 09:51:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:51:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:51:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:51:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 09:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 09:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 09:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-10 09:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:54:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 09:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 09:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 09:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 09:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 09:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 09:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 09:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 09:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 09:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 09:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 09:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 09:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-10 09:59:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 09:59:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 09:59:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 09:59:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-10 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 10:09:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:09:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:09:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 10:09:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-10 10:09:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:09:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 10:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 10:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 10:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 10:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 10:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 10:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:10:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:10:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:10:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:10:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:11:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:11:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:11:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:11:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:12:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:12:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 10:12:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:12:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 10:12:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 10:12:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 10:12:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:12:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 10:12:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 10:12:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:12:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 10:12:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:12:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:12:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:12:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:12:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:12:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:12:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:12:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:12:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:14:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:14:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:14:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 10:14:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-10 10:14:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:14:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 10:15:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:15:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:15:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 10:15:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:15:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:15:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:15:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 10:15:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:15:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 10:15:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:16:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:16:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 10:16:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:16:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 10:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:16:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 10:17:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 10:17:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:17:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:17:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:17:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 10:17:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:17:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 10:17:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:17:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:17:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:17:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:17:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:18:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:18:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 10:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 10:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:19:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:19:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:19:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:19:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 10:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-10 10:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 10:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 10:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 10:23:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 10:24:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:24:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 10:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 10:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-10 10:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 10:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 10:25:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 10:25:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:25:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:25:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:25:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 10:25:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:25:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 10:25:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 10:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 10:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 10:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-10 10:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 10:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 10:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 10:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 10:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 10:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 10:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 10:31:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:31:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:31:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:31:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:31:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:32:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:32:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:32:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:32:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 10:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 10:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 10:34:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 10:34:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:34:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 10:34:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:34:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:34:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:34:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:34:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:34:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 10:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-10 10:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:34:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:36:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:36:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:36:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:36:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 10:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-10 10:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 10:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-10 10:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 10:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-10 10:49:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:50:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:50:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 10:50:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 10:50:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:50:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:50:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:50:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 10:50:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:50:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 10:50:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 10:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 10:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 10:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 10:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 10:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 10:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 10:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 10:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 10:53:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:53:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:53:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:53:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 10:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:53:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:53:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 10:53:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:53:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 10:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 10:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 10:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-10 10:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 10:57:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:57:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 10:57:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:57:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 10:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 10:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 10:57:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 10:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 10:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 10:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-10 10:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 10:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 11:04:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-10 11:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 11:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-10 11:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[WARN][2017-08-10 11:14:40] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.StackOverflowError 
[INFO][2017-08-10 11:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 11:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-10 11:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:14:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 11:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 11:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 11:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 11:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 11:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 11:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:17:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:17:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:17:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:17:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:17:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 11:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-10 11:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:21:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:21:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:21:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:21:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:21:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:21:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:21:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 11:21:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 11:21:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 11:21:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 11:21:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:21:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:21:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:21:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:23:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:23:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 11:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 11:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 11:23:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:23:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:23:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:23:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:23:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:24:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 11:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 11:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-10 11:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:24:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 11:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-10 11:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:30:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:30:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:30:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:30:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 11:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 11:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-10 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:34:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 11:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:35:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:36:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:36:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:36:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:36:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:36:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:36:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:36:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:36:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 11:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 11:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 11:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:38:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:38:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 11:38:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:38:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 11:38:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:38:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:38:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:38:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:39:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 11:39:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-10 11:39:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:39:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:39:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:39:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 11:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-10 11:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-10 11:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 11:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-10 11:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
参数2:2017-08-10
参数3:2017-08-10
参数4:0
参数5:2017-08-10
参数6:2017-08-10
参数7:0
参数8:2017-08-10
参数9:2017-08-10
参数10:0
参数11:2017-08-10
参数12:2017-08-10
参数13:0
参数14:2017-08-10
参数15:2017-08-10
参数16:0
参数17:2017-08-10
参数18:2017-08-10
参数19:0
参数20:2017-08-10
参数21:2017-08-10
参数22:0
参数23:2017-08-10
参数24:2017-08-10
参数25:0
参数26:2017-08-10
参数27:2017-08-10
 
[INFO][2017-08-10 11:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-10 11:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-10
参数2:2017-08-10
 
[INFO][2017-08-10 11:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:48:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-10 11:48:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-10
参数2:2017-08-10
参数3:0
参数4:2017-08-10
参数5:2017-08-10
参数6:0
参数7:2017-08-09
参数8:2017-08-09
参数9:0
参数10:2017-08-09
参数11:2017-08-09
参数12:0
参数13:2017-08-03
参数14:2017-08-03
参数15:0
 
[INFO][2017-08-10 11:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 11:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 11:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 11:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:48:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:
 
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-10 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 11:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:50:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 11:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 11:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 11:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:52:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:52:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 11:52:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:52:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:52:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:52:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:52:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 11:52:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 11:52:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:52:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:52:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 11:52:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:53:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:53:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:53:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 11:53:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-10 11:53:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:53:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-10 11:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:53:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-10 11:53:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:53:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:53:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:53:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-10 11:53:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-10 11:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 11:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[WARN][2017-08-10 11:53:49] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-10 11:53:49] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-10 11:53:49] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-10 11:53:49] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-10 11:53:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-10 11:53:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-10 11:55:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:55:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 11:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 11:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 11:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 11:55:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:55:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:55:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:55:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 11:55:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:55:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 11:55:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:55:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 11:57:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:57:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 11:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 11:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 11:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 11:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 11:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 11:58:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:58:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:58:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:58:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 11:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 11:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:58:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 11:58:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 11:58:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 11:58:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 11:58:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 11:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 11:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-10 11:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 11:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 11:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 12:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 12:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 12:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 12:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 12:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 12:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 12:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 12:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 12:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 12:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 12:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 12:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 12:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 12:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 12:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 12:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 12:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 12:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 12:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 12:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 12:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 12:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 12:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 12:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 12:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 12:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 12:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 12:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 12:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 12:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-10 12:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 12:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-10 12:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 12:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 12:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 12:08:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 12:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-10 12:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 12:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-10 12:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 12:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id)  tmp_count 
[INFO][2017-08-10 12:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 12:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a left join cds_stores_class b on a.stores_class_id = b.stores_class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-10 12:08:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 12:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 12:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 12:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 12:09:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-10 12:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 12:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 12:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 12:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 12:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 12:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 12:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 12:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 12:09:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 12:09:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 12:09:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 12:09:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 12:09:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-10 12:09:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 12:09:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-10 12:09:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 12:13:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:13:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 12:13:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 12:13:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-10 12:13:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:13:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 12:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 12:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 12:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-10 12:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:18:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 12:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 12:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-10 12:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-10 12:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 12:28:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:28:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 12:28:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 12:28:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-10 12:28:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:28:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 12:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 12:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 12:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-10 12:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:33:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 12:38:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 12:38:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-10 12:38:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:38:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 12:38:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:38:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 12:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-10 12:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 12:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-10 12:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:43:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 12:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 12:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-10 12:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 12:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:48:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 12:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-10 12:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 12:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-10 12:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:53:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 12:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-10 12:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 12:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-10 12:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 12:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 13:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 13:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-10 13:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 13:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-10 13:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 13:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-10 13:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 13:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-10 13:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 13:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-10 13:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 13:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-10 13:13:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-10 13:13:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-10 13:13:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-10 13:13:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-10 13:13:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
