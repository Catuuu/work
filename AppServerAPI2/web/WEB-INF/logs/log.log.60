[INFO][2017-06-20 19:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:00:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204a72230475542
参数2:B6204a72571748535
参数3:用户
参数4:0
参数5:商家待接单
参数6:张科支付成功
参数7:张科
参数8:2017-06-20 14:05:57
参数9:0
 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:05:49
参数2:2017-06-20 14:05:49
参数3:50962
 
[INFO][2017-06-20 19:00:59] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204a72571748535,0009-0445 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15071223427
 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:05:49
参数2:2017-06-20 14:05:49
参数3:50962
 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:237
参数2:203
参数3:1
参数4:3.0
参数5:B6204a72571748535
 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:00:59
参数4:服务不可用
参数5:B6204a73203833776
参数6:B6204a72571748535
 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17671752005
参数2:1
 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204a73203833776
参数2:B6204a72571748535
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:00:59
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204a73204387003
参数2:9
参数3:B6204a72571748535
参数4:1
参数5:3
参数6:农家小炒肉
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-20 19:00:59
参数11:14.937831
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204a73275643260
参数17:9
参数18:B6204a72571748535
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-20 19:00:59
参数26:1.9759037
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204a73700013777
参数32:9
参数33:B6204a72571748535
参数34:2
参数35:47
参数36:雪花蛋酒
参数37:雪花蛋酒
参数38:0
参数39:null
参数40:2017-06-20 19:00:59
参数41:2.7662652
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:212236
参数3:1
 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204a73571172104
参数2:0
参数3:212236
参数4:0009-0446
参数5:饿了么
参数6:1209015365357735964
参数7:440
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:08:01
参数14:26.3
参数15:0.0
参数16:0.81
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:16.3
参数22:19.49
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:08:10
参数31:程
参数32:17671752005
参数33:曙光星城B区关山新竹路曙光新村 二栋一单元601
参数34:114.40258993
参数35:30.48624004
参数36:114.4091521498551
参数37:30.492031481335644
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:00:59
参数66:2017-06-20 19:00:59
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"绿豆汤","price":3.9,"quantity":1,"id":126727061,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204a73067989324
参数2:B6204a73571172104
参数3:用户
参数4:0
参数5:商家待接单
参数6:程支付成功
参数7:程
参数8:2017-06-20 14:08:10
参数9:0
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-20' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-20
参数2:2017-06-20
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:08:01
参数2:2017-06-20 14:08:01
参数3:212236
 
[INFO][2017-06-20 19:01:00] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204a73571172104,0009-0446 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:08:01
参数2:2017-06-20 14:08:01
参数3:212236
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:17671752005
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:559
参数2:479
参数3:2
参数4:4.0
参数5:B6204a73571172104
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:00
参数4:服务不可用
参数5:B620776203096446
参数6:B6204a73571172104
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620776203096446
参数2:B6204a73571172104
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:00
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15172223587
参数2:1
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B620776025576703
参数2:9
参数3:B6204a73571172104
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-20 19:01:00
参数11:1.8526616
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620776118371765
参数17:9
参数18:B6204a73571172104
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-20 19:01:00
参数26:2.8901522
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B620776611200641
参数32:9
参数33:B6204a73571172104
参数34:1
参数35:130
参数36:肉末鱼香茄条
参数37:肉末鱼香茄条
参数38:0
参数39:null
参数40:2017-06-20 19:01:00
参数41:14.747187
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15172223587
参数2:菜大师用户
参数3:2017-06-20 14:12:30
参数4:2017-06-20 14:12:30
参数5:1
参数6:1
参数7:0.0
参数8:30.50433992,114.43114003
参数9:2017-06-20 14:12:30
参数10:2017-06-20 14:12:30
参数11:0
参数12:2017-06-20 14:12:30
参数13:2017-06-20 14:12:30
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15172223587
参数2:1
 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:12:30
参数2:null
参数3:0
参数4:2017-06-20 14:12:30
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303398
参数18:1
 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620777266811177
参数2:0
参数3:303398
参数4:0009-0447
参数5:饿了么
参数6:1209015654420761628
参数7:441
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:12:16
参数14:37.3
参数15:-8.0
参数16:1.26
参数17:4.0
参数18:3.0
参数19:21.0
参数20:0.0
参数21:15.3
参数22:28.04
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:12:30
参数31:周(先生)
参数32:15172223587
参数33:华光大厦-正门东湖高新开发区佳园路6号  华光大厦 12 楼
参数34:114.43114003
参数35:30.50433992
参数36:114.43773489411042
参数37:30.510058315356133
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:01
参数66:2017-06-20 19:01:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"米饭","price":1.0,"quantity":1,"id":92440355,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"柠檬酸梅汤","price":5.8,"quantity":1,"id":1230032195,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"水煮肉片+雪花蛋酒+爱心荷包蛋","price":30.5,"quantity":1,"id":500973446,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620777068644360
参数2:B620777266811177
参数3:用户
参数4:0
参数5:商家待接单
参数6:周(先生)支付成功
参数7:周(先生)
参数8:2017-06-20 14:12:30
参数9:0
 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:12:16
参数2:2017-06-20 14:12:16
参数3:303398
 
[INFO][2017-06-20 19:01:01] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B620777266811177,0009-0447 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:12:16
参数2:2017-06-20 14:12:16
参数3:303398
 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15172223587
 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18627776680
参数2:1
 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:4641
参数2:3978
参数3:10
参数4:12.0
参数5:B620777266811177
 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18627776680
参数2:菜大师用户
参数3:2017-06-20 14:15:11
参数4:2017-06-20 14:15:11
参数5:1
参数6:1
参数7:0.0
参数8:30.47071047,114.40030016
参数9:2017-06-20 14:15:11
参数10:2017-06-20 14:15:11
参数11:0
参数12:2017-06-20 14:15:11
参数13:2017-06-20 14:15:11
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:01
参数4:服务不可用
参数5:B620777765574122
参数6:B620777266811177
 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18627776680
参数2:1
 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620777765574122
参数2:B620777266811177
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:01
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620777504332237
参数2:9
参数3:B620777266811177
参数4:3
参数5:50
参数6:米饭
参数7:金枪鱼沙拉
参数8:0
参数9:null
参数10:2017-06-20 19:01:01
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620777088207360
参数17:9
参数18:B620777266811177
参数19:10
参数20:143
参数21:柠檬酸梅汤
参数22:柠檬酸梅汤
参数23:0
参数24:null
参数25:2017-06-20 19:01:01
参数26:4.3601074
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B620777114206174
参数32:9
参数33:B620777266811177
参数34:1
参数35:88
参数36:水煮肉片
参数37:水煮肉片
参数38:0
参数39:null
参数40:2017-06-20 19:01:01
参数41:18.327187
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B620778495555245
参数47:9
参数48:B620777266811177
参数49:2
参数50:47
参数51:雪花蛋酒
参数52:雪花蛋酒
参数53:0
参数54:null
参数55:2017-06-20 19:01:02
参数56:2.6838973
参数57:1
参数58:0
参数59:0
参数60:1
参数61:B620778834087722
参数62:9
参数63:B620777266811177
参数64:5
参数65:38
参数66:爱心荷包蛋
参数67:荷包蛋
参数68:0
参数69:null
参数70:2017-06-20 19:01:02
参数71:1.9170696
参数72:1
参数73:0
参数74:0
参数75:1
 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:15:11
参数2:null
参数3:0
参数4:2017-06-20 14:15:11
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303399
参数18:1
 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620778308709528
参数2:0
参数3:303399
参数4:0009-0448
参数5:饿了么
参数6:1209015732460018716
参数7:442
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:14:57
参数14:24.9
参数15:-1.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:15:11
参数31:王键(先生)
参数32:18627776680
参数33:清江山水2.一期34栋1单元1301室
参数34:114.40030016
参数35:30.47071047
参数36:114.40683807047118
参数37:30.47653181348372
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:02
参数66:2017-06-20 19:01:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620778543038028
参数2:B620778308709528
参数3:用户
参数4:0
参数5:商家待接单
参数6:王键(先生)支付成功
参数7:王键(先生)
参数8:2017-06-20 14:15:11
参数9:0
 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:14:57
参数2:2017-06-20 14:14:57
参数3:303399
 
[INFO][2017-06-20 19:01:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B620778308709528,0009-0448 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18627776680
 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:14:57
参数2:2017-06-20 14:14:57
参数3:303399
 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2386
参数2:2045
参数3:5
参数4:7.0
参数5:B620778308709528
 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:03
参数4:服务不可用
参数5:B620778300479637
参数6:B620778308709528
 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620778543992051
参数2:9
参数3:B620778308709528
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-20 19:01:02
参数11:14.513413
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620779711993354
参数17:9
参数18:B620778308709528
参数19:2
参数20:123
参数21:香滑蒸鸡蛋
参数22:香滑蒸鸡蛋
参数23:0
参数24:null
参数25:2017-06-20 19:01:03
参数26:3.6465862
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620778300479637
参数2:B620778308709528
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:03
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15927005101
参数2:1
 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18550
参数3:1
 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620779144813504
参数2:0
参数3:18550
参数4:0009-0449
参数5:饿了么
参数6:1209015749295874076
参数7:443
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:16:27
参数14:31.9
参数15:-8.0
参数16:1.09
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.9
参数22:24.81
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:16:30
参数31:付显锋(先生)
参数32:15927005101
参数33:光谷青年城11-1-1502
参数34:114.40119216
参数35:30.49136407
参数36:114.40775358192835
参数37:30.497177148497233
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:03
参数66:2017-06-20 19:01:03
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"阳干鲫鱼","price":26.9,"quantity":1,"id":1228652604,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620779394631582
参数2:B620779144813504
参数3:用户
参数4:0
参数5:商家待接单
参数6:付显锋(先生)支付成功
参数7:付显锋(先生)
参数8:2017-06-20 14:16:30
参数9:0
 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:16:27
参数2:2017-06-20 14:16:27
参数3:18550
 
[INFO][2017-06-20 19:01:04] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B620779144813504,0009-0449 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:16:27
参数2:2017-06-20 14:16:27
参数3:18550
 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15927005101
 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:754
参数2:646
参数3:2
参数4:4.0
参数5:B620779144813504
 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:04
参数4:服务不可用
参数5:B62077a147807085
参数6:B620779144813504
 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13627117541
参数2:1
 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B62077a257964886
参数2:9
参数3:B620779144813504
参数4:2
参数5:123
参数6:香滑蒸鸡蛋
参数7:香滑蒸鸡蛋
参数8:0
参数9:null
参数10:2017-06-20 19:01:04
参数11:3.8887146
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62077a781693350
参数17:9
参数18:B620779144813504
参数19:1
参数20:136
参数21:阳干鲫鱼
参数22:阳干鲫鱼
参数23:0
参数24:null
参数25:2017-06-20 19:01:04
参数26:20.921284
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62077a147807085
参数2:B620779144813504
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:04
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:92515
参数3:1
 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62077a230395672
参数2:0
参数3:92515
参数4:0009-0450
参数5:饿了么
参数6:1209016005920151580
参数7:444
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:19:49
参数14:26.9
参数15:0.0
参数16:0.84
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:16.9
参数22:20.06
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:20:00
参数31:张雄
参数32:13627117541
参数33:湖北省武汉市洪山区关东街道光谷青年城洪山区新竹路光谷青年城5栋1101
参数34:114.402278
参数35:30.492258
参数36:114.40884440932922
参数37:30.498055331523556
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:04
参数66:2017-06-20 19:01:04
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62077b336204186
参数2:B62077a230395672
参数3:用户
参数4:0
参数5:商家待接单
参数6:张雄支付成功
参数7:张雄
参数8:2017-06-20 14:20:00
参数9:0
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:19:49
参数2:2017-06-20 14:19:49
参数3:92515
 
[INFO][2017-06-20 19:01:05] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62077a230395672,0009-0450 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:19:49
参数2:2017-06-20 14:19:49
参数3:92515
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13627117541
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_prints
             


         WHERE stores_id = ? 
         
            ORDER BY print_id 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1077
参数2:923
参数3:3
参数4:5.0
参数5:B62077a230395672
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:05
参数4:服务不可用
参数5:B62077b879601766
参数6:B62077a230395672
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13260691886
参数2:1
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62077b879601766
参数2:B62077a230395672
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:05
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62077b892276610
参数2:9
参数3:B62077a230395672
参数4:0
参数5:0
参数6:红烧牛腩-份
参数7:null
参数8:0
参数9:null
参数10:2017-06-20 19:01:05
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:303365
参数3:1
 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62077b783915145
参数2:0
参数3:303365
参数4:0009-0451
参数5:饿了么
参数6:1209016311785519132
参数7:445
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:25:55
参数14:24.9
参数15:0.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:25:57
参数31:熊(女士)
参数32:13260691886
参数33:曙光星城B区关山新竹路曙光新村 3栋1单元2004
参数34:114.40258993
参数35:30.48624004
参数36:114.4091521498551
参数37:30.492031481335644
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:05
参数66:2017-06-20 19:01:05
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片","price":24.9,"quantity":1,"id":180150417,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62077c018621173
参数2:B62077b783915145
参数3:用户
参数4:0
参数5:商家待接单
参数6:熊(女士)支付成功
参数7:熊(女士)
参数8:2017-06-20 14:25:57
参数9:0
 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:25:55
参数2:2017-06-20 14:25:55
参数3:303365
 
[INFO][2017-06-20 19:01:06] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62077b783915145,0009-0451 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13260691886
 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:25:55
参数2:2017-06-20 14:25:55
参数3:303365
 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:559
参数2:479
参数3:2
参数4:4.0
参数5:B62077b783915145
 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62077c668145536
参数2:9
参数3:B62077b783915145
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:01:06
参数11:18.16
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:06
参数4:服务不可用
参数5:B62077c718980601
参数6:B62077b783915145
 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62077c718980601
参数2:B62077b783915145
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:06
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15907148070
参数2:1
 
[INFO][2017-06-20 19:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:208954
参数3:1
 
[INFO][2017-06-20 19:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aa7407713746
参数2:0
参数3:208954
参数4:0009-0452
参数5:饿了么
参数6:1209016324964035612
参数7:446
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:27:11
参数14:31.9
参数15:-8.0
参数16:1.09
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.9
参数22:24.81
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:27:22
参数31:万沙(先生)
参数32:15907148070
参数33:明珠花园雄楚大道1021 2栋3单元502
参数34:114.4088202
参数35:30.49798049
参数36:114.41541208318256
参数37:30.503698573089412
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:11
参数66:2017-06-20 19:01:11
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aa7919919463
参数2:B6204aa7407713746
参数3:用户
参数4:0
参数5:商家待接单
参数6:万沙(先生)支付成功
参数7:万沙(先生)
参数8:2017-06-20 14:27:22
参数9:0
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:27:11
参数2:2017-06-20 14:27:11
参数3:208954
 
[INFO][2017-06-20 19:01:12] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204aa7407713746,0009-0452 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:27:11
参数2:2017-06-20 14:27:11
参数3:208954
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15907148070
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:香滑蒸鸡蛋
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1662
参数2:1424
参数3:4
参数4:6.0
参数5:B6204aa7407713746
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:12
参数4:服务不可用
参数5:B6204aa7092973308
参数6:B6204aa7407713746
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13006369052
参数2:1
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aa7092973308
参数2:B6204aa7407713746
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:12
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:64713
参数3:1
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204aa8107395830
参数2:9
参数3:B6204aa7407713746
参数4:2
参数5:123
参数6:香滑蒸鸡蛋
参数7:香滑蒸鸡蛋
参数8:0
参数9:null
参数10:2017-06-20 19:01:12
参数11:3.8887146
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204aa8111302342
参数17:9
参数18:B6204aa7407713746
参数19:0
参数20:0
参数21:红烧牛腩-份
参数22:null
参数23:0
参数24:null
参数25:2017-06-20 19:01:12
参数26:0.0
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aa8910224632
参数2:0
参数3:64713
参数4:0009-0453
参数5:饿了么
参数6:1209016465557068828
参数7:447
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:28:37
参数14:51.8
参数15:0.0
参数16:2.04
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:38.8
参数22:42.76
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:28:50
参数31:陈钰
参数32:13006369052
参数33:湖北省武汉市洪山区关山街道关南小区光谷第六小学旁边中间三局5栋3单元401
参数34:114.410615
参数35:30.472443
参数36:114.41718815081207
参数37:30.478138397196822
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:12
参数66:2017-06-20 19:01:12
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"阳干鲫鱼","price":26.9,"quantity":1,"id":1228652604,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aa9735987448
参数2:B6204aa8910224632
参数3:用户
参数4:0
参数5:商家待接单
参数6:陈钰支付成功
参数7:陈钰
参数8:2017-06-20 14:28:50
参数9:0
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:28:37
参数2:2017-06-20 14:28:37
参数3:64713
 
[INFO][2017-06-20 19:01:13] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204aa8910224632,0009-0453 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:28:37
参数2:2017-06-20 14:28:37
参数3:64713
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13006369052
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2776
参数2:2379
参数3:6
参数4:8.0
参数5:B6204aa8910224632
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:13
参数4:服务不可用
参数5:B6204aa9200979106
参数6:B6204aa8910224632
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13647115494
参数2:1
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204aa9200979106
参数2:B6204aa8910224632
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:13
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13647115494
参数2:菜大师用户
参数3:2017-06-20 14:29:59
参数4:2017-06-20 14:29:59
参数5:1
参数6:1
参数7:0.0
参数8:30.49738999,114.40217016
参数9:2017-06-20 14:29:59
参数10:2017-06-20 14:29:59
参数11:0
参数12:2017-06-20 14:29:59
参数13:2017-06-20 14:29:59
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204aa9209537345
参数2:9
参数3:B6204aa8910224632
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-20 19:01:13
参数11:16.427103
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204aa9800343137
参数17:9
参数18:B6204aa8910224632
参数19:2
参数20:123
参数21:香滑蒸鸡蛋
参数22:香滑蒸鸡蛋
参数23:0
参数24:null
参数25:2017-06-20 19:01:13
参数26:4.127413
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204aa9322717777
参数32:9
参数33:B6204aa8910224632
参数34:1
参数35:136
参数36:阳干鲫鱼
参数37:阳干鲫鱼
参数38:0
参数39:null
参数40:2017-06-20 19:01:13
参数41:22.205482
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13647115494
参数2:1
 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:29:59
参数2:null
参数3:0
参数4:2017-06-20 14:29:59
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303400
参数18:1
 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aaa835891462
参数2:0
参数3:303400
参数4:0009-0454
参数5:饿了么
参数6:1209016434527718428
参数7:448
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:29:24
参数14:32.5
参数15:-8.0
参数16:1.12
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.5
参数22:25.38
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:29:59
参数31:张莹(女士)
参数32:13647115494
参数33:紫菘・枫林上城雄楚大街968号 9栋1单元1201
参数34:114.40217016
参数35:30.49738999
参数36:114.40873985852906
参数37:30.503189861396706
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:14
参数66:2017-06-20 19:01:14
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"红烧牛腩（小份）+雪花蛋酒+爱心荷包蛋","price":32.5,"quantity":1,"id":500972979,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aaa544462354
参数2:B6204aaa835891462
参数3:用户
参数4:0
参数5:商家待接单
参数6:张莹(女士)支付成功
参数7:张莹(女士)
参数8:2017-06-20 14:29:59
参数9:0
 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:29:24
参数2:2017-06-20 14:29:24
参数3:303400
 
[INFO][2017-06-20 19:01:14] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204aaa835891462,0009-0454 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:29:24
参数2:2017-06-20 14:29:24
参数3:303400
 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13647115494
 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:红烧牛腩（小份）
 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1504
参数2:1289
参数3:4
参数4:6.0
参数5:B6204aaa835891462
 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:14
参数4:服务不可用
参数5:B6204aaa699084406
参数6:B6204aaa835891462
 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aaa699084406
参数2:B6204aaa835891462
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:14
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:雪花蛋酒
 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13367252991
参数2:1
 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13367252991
参数2:菜大师用户
参数3:2017-06-20 14:30:29
参数4:2017-06-20 14:30:29
参数5:1
参数6:1
参数7:0.0
参数8:30.48314008,114.41659005
参数9:2017-06-20 14:30:29
参数10:2017-06-20 14:30:29
参数11:0
参数12:2017-06-20 14:30:29
参数13:2017-06-20 14:30:29
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13367252991
参数2:1
 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:爱心荷包蛋
 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:30:29
参数2:null
参数3:0
参数4:2017-06-20 14:30:29
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303401
参数18:1
 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aab534760861
参数2:0
参数3:303401
参数4:0009-0455
参数5:饿了么
参数6:1209016480715500572
参数7:449
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:30:08
参数14:24.9
参数15:-6.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:8.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:30:29
参数31:周诚轩(先生)
参数32:13367252991
参数33:武汉职业技术学院公寓9幢光谷大道 东九522
参数34:114.41659005
参数35:30.48314008
参数36:114.42318320832447
参数37:30.488803129389368
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:15
参数66:2017-06-20 19:01:15
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片","price":24.9,"quantity":1,"id":180150417,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aab857905425
参数2:9
参数3:B6204aaa835891462
参数4:1
参数5:2
参数6:红烧牛腩（小份）
参数7:红烧牛腩
参数8:0
参数9:null
参数10:2017-06-20 19:01:15
参数11:20.606333
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204aab164779020
参数17:9
参数18:B6204aaa835891462
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-20 19:01:15
参数26:2.7846394
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204aab568344746
参数32:9
参数33:B6204aaa835891462
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-20 19:01:15
参数41:1.9890282
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aab268152077
参数2:B6204aab534760861
参数3:用户
参数4:0
参数5:商家待接单
参数6:周诚轩(先生)支付成功
参数7:周诚轩(先生)
参数8:2017-06-20 14:30:29
参数9:0
 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:30:08
参数2:2017-06-20 14:30:08
参数3:303401
 
[INFO][2017-06-20 19:01:16] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204aab534760861,0009-0455 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:30:08
参数2:2017-06-20 14:30:08
参数3:303401
 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13367252991
 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:水煮肉片
 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2159
参数2:1850
参数3:5
参数4:7.0
参数5:B6204aab534760861
 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:16
参数4:服务不可用
参数5:B6204aac107308748
参数6:B6204aab534760861
 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13409609892
参数2:1
 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204aac107308748
参数2:B6204aab534760861
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:16
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204aac221942021
参数2:9
参数3:B6204aab534760861
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:01:16
参数11:18.16
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:175557
参数3:1
 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aac088318135
参数2:0
参数3:175557
参数4:0009-0456
参数5:饿了么
参数6:1209016488659258396
参数7:450
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:30:56
参数14:23.4
参数15:0.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:31:09
参数31:何雨潇
参数32:13409609892
参数33:湖北省武汉市洪山区关山街道武汉职业技术学院西区西逸1舍西一宿舍
参数34:114.407223
参数35:30.486844
参数36:114.41380152315284
参数37:30.492576568976645
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:16
参数66:2017-06-20 19:01:16
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":108171986,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aac488977408
参数2:B6204aac088318135
参数3:用户
参数4:0
参数5:商家待接单
参数6:何雨潇支付成功
参数7:何雨潇
参数8:2017-06-20 14:31:09
参数9:0
 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:30:56
参数2:2017-06-20 14:30:56
参数3:175557
 
[INFO][2017-06-20 19:01:17] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204aac088318135,0009-0456 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13409609892
 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:30:56
参数2:2017-06-20 14:30:56
参数3:175557
 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1543
参数2:1322
参数3:4
参数4:6.0
参数5:B6204aac088318135
 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:17
参数4:服务不可用
参数5:B6204aad254291871
参数6:B6204aac088318135
 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204aad185651138
参数2:9
参数3:B6204aac088318135
参数4:2
参数5:47
参数6:雪花蛋酒
参数7:雪花蛋酒
参数8:0
参数9:null
参数10:2017-06-20 19:01:17
参数11:2.5023503
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204aad332320128
参数17:9
参数18:B6204aac088318135
参数19:1
参数20:130
参数21:肉末鱼香茄条
参数22:肉末鱼香茄条
参数23:0
参数24:null
参数25:2017-06-20 19:01:17
参数26:14.227649
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aad254291871
参数2:B6204aac088318135
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:17
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18186004509
参数2:1
 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:131116
参数3:1
 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aae916532128
参数2:0
参数3:131116
参数4:0009-0457
参数5:饿了么
参数6:1209016512055181340
参数7:451
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:31:48
参数14:43.3
参数15:0.0
参数16:1.61
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:30.3
参数22:34.69
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:31:50
参数31:鲁振宇(先生)
参数32:18186004509
参数33:中南财经政法大学体育部中南财经政法大学南湖校区内，立信公寓，4栋3单元502
参数34:114.38457973
参数35:30.47137968
参数36:114.39104570328759
参数37:30.47747352086337
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:18
参数66:2017-06-20 19:01:18
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"香酥鸡柳","price":20.9,"quantity":1,"id":560222731,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"番茄炒鸡蛋-大份","price":19.9,"quantity":1,"id":560271173,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aae677377620
参数2:B6204aae916532128
参数3:用户
参数4:0
参数5:商家待接单
参数6:鲁振宇(先生)支付成功
参数7:鲁振宇(先生)
参数8:2017-06-20 14:31:50
参数9:0
 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:31:48
参数2:2017-06-20 14:31:48
参数3:131116
 
[INFO][2017-06-20 19:01:18] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204aae916532128,0009-0457 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:31:48
参数2:2017-06-20 14:31:48
参数3:131116
 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18186004509
 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:3397
参数2:2911
参数3:7
参数4:9.0
参数5:B6204aae916532128
 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:荷包蛋
 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:18
参数4:服务不可用
参数5:B6204aae568473168
参数6:B6204aae916532128
 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18281978265
参数2:1
 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204aae568473168
参数2:B6204aae916532128
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:18
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:278296
参数3:1
 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aae063855225
参数2:9
参数3:B6204aae916532128
参数4:1
参数5:127
参数6:香酥鸡柳
参数7:香酥鸡柳
参数8:0
参数9:null
参数10:2017-06-20 19:01:18
参数11:16.744133
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204aaf498001415
参数17:9
参数18:B6204aae916532128
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-20 19:01:19
参数26:2.0028868
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204aaf053868771
参数32:9
参数33:B6204aae916532128
参数34:1
参数35:7
参数36:番茄炒鸡蛋-大份
参数37:番茄炒鸡蛋
参数38:0
参数39:null
参数40:2017-06-20 19:01:19
参数41:15.942979
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aaf878173070
参数2:0
参数3:278296
参数4:0009-0458
参数5:饿了么
参数6:1209016848866163740
参数7:452
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:40:08
参数14:43.8
参数15:0.0
参数16:1.64
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:30.8
参数22:35.16
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:40:22
参数31:王(先生)
参数32:18281978265
参数33:中南民族大学南区宿舍 2栋
参数34:114.39377032
参数35:30.48339061
参数36:114.40029166936154
参数37:30.48932421003206
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:19
参数66:2017-06-20 19:01:19
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aaf986125165
参数2:B6204aaf878173070
参数3:用户
参数4:0
参数5:商家待接单
参数6:王(先生)支付成功
参数7:王(先生)
参数8:2017-06-20 14:40:22
参数9:0
 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:40:08
参数2:2017-06-20 14:40:08
参数3:278296
 
[INFO][2017-06-20 19:01:19] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204aaf878173070,0009-0458 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:40:08
参数2:2017-06-20 14:40:08
参数3:278296
 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18281978265
 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1376
参数2:1179
参数3:3
参数4:5.0
参数5:B6204aaf878173070
 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:19
参数4:服务不可用
参数5:B6204aaf949959724
参数6:B6204aaf878173070
 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aaf949959724
参数2:B6204aaf878173070
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:19
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13026142815
参数2:1
 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:小炒土豆片
 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:53837
参数3:1
 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204aaf914275210
参数2:9
参数3:B6204aaf878173070
参数4:0
参数5:0
参数6:红烧牛腩-份
参数7:null
参数8:0
参数9:null
参数10:2017-06-20 19:01:19
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ab0397914442
参数17:9
参数18:B6204aaf878173070
参数19:1
参数20:24
参数21:小炒土豆片
参数22:小炒土豆片
参数23:0
参数24:null
参数25:2017-06-20 19:01:20
参数26:13.566301
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab0415797266
参数2:0
参数3:53837
参数4:0009-0459
参数5:饿了么
参数6:1209016934237079580
参数7:453
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:41:03
参数14:23.699999
参数15:-1.0
参数16:0.68
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:12.7
参数22:17.02
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:41:06
参数31:杨(先生)
参数32:13026142815
参数33:曙光星城c区5栋2单元1502
参数34:114.40273024
参数35:30.48743941
参数36:114.40929412811296
参数37:30.493229166549973
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:茄子不要鱼香，家常口味
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:20
参数66:2017-06-20 19:01:20
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"百事可乐（听装）","price":3.8,"quantity":1,"id":157948150,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab0406708503
参数2:B6204ab0415797266
参数3:用户
参数4:0
参数5:商家待接单
参数6:杨(先生)支付成功
参数7:杨(先生)
参数8:2017-06-20 14:41:06
参数9:0
 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:41:03
参数2:2017-06-20 14:41:03
参数3:53837
 
[INFO][2017-06-20 19:01:21] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204ab0415797266,0009-0459 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:41:03
参数2:2017-06-20 14:41:03
参数3:53837
 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13026142815
 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:362
参数2:310
参数3:1
参数4:3.0
参数5:B6204ab0415797266
 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:21
参数4:服务不可用
参数5:B6204ab0614571838
参数6:B6204ab0415797266
 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ab1940299576
参数2:9
参数3:B6204ab0415797266
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-20 19:01:21
参数11:14.291056
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ab1887846707
参数17:9
参数18:B6204ab0415797266
参数19:6
参数20:73
参数21:百事可乐（听装）
参数22:百事可乐（听装）
参数23:0
参数24:null
参数25:2017-06-20 19:01:21
参数26:2.7289453
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ab0614571838
参数2:B6204ab0415797266
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:21
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13476017703
参数2:1
 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:37010
参数3:1
 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab1521438761
参数2:0
参数3:37010
参数4:0009-0460
参数5:饿了么
参数6:1209017259748586524
参数7:455
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:48:43
参数14:25.9
参数15:0.0
参数16:0.79
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:15.9
参数22:19.11
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:48:55
参数31:张狮
参数32:13476017703
参数33:湖北省武汉市洪山区关东街道光谷青年城4栋2506隔壁一间没门牌号
参数34:114.402738
参数35:30.491434
参数36:114.40930547675465
参数37:30.497224593911668
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:21
参数66:2017-06-20 19:01:21
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab1888046717
参数2:B6204ab1521438761
参数3:用户
参数4:0
参数5:商家待接单
参数6:张狮支付成功
参数7:张狮
参数8:2017-06-20 14:48:55
参数9:0
 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:48:43
参数2:2017-06-20 14:48:43
参数3:37010
 
[INFO][2017-06-20 19:01:22] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204ab1521438761,0009-0460 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:48:43
参数2:2017-06-20 14:48:43
参数3:37010
 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13476017703
 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:631
参数2:540
参数3:2
参数4:4.0
参数5:B6204ab1521438761
 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:农家小炒肉-份
 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:22
参数4:服务不可用
参数5:B6204ab2487914240
参数6:B6204ab1521438761
 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab2487914240
参数2:B6204ab1521438761
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:22
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13125041843
参数2:1
 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab2070718161
参数2:9
参数3:B6204ab1521438761
参数4:2
参数5:123
参数6:香滑蒸鸡蛋
参数7:香滑蒸鸡蛋
参数8:0
参数9:null
参数10:2017-06-20 19:01:22
参数11:3.6891892
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ab2271960135
参数17:9
参数18:B6204ab1521438761
参数19:1
参数20:3
参数21:农家小炒肉-份
参数22:农家小炒肉
参数23:0
参数24:null
参数25:2017-06-20 19:01:22
参数26:15.420811
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:288442
参数3:1
 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab2793453285
参数2:0
参数3:288442
参数4:0009-0461
参数5:饿了么
参数6:1209017188638384156
参数7:454
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:48:48
参数14:23.9
参数15:0.0
参数16:0.74
参数17:4.0
参数18:3.0
参数19:16.0
参数20:0.0
参数21:14.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:48:50
参数31:吴(先生)
参数32:13125041843
参数33:武汉职业技术学院(西区)关山大道558号 西三大宿舍楼 410
参数34:114.40893956
参数35:30.4861895
参数36:114.41552225926124
参数37:30.491903878521867
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:22
参数66:2017-06-20 19:01:22
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"米饭","price":1.0,"quantity":1,"id":92440355,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab3572156067
参数2:B6204ab2793453285
参数3:用户
参数4:0
参数5:商家待接单
参数6:吴(先生)支付成功
参数7:吴(先生)
参数8:2017-06-20 14:48:50
参数9:0
 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:48:48
参数2:2017-06-20 14:48:48
参数3:288442
 
[INFO][2017-06-20 19:01:23] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204ab2793453285,0009-0461 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:48:48
参数2:2017-06-20 14:48:48
参数3:288442
 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13125041843
 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1592
参数2:1364
参数3:4
参数4:6.0
参数5:B6204ab2793453285
 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:23
参数4:服务不可用
参数5:B6204ab3622174765
参数6:B6204ab2793453285
 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13207158565
参数2:1
 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204ab3607130084
参数2:9
参数3:B6204ab2793453285
参数4:3
参数5:50
参数6:米饭
参数7:金枪鱼沙拉
参数8:0
参数9:null
参数10:2017-06-20 19:01:23
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ab3180732754
参数17:9
参数18:B6204ab2793453285
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:01:23
参数26:17.400167
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ab3622174765
参数2:B6204ab2793453285
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:23
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:264785
参数3:1
 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab3462260718
参数2:0
参数3:264785
参数4:0009-0462
参数5:饿了么
参数6:1209017281324190748
参数7:456
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:50:54
参数14:32.5
参数15:-8.0
参数16:1.12
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.5
参数22:25.38
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:51:04
参数31:高(先生)
参数32:13207158565
参数33:紫菘・枫林上城雄楚大街968号 11栋1单元802
参数34:114.40318001
参数35:30.49706996
参数36:114.40975331757521
参数37:30.502855482229926
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:23
参数66:2017-06-20 19:01:23
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"红烧牛腩（小份）+雪花蛋酒+爱心荷包蛋","price":32.5,"quantity":1,"id":500972979,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab4575617718
参数2:B6204ab3462260718
参数3:用户
参数4:0
参数5:商家待接单
参数6:高(先生)支付成功
参数7:高(先生)
参数8:2017-06-20 14:51:04
参数9:0
 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:50:54
参数2:2017-06-20 14:50:54
参数3:264785
 
[INFO][2017-06-20 19:01:24] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204ab3462260718,0009-0462 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:50:54
参数2:2017-06-20 14:50:54
参数3:264785
 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13207158565
 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1378
参数2:1181
参数3:3
参数4:5.0
参数5:B6204ab3462260718
 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:24
参数4:服务不可用
参数5:B6204ab4857782344
参数6:B6204ab3462260718
 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18971575796
参数2:1
 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab4857782344
参数2:B6204ab3462260718
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:24
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ab4407475687
参数2:9
参数3:B6204ab3462260718
参数4:1
参数5:2
参数6:红烧牛腩（小份）
参数7:红烧牛腩
参数8:0
参数9:null
参数10:2017-06-20 19:01:24
参数11:20.606333
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ab4601062803
参数17:9
参数18:B6204ab3462260718
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-20 19:01:24
参数26:2.7846394
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204ab4549460175
参数32:9
参数33:B6204ab3462260718
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-20 19:01:24
参数41:1.9890282
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:34473
参数3:1
 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab5291753375
参数2:0
参数3:34473
参数4:0009-0463
参数5:饿了么
参数6:1209017359212253212
参数7:457
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:53:27
参数14:41.8
参数15:0.0
参数16:1.54
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:28.8
参数22:33.26
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:53:31
参数31:江帆
参数32:18971575796
参数33:湖北省武汉市洪山区关东街道湖北省武汉市光谷理想城7栋2单元2701
参数34:114.416804
参数35:30.472245
参数36:114.42338650562284
参数37:30.477904511330518
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:25
参数66:2017-06-20 19:01:25
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"花菜炒豆腐-大份","price":20.9,"quantity":1,"id":143649298,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香酥鸡柳","price":20.9,"quantity":1,"id":560222731,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab5967977036
参数2:B6204ab5291753375
参数3:用户
参数4:0
参数5:商家待接单
参数6:江帆支付成功
参数7:江帆
参数8:2017-06-20 14:53:31
参数9:0
 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:53:27
参数2:2017-06-20 14:53:27
参数3:34473
 
[INFO][2017-06-20 19:01:25] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204ab5291753375,0009-0463 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 14:53:27
参数2:2017-06-20 14:53:27
参数3:34473
 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18971575796
 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:3387
参数2:2903
参数3:7
参数4:9.0
参数5:B6204ab5291753375
 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:25
参数4:服务不可用
参数5:B6204ab5618770826
参数6:B6204ab5291753375
 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab5969234167
参数2:9
参数3:B6204ab5291753375
参数4:1
参数5:10
参数6:花菜炒豆腐-大份
参数7:花菜炒豆腐
参数8:0
参数9:null
参数10:2017-06-20 19:01:25
参数11:16.63
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ab5679422361
参数17:9
参数18:B6204ab5291753375
参数19:1
参数20:127
参数21:香酥鸡柳
参数22:香酥鸡柳
参数23:0
参数24:null
参数25:2017-06-20 19:01:25
参数26:16.63
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13026119165
参数2:1
 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ab5618770826
参数2:B6204ab5291753375
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:25
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13026119165
参数2:菜大师用户
参数3:2017-06-20 14:58:49
参数4:2017-06-20 14:58:49
参数5:1
参数6:1
参数7:0.0
参数8:30.49096995,114.4133999
参数9:2017-06-20 14:58:49
参数10:2017-06-20 14:58:49
参数11:0
参数12:2017-06-20 14:58:49
参数13:2017-06-20 14:58:49
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13026119165
参数2:1
 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:58:49
参数2:null
参数3:0
参数4:2017-06-20 14:58:49
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303402
参数18:1
 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab6296526746
参数2:0
参数3:303402
参数4:0009-0464
参数5:饿了么
参数6:1209017609016581148
参数7:458
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 14:58:46
参数14:48.1
参数15:-3.0
参数16:1.85
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:32.1
参数22:39.25
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 14:58:49
参数31:黄宇(先生)
参数32:13026119165
参数33:金地・太阳城关山一路369号 十五栋一单元602
参数34:114.4133999
参数35:30.49096995
参数36:114.41999646440364
参数37:30.496649800562754
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:26
参数66:2017-06-20 19:01:26
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪碧（听装）","price":3.8,"quantity":1,"id":157948394,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":108171986,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab6429852205
参数2:B6204ab6296526746
参数3:用户
参数4:0
参数5:商家待接单
参数6:黄宇(先生)支付成功
参数7:黄宇(先生)
参数8:2017-06-20 14:58:49
参数9:0
 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:58:46
参数2:2017-06-20 14:58:46
参数3:303402
 
[INFO][2017-06-20 19:01:26] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204ab6296526746,0009-0464 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 14:58:46
参数2:2017-06-20 14:58:46
参数3:303402
 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13026119165
 
[INFO][2017-06-20 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1419
参数2:1216
参数3:3
参数4:5.0
参数5:B6204ab6296526746
 
[INFO][2017-06-20 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:27
参数4:服务不可用
参数5:B6204ab6154488384
参数6:B6204ab6296526746
 
[INFO][2017-06-20 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ab6154488384
参数2:B6204ab6296526746
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:27
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204ab6773032256
参数2:9
参数3:B6204ab6296526746
参数4:6
参数5:74
参数6:雪碧（听装）
参数7:雪碧（听装）
参数8:0
参数9:null
参数10:2017-06-20 19:01:26
参数11:3.1008315
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ab7629650128
参数17:9
参数18:B6204ab6296526746
参数19:1
参数20:130
参数21:肉末鱼香茄条
参数22:肉末鱼香茄条
参数23:0
参数24:null
参数25:2017-06-20 19:01:27
参数26:16.238565
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204ab7474605166
参数32:9
参数33:B6204ab6296526746
参数34:2
参数35:47
参数36:雪花蛋酒
参数37:雪花蛋酒
参数38:0
参数39:null
参数40:2017-06-20 19:01:27
参数41:2.856029
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B6204ab7028230115
参数47:9
参数48:B6204ab6296526746
参数49:1
参数50:3
参数51:农家小炒肉-份
参数52:农家小炒肉
参数53:0
参数54:null
参数55:2017-06-20 19:01:27
参数56:17.054573
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13593936286
参数2:1
 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:28682
参数3:1
 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204abb137897386
参数2:0
参数3:28682
参数4:0009-0465
参数5:饿了么
参数6:1209017678415713308
参数7:459
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:01:43
参数14:24.9
参数15:0.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:01:50
参数31:王硕
参数32:13593936286
参数33:湖北省武汉市洪山区关山街道武汉职业技术学院西区西3小125
参数34:114.408522
参数35:30.485628
参数36:114.41510304414136
参数37:30.491346410581595
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:31
参数66:2017-06-20 19:01:31
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片","price":24.9,"quantity":1,"id":180150417,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204abb133634002
参数2:B6204abb137897386
参数3:用户
参数4:0
参数5:商家待接单
参数6:王硕支付成功
参数7:王硕
参数8:2017-06-20 15:01:50
参数9:0
 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:01:43
参数2:2017-06-20 15:01:43
参数3:28682
 
[INFO][2017-06-20 19:01:31] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204abb137897386,0009-0465 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:01:43
参数2:2017-06-20 15:01:43
参数3:28682
 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13593936286
 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1459
参数2:1250
参数3:3
参数4:5.0
参数5:B6204abb137897386
 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204abb652087058
参数2:9
参数3:B6204abb137897386
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:01:31
参数11:18.16
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:32
参数4:服务不可用
参数5:B6204abb658542507
参数6:B6204abb137897386
 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204abb658542507
参数2:B6204abb137897386
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:32
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17363304536
参数2:1
 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:271875
参数3:1
 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204abc331654260
参数2:0
参数3:271875
参数4:0009-0466
参数5:饿了么
参数6:1209017847001531420
参数7:460
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:04:47
参数14:30.4
参数15:0.0
参数16:1.02
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:20.4
参数22:23.38
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:04:49
参数31:罗桧(女士)
参数32:17363304536
参数33:中南民族大学武汉市洪山区民族大道182号 中南民族大学南区宿舍19栋425
参数34:114.39312709
参数35:30.48710304
参数36:114.39964902135286
参数37:30.493048972245656
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:32
参数66:2017-06-20 19:01:32
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":108171986,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204abc455947071
参数2:B6204abc331654260
参数3:用户
参数4:0
参数5:商家待接单
参数6:罗桧(女士)支付成功
参数7:罗桧(女士)
参数8:2017-06-20 15:04:49
参数9:0
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:04:47
参数2:2017-06-20 15:04:47
参数3:271875
 
[INFO][2017-06-20 19:01:33] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204abc331654260,0009-0466 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:04:47
参数2:2017-06-20 15:04:47
参数3:271875
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:17363304536
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1049
参数2:899
参数3:3
参数4:5.0
参数5:B6204abc331654260
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:33
参数4:服务不可用
参数5:B6204abc567470425
参数6:B6204abc331654260
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13713723290
参数2:1
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204abc567470425
参数2:B6204abc331654260
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:33
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:134187
参数3:1
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204abd769832287
参数2:9
参数3:B6204abc331654260
参数4:2
参数5:47
参数6:雪花蛋酒
参数7:雪花蛋酒
参数8:0
参数9:null
参数10:2017-06-20 19:01:33
参数11:2.6917763
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204abd522173867
参数17:9
参数18:B6204abc331654260
参数19:0
参数20:0
参数21:红烧牛腩-份
参数22:null
参数23:0
参数24:null
参数25:2017-06-20 19:01:33
参数26:0.0
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204abd857680174
参数2:0
参数3:134187
参数4:0009-0467
参数5:饿了么
参数6:1209017843402682396
参数7:461
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:05:52
参数14:26.5
参数15:0.0
参数16:0.82
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:16.5
参数22:19.68
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:05:55
参数31:纪鑫(先生)
参数32:13713723290
参数33:政院小区南湖大道政院小区21排95栋103
参数34:114.38448049
参数35:30.47884025
参数36:114.39095325821788
参数37:30.484937734380754
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:33
参数66:2017-06-20 19:01:33
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉+荷包蛋+雪花蛋酒","price":26.5,"quantity":1,"id":621318334,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204abd453820523
参数2:B6204abd857680174
参数3:用户
参数4:0
参数5:商家待接单
参数6:纪鑫(先生)支付成功
参数7:纪鑫(先生)
参数8:2017-06-20 15:05:55
参数9:0
 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:05:52
参数2:2017-06-20 15:05:52
参数3:134187
 
[INFO][2017-06-20 19:01:34] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204abd857680174,0009-0467 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13713723290
 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:05:52
参数2:2017-06-20 15:05:52
参数3:134187
 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:农家小炒肉
 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2716
参数2:2328
参数3:6
参数4:8.0
参数5:B6204abd857680174
 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:34
参数4:服务不可用
参数5:B6204abe876172832
参数6:B6204abd857680174
 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18827118447
参数2:1
 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204abe876172832
参数2:B6204abd857680174
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:34
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:252671
参数3:1
 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204abe097856252
参数2:9
参数3:B6204abd857680174
参数4:1
参数5:3
参数6:农家小炒肉
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-20 19:01:34
参数11:14.937831
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204abe569074741
参数17:9
参数18:B6204abd857680174
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-20 19:01:34
参数26:1.9759037
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204abe643252154
参数32:9
参数33:B6204abd857680174
参数34:2
参数35:47
参数36:雪花蛋酒
参数37:雪花蛋酒
参数38:0
参数39:null
参数40:2017-06-20 19:01:34
参数41:2.7662652
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204abe823996802
参数2:0
参数3:252671
参数4:0009-0468
参数5:饿了么
参数6:1209017923530913820
参数7:462
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:09:12
参数14:27.9
参数15:0.0
参数16:0.89
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:17.9
参数22:21.01
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:09:14
参数31:艾(先生)
参数32:18827118447
参数33:洪福家园雄楚大道大道156号 2栋1203
参数34:114.40096937
参数35:30.49722947
参数36:114.4075342401388
参数37:30.50304705240308
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:多点饭
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:34
参数66:2017-06-20 19:01:34
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204abe516159207
参数2:B6204abe823996802
参数3:用户
参数4:0
参数5:商家待接单
参数6:艾(先生)支付成功
参数7:艾(先生)
参数8:2017-06-20 15:09:14
参数9:0
 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:09:12
参数2:2017-06-20 15:09:12
参数3:252671
 
[INFO][2017-06-20 19:01:35] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204abe823996802,0009-0468 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:09:12
参数2:2017-06-20 15:09:12
参数3:252671
 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18827118447
 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1653
参数2:1416
参数3:4
参数4:6.0
参数5:B6204abe823996802
 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:35
参数4:服务不可用
参数5:B6204abf823734400
参数6:B6204abe823996802
 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18672687736
参数2:1
 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204abf619993753
参数2:9
参数3:B6204abe823996802
参数4:2
参数5:123
参数6:香滑蒸鸡蛋
参数7:香滑蒸鸡蛋
参数8:0
参数9:null
参数10:2017-06-20 19:01:35
参数11:3.765233
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204abf331008127
参数17:9
参数18:B6204abe823996802
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:01:35
参数26:17.244768
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204abf823734400
参数2:B6204abe823996802
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:35
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:116371
参数3:1
 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204abf612760744
参数2:0
参数3:116371
参数4:0009-0469
参数5:饿了么
参数6:1209018183829344284
参数7:463
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:13:19
参数14:31.9
参数15:-10.0
参数16:1.09
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:11.9
参数22:24.81
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:13:56
参数31:王艳(女士)
参数32:18672687736
参数33:丽岛漫城光谷大道46 二栋二单元905
参数34:114.42075066
参数35:30.49165986
参数36:114.42735314287071
参数37:30.49731981510947
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:35
参数66:2017-06-20 19:01:35
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac0606255708
参数2:B6204abf612760744
参数3:用户
参数4:0
参数5:商家待接单
参数6:王艳(女士)支付成功
参数7:王艳(女士)
参数8:2017-06-20 15:13:56
参数9:0
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:13:19
参数2:2017-06-20 15:13:19
参数3:116371
 
[INFO][2017-06-20 19:01:36] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204abf612760744,0009-0469 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:13:19
参数2:2017-06-20 15:13:19
参数3:116371
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18672687736
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2406
参数2:2062
参数3:5
参数4:7.0
参数5:B6204abf612760744
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:36
参数4:服务不可用
参数5:B6204ac0580387456
参数6:B6204abf612760744
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15871384937
参数2:1
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ac0580387456
参数2:B6204abf612760744
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:36
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:72470
参数3:1
 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac0262567840
参数2:9
参数3:B6204abf612760744
参数4:0
参数5:0
参数6:红烧牛腩-份
参数7:null
参数8:0
参数9:null
参数10:2017-06-20 19:01:36
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ac0699834007
参数17:9
参数18:B6204abf612760744
参数19:2
参数20:123
参数21:香滑蒸鸡蛋
参数22:香滑蒸鸡蛋
参数23:0
参数24:null
参数25:2017-06-20 19:01:36
参数26:3.8887146
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac0465487420
参数2:0
参数3:72470
参数4:0009-0470
参数5:饿了么
参数6:1209018191496387612
参数7:464
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:14:05
参数14:26.9
参数15:0.0
参数16:0.84
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:16.9
参数22:20.06
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:14:25
参数31:郑阿玉(女士)
参数32:15871384937
参数33:中南民族大学西区高层2栋民族大道182号 3103
参数34:114.39509936
参数35:30.49343012
参数36:114.40163599305531
参数37:30.49934290491528
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:36
参数66:2017-06-20 19:01:36
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac1544851534
参数2:B6204ac0465487420
参数3:用户
参数4:0
参数5:商家待接单
参数6:郑阿玉(女士)支付成功
参数7:郑阿玉(女士)
参数8:2017-06-20 15:14:25
参数9:0
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:14:05
参数2:2017-06-20 15:14:05
参数3:72470
 
[INFO][2017-06-20 19:01:37] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204ac0465487420,0009-0470 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:14:05
参数2:2017-06-20 15:14:05
参数3:72470
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15871384937
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1495
参数2:1281
参数3:3
参数4:5.0
参数5:B6204ac0465487420
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:37
参数4:服务不可用
参数5:B6204ac1359835028
参数6:B6204ac0465487420
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13720195723
参数2:1
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac1359835028
参数2:B6204ac0465487420
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:37
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:48227
参数3:1
 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204ac1578086677
参数2:9
参数3:B6204ac0465487420
参数4:0
参数5:0
参数6:红烧牛腩-份
参数7:null
参数8:0
参数9:null
参数10:2017-06-20 19:01:37
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac2052834572
参数2:0
参数3:48227
参数4:0009-0471
参数5:饿了么
参数6:1209018403761931292
参数7:465
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:20:19
参数14:42.8
参数15:0.0
参数16:1.59
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:29.8
参数22:34.21
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:20:29
参数31:罗奥(先生)
参数32:13720195723
参数33:光谷创意大厦B座2楼216
参数34:114.41086002
参数35:30.48412018
参数36:114.41744533468311
参数37:30.48981660996558
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:38
参数66:2017-06-20 19:01:38
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":2,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac2096008520
参数2:B6204ac2052834572
参数3:用户
参数4:0
参数5:商家待接单
参数6:罗奥(先生)支付成功
参数7:罗奥(先生)
参数8:2017-06-20 15:20:29
参数9:0
 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:20:19
参数2:2017-06-20 15:20:19
参数3:48227
 
[INFO][2017-06-20 19:01:38] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204ac2052834572,0009-0471 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:20:19
参数2:2017-06-20 15:20:19
参数3:48227
 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13720195723
 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1472
参数2:1261
参数3:3
参数4:5.0
参数5:B6204ac2052834572
 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:38
参数4:服务不可用
参数5:B6204ac2893585550
参数6:B6204ac2052834572
 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13554456739
参数2:1
 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ac2893585550
参数2:B6204ac2052834572
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:38
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ac2015880578
参数2:9
参数3:B6204ac2052834572
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-20 19:01:38
参数11:1.9982476
参数12:2
参数13:0
参数14:0
参数15:1
参数16:B6204ac2850737466
参数17:9
参数18:B6204ac2052834572
参数19:1
参数20:24
参数21:小炒土豆片
参数22:小炒土豆片
参数23:0
参数24:null
参数25:2017-06-20 19:01:38
参数26:13.508154
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204ac2549310515
参数32:9
参数33:B6204ac2052834572
参数34:1
参数35:3
参数36:农家小炒肉-份
参数37:农家小炒肉
参数38:0
参数39:null
参数40:2017-06-20 19:01:38
参数41:16.70535
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13554456739
参数2:菜大师用户
参数3:2017-06-20 15:33:42
参数4:2017-06-20 15:33:42
参数5:1
参数6:1
参数7:0.0
参数8:30.49158904,114.38946487
参数9:2017-06-20 15:33:42
参数10:2017-06-20 15:33:42
参数11:0
参数12:2017-06-20 15:33:42
参数13:2017-06-20 15:33:42
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13554456739
参数2:1
 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:33:42
参数2:null
参数3:0
参数4:2017-06-20 15:33:42
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303403
参数18:1
 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac3176264053
参数2:0
参数3:303403
参数4:0009-0472
参数5:饿了么
参数6:1209018946529867804
参数7:466
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:33:32
参数14:38.28
参数15:-8.0
参数16:1.26
参数17:4.0
参数18:2.0
参数19:21.0
参数20:0.0
参数21:15.28
参数22:28.02
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:33:42
参数31:李滨生(先生)
参数32:13554456739
参数33:八一花园梅花苑E6栋1002室
参数34:114.38946487
参数35:30.49158904
参数36:114.39597332732582
参数37:30.49760159159421
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:39
参数66:2017-06-20 19:01:39
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"另加筷子三件套装","price":0.38,"quantity":1,"id":148461928,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":108171986,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac3418624043
参数2:B6204ac3176264053
参数3:用户
参数4:0
参数5:商家待接单
参数6:李滨生(先生)支付成功
参数7:李滨生(先生)
参数8:2017-06-20 15:33:42
参数9:0
 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:33:32
参数2:2017-06-20 15:33:32
参数3:303403
 
[INFO][2017-06-20 19:01:39] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204ac3176264053,0009-0472 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13554456739
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:33:32
参数2:2017-06-20 15:33:32
参数3:303403
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2687
参数2:2303
参数3:6
参数4:8.0
参数5:B6204ac3176264053
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:40
参数4:服务不可用
参数5:B6204ac3519619743
参数6:B6204ac3176264053
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18289897803
参数2:1
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac3519619743
参数2:B6204ac3176264053
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:40
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:244020
参数3:1
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac4438089058
参数2:0
参数3:244020
参数4:0009-0473
参数5:饿了么
参数6:1209018948148924444
参数7:467
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:33:42
参数14:24.9
参数15:0.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:34:15
参数31:李国富(先生)
参数32:18289897803
参数33:武汉职业技术学院(东区)关山大道463号东五宿舍
参数34:114.41062214
参数35:30.483644
参数36:114.4172064506835
参数37:30.489342297144038
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:40
参数66:2017-06-20 19:01:40
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片","price":24.9,"quantity":1,"id":180150417,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac4563918233
参数2:B6204ac4438089058
参数3:用户
参数4:0
参数5:商家待接单
参数6:李国富(先生)支付成功
参数7:李国富(先生)
参数8:2017-06-20 15:34:15
参数9:0
 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac3545427833
参数2:9
参数3:B6204ac3176264053
参数4:9
参数5:99
参数6:另加筷子三件套装
参数7:筷子三件套装
参数8:0
参数9:null
参数10:2017-06-20 19:01:39
参数11:0.27815047
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ac4648321301
参数17:9
参数18:B6204ac3176264053
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-20 19:01:40
参数26:1.8299375
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204ac4422231570
参数32:9
参数33:B6204ac3176264053
参数34:2
参数35:47
参数36:雪花蛋酒
参数37:雪花蛋酒
参数38:0
参数39:null
参数40:2017-06-20 19:01:40
参数41:2.5619123
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B6204ac4090585001
参数47:9
参数48:B6204ac3176264053
参数49:2
参数50:123
参数51:香滑蒸鸡蛋
参数52:香滑蒸鸡蛋
参数53:0
参数54:null
参数55:2017-06-20 19:01:40
参数56:3.659875
参数57:1
参数58:0
参数59:0
参数60:1
参数61:B6204ac4332227671
参数62:9
参数63:B6204ac3176264053
参数64:0
参数65:0
参数66:红烧牛腩-份
参数67:null
参数68:0
参数69:null
参数70:2017-06-20 19:01:40
参数71:0.0
参数72:1
参数73:0
参数74:0
参数75:1
 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:33:42
参数2:2017-06-20 15:33:42
参数3:244020
 
[INFO][2017-06-20 19:01:41] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204ac4438089058,0009-0473 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18289897803
 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:33:42
参数2:2017-06-20 15:33:42
参数3:244020
 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1549
参数2:1327
参数3:4
参数4:6.0
参数5:B6204ac4438089058
 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204ac5473289571
参数2:9
参数3:B6204ac4438089058
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:01:41
参数11:18.16
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:41
参数4:服务不可用
参数5:B6204ac5516796135
参数6:B6204ac4438089058
 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17671771650
参数2:1
 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ac5516796135
参数2:B6204ac4438089058
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:41
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:242353
参数3:1
 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac5088664030
参数2:0
参数3:242353
参数4:0009-0474
参数5:饿了么
参数6:1209018961168092188
参数7:468
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:35:04
参数14:30.5
参数15:-5.0
参数16:1.02
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:15.5
参数22:23.48
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:35:07
参数31:王子琦(先生)
参数32:17671771650
参数33:中南民族大学23栋417
参数34:114.39244933
参数35:30.47928952
参数36:114.39896030570534
参数37:30.48524543769679
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:41
参数66:2017-06-20 19:01:41
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片+雪花蛋酒+爱心荷包蛋","price":30.5,"quantity":1,"id":500973446,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac5342434722
参数2:B6204ac5088664030
参数3:用户
参数4:0
参数5:商家待接单
参数6:王子琦(先生)支付成功
参数7:王子琦(先生)
参数8:2017-06-20 15:35:07
参数9:0
 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:35:04
参数2:2017-06-20 15:35:04
参数3:242353
 
[INFO][2017-06-20 19:01:42] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204ac5088664030,0009-0474 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:35:04
参数2:2017-06-20 15:35:04
参数3:242353
 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:17671771650
 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1945
参数2:1667
参数3:4
参数4:6.0
参数5:B6204ac5088664030
 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:42
参数4:服务不可用
参数5:B6204ac6529717160
参数6:B6204ac5088664030
 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac6529717160
参数2:B6204ac5088664030
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:42
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ac6424282774
参数2:9
参数3:B6204ac5088664030
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:01:42
参数11:18.768295
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ac6708814761
参数17:9
参数18:B6204ac5088664030
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-20 19:01:42
参数26:2.7484949
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204ac6252363587
参数32:9
参数33:B6204ac5088664030
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-20 19:01:42
参数41:1.9632107
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18062600566
参数2:1
 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:16545
参数3:1
 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac7322005311
参数2:0
参数3:16545
参数4:0009-0475
参数5:饿了么
参数6:1209019056831831068
参数7:469
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:39:43
参数14:42.8
参数15:-5.0
参数16:1.59
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:24.8
参数22:34.21
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:39:52
参数31:刘婧宇(女士)
参数32:18062600566
参数33:光谷总部国际时代6栋光谷大道光谷总部国际二期时代附近 803
参数34:114.42255042
参数35:30.47993995
参数36:114.42914098444365
参数37:30.485599722201354
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:43
参数66:2017-06-20 19:01:43
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac7103483538
参数2:B6204ac7322005311
参数3:用户
参数4:0
参数5:商家待接单
参数6:刘婧宇(女士)支付成功
参数7:刘婧宇(女士)
参数8:2017-06-20 15:39:52
参数9:0
 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:39:43
参数2:2017-06-20 15:39:43
参数3:16545
 
[INFO][2017-06-20 19:01:43] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204ac7322005311,0009-0475 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18062600566
 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:39:43
参数2:2017-06-20 15:39:43
参数3:16545
 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:青豆米鸡丁
 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:3155
参数2:2704
参数3:7
参数4:9.0
参数5:B6204ac7322005311
 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:44
参数4:服务不可用
参数5:B6204ac7752713660
参数6:B6204ac7322005311
 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ac7752713660
参数2:B6204ac7322005311
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:44
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac8217546365
参数2:9
参数3:B6204ac7322005311
参数4:1
参数5:117
参数6:青豆米鸡丁
参数7:青豆米鸡丁
参数8:0
参数9:null
参数10:2017-06-20 19:01:44
参数11:15.906051
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ac8392771607
参数17:9
参数18:B6204ac7322005311
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:01:44
参数26:18.303947
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17671681340
参数2:1
 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17671681340
参数2:菜大师用户
参数3:2017-06-20 15:41:30
参数4:2017-06-20 15:41:30
参数5:1
参数6:1
参数7:0.0
参数8:30.47373005,114.42202991
参数9:2017-06-20 15:41:30
参数10:2017-06-20 15:41:30
参数11:0
参数12:2017-06-20 15:41:30
参数13:2017-06-20 15:41:30
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17671681340
参数2:1
 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:41:30
参数2:null
参数3:0
参数4:2017-06-20 15:41:30
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303404
参数18:1
 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac8043954322
参数2:0
参数3:303404
参数4:0009-0476
参数5:饿了么
参数6:1209019180622442524
参数7:470
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:41:16
参数14:23.4
参数15:-6.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:7.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:41:30
参数31:程洋(先生)
参数32:17671681340
参数33:现代光谷世贸中心D栋1301 D栋1301
参数34:114.42202991
参数35:30.47373005
参数36:114.42861458342581
参数37:30.479387061270323
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:1用餐, 多点辣
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:44
参数66:2017-06-20 19:01:44
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac9707534233
参数2:B6204ac8043954322
参数3:用户
参数4:0
参数5:商家待接单
参数6:程洋(先生)支付成功
参数7:程洋(先生)
参数8:2017-06-20 15:41:30
参数9:0
 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:41:16
参数2:2017-06-20 15:41:16
参数3:303404
 
[INFO][2017-06-20 19:01:45] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204ac8043954322,0009-0476 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:17671681340
 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:41:16
参数2:2017-06-20 15:41:16
参数3:303404
 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:3550
参数2:3042
参数3:8
参数4:10.0
参数5:B6204ac8043954322
 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:45
参数4:服务不可用
参数5:B6204ac9259718377
参数6:B6204ac8043954322
 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204ac9359148635
参数2:9
参数3:B6204ac8043954322
参数4:1
参数5:3
参数6:农家小炒肉-份
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-20 19:01:45
参数11:14.942606
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ac9742413811
参数17:9
参数18:B6204ac8043954322
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-20 19:01:45
参数26:1.7873931
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15994299583
参数2:1
 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ac9259718377
参数2:B6204ac8043954322
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:45
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15994299583
参数2:菜大师用户
参数3:2017-06-20 15:42:29
参数4:2017-06-20 15:42:29
参数5:1
参数6:1
参数7:0.0
参数8:30.47525011,114.41018946
参数9:2017-06-20 15:42:29
参数10:2017-06-20 15:42:29
参数11:0
参数12:2017-06-20 15:42:29
参数13:2017-06-20 15:42:29
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15994299583
参数2:1
 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:42:29
参数2:null
参数3:0
参数4:2017-06-20 15:42:29
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303405
参数18:1
 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aca307272404
参数2:0
参数3:303405
参数4:0009-0477
参数5:饿了么
参数6:1209019242287166492
参数7:471
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:42:27
参数14:29.2
参数15:-8.0
参数16:0.96
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:11.2
参数22:22.24
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:42:29
参数31:李(先生)
参数32:15994299583
参数33:光谷天地酒店公寓关山大道519号光谷天地1层 14层1413室
参数34:114.41018946
参数35:30.47525011
参数36:114.41676432911812
参数37:30.480949908592866
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:辣一点。饭多一点。谢谢
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:46
参数66:2017-06-20 19:01:46
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"百事可乐（听装）","price":3.8,"quantity":1,"id":157948150,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204aca547545446
参数2:B6204aca307272404
参数3:用户
参数4:0
参数5:商家待接单
参数6:李(先生)支付成功
参数7:李(先生)
参数8:2017-06-20 15:42:29
参数9:0
 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:42:27
参数2:2017-06-20 15:42:27
参数3:303405
 
[INFO][2017-06-20 19:01:46] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204aca307272404,0009-0477 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15994299583
 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:42:27
参数2:2017-06-20 15:42:27
参数3:303405
 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2356
参数2:2019
参数3:5
参数4:7.0
参数5:B6204aca307272404
 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:46
参数4:服务不可用
参数5:B6204aca876782787
参数6:B6204aca307272404
 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15172060395
参数2:1
 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204aca876782787
参数2:B6204aca307272404
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:46
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204aca347204835
参数2:9
参数3:B6204aca307272404
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-20 19:01:46
参数11:1.9041096
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204aca590986076
参数17:9
参数18:B6204aca307272404
参数19:6
参数20:73
参数21:百事可乐（听装）
参数22:百事可乐（听装）
参数23:0
参数24:null
参数25:2017-06-20 19:01:46
参数26:2.8942466
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204acb319455354
参数32:9
参数33:B6204aca307272404
参数34:1
参数35:129
参数36:新派手撕鸡
参数37:新派手撕鸡
参数38:0
参数39:null
参数40:2017-06-20 19:01:47
参数41:17.441643
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:178099
参数3:1
 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204acb033783168
参数2:0
参数3:178099
参数4:0009-0478
参数5:饿了么
参数6:1209019268216285212
参数7:472
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:45:14
参数14:40.8
参数15:-8.0
参数16:1.49
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:19.8
参数22:32.31
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:45:17
参数31:陈先生(先生)
参数32:15172060395
参数33:长航蓝晶国际长航蓝晶国际7号楼1008
参数34:114.41915894
参数35:30.49593405
参数36:114.42576465540778
参数37:30.50159494096665
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:47
参数66:2017-06-20 19:01:47
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"花菜炒豆腐-大份","price":20.9,"quantity":1,"id":143649298,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"番茄炒鸡蛋-大份","price":19.9,"quantity":1,"id":560271173,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204acb229884455
参数2:B6204acb033783168
参数3:用户
参数4:0
参数5:商家待接单
参数6:陈先生(先生)支付成功
参数7:陈先生(先生)
参数8:2017-06-20 15:45:17
参数9:0
 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:45:14
参数2:2017-06-20 15:45:14
参数3:178099
 
[INFO][2017-06-20 19:01:47] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204acb033783168,0009-0478 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:45:14
参数2:2017-06-20 15:45:14
参数3:178099
 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15172060395
 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2535
参数2:2172
参数3:6
参数4:8.0
参数5:B6204acb033783168
 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:番茄炒鸡蛋-大份
 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:48
参数4:服务不可用
参数5:B6204acb554165467
参数6:B6204acb033783168
 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18086450926
参数2:1
 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204acb554165467
参数2:B6204acb033783168
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:48
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18086450926
参数2:菜大师用户
参数3:2017-06-20 15:45:44
参数4:2017-06-20 15:45:44
参数5:1
参数6:1
参数7:0.0
参数8:30.49160999,114.40257015
参数9:2017-06-20 15:45:44
参数10:2017-06-20 15:45:44
参数11:0
参数12:2017-06-20 15:45:44
参数13:2017-06-20 15:45:44
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204acb467737445
参数2:9
参数3:B6204acb033783168
参数4:1
参数5:10
参数6:花菜炒豆腐-大份
参数7:花菜炒豆腐
参数8:0
参数9:null
参数10:2017-06-20 19:01:47
参数11:16.550957
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204acc643061821
参数17:9
参数18:B6204acb033783168
参数19:1
参数20:7
参数21:番茄炒鸡蛋-大份
参数22:番茄炒鸡蛋
参数23:0
参数24:null
参数25:2017-06-20 19:01:48
参数26:15.759046
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18086450926
参数2:1
 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:45:44
参数2:null
参数3:0
参数4:2017-06-20 15:45:44
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303406
参数18:1
 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204acc129341750
参数2:0
参数3:303406
参数4:0009-0479
参数5:饿了么
参数6:1209019269256359964
参数7:473
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:45:20
参数14:24.9
参数15:0.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:45:44
参数31:胡旭东(先生)
参数32:18086450926
参数33:光谷青年城4栋新竹路36栋附近 青年城四栋1209
参数34:114.40257015
参数35:30.49160999
参数36:114.40913713988924
参数37:30.497403001435135
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:48
参数66:2017-06-20 19:01:48
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"番茄炒鸡蛋-大份","price":19.9,"quantity":1,"id":560271173,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"加多宝（听装）","price":5.0,"quantity":1,"id":571184455,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204acc220707486
参数2:B6204acc129341750
参数3:用户
参数4:0
参数5:商家待接单
参数6:胡旭东(先生)支付成功
参数7:胡旭东(先生)
参数8:2017-06-20 15:45:44
参数9:0
 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:45:20
参数2:2017-06-20 15:45:20
参数3:303406
 
[INFO][2017-06-20 19:01:49] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204acc129341750,0009-0479 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:45:20
参数2:2017-06-20 15:45:20
参数3:303406
 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18086450926
 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:644
参数2:552
参数3:2
参数4:4.0
参数5:B6204acc129341750
 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:49
参数4:服务不可用
参数5:B6204acd777550863
参数6:B6204acc129341750
 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18771104322
参数2:1
 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204acd337636853
参数2:9
参数3:B6204acc129341750
参数4:1
参数5:7
参数6:番茄炒鸡蛋-大份
参数7:番茄炒鸡蛋
参数8:0
参数9:null
参数10:2017-06-20 19:01:49
参数11:14.513413
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204acd970523877
参数17:9
参数18:B6204acc129341750
参数19:6
参数20:71
参数21:加多宝（听装）
参数22:加多宝
参数23:0
参数24:null
参数25:2017-06-20 19:01:49
参数26:3.6465862
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204acd777550863
参数2:B6204acc129341750
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:49
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:35031
参数3:1
 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204acd465921200
参数2:0
参数3:35031
参数4:0009-0480
参数5:饿了么
参数6:1209019314051613724
参数7:474
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:46:00
参数14:37.8
参数15:-8.0
参数16:1.34
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:16.8
参数22:29.46
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:46:13
参数31:余伦波。(先生)
参数32:18771104322
参数33:中南财经政法大学(南湖校区)武汉市洪山区东湖高新技术开发区南湖大道政院小区。金鹰旗舰网吧前 台。
参数34:114.38346913
参数35:30.474842
参数36:114.38993331639385
参数37:30.480955694886735
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:2用餐, 多辣椒多调料。
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:49
参数66:2017-06-20 19:01:49
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204acd773366828
参数2:B6204acd465921200
参数3:用户
参数4:0
参数5:商家待接单
参数6:余伦波。(先生)支付成功
参数7:余伦波。(先生)
参数8:2017-06-20 15:46:13
参数9:0
 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:46:00
参数2:2017-06-20 15:46:00
参数3:35031
 
[INFO][2017-06-20 19:01:50] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204acd465921200,0009-0480 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18771104322
 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:46:00
参数2:2017-06-20 15:46:00
参数3:35031
 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:3102
参数2:2658
参数3:7
参数4:9.0
参数5:B6204acd465921200
 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:50
参数4:服务不可用
参数5:B6204ace249262663
参数6:B6204acd465921200
 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18672333207
参数2:1
 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ace511671263
参数2:9
参数3:B6204acd465921200
参数4:1
参数5:24
参数6:小炒土豆片
参数7:小炒土豆片
参数8:0
参数9:null
参数10:2017-06-20 19:01:50
参数11:13.171269
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ace929039744
参数17:9
参数18:B6204acd465921200
参数19:1
参数20:3
参数21:农家小炒肉-份
参数22:农家小炒肉
参数23:0
参数24:null
参数25:2017-06-20 19:01:50
参数26:16.288729
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ace249262663
参数2:B6204acd465921200
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:50
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:234742
参数3:1
 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ace645816518
参数2:0
参数3:234742
参数4:0009-0481
参数5:饿了么
参数6:1209019418506477596
参数7:475
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:47:49
参数14:24.699999
参数15:0.0
参数16:0.73
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.7
参数22:17.97
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:47:57
参数31:张木
参数32:18672333207
参数33:湖北省武汉市洪山区关东街道光谷青年城6栋3314
参数34:114.401753
参数35:30.492552
参数36:114.4083176136619
参数37:30.498357023462695
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:辣，速度速度速度谢谢
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:50
参数66:2017-06-20 19:01:50
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪碧（听装）","price":3.8,"quantity":1,"id":157948394,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204acf080536004
参数2:B6204ace645816518
参数3:用户
参数4:0
参数5:商家待接单
参数6:张木支付成功
参数7:张木
参数8:2017-06-20 15:47:57
参数9:0
 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:47:49
参数2:2017-06-20 15:47:49
参数3:234742
 
[INFO][2017-06-20 19:01:51] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204ace645816518,0009-0481 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:47:49
参数2:2017-06-20 15:47:49
参数3:234742
 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18672333207
 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1171
参数2:1003
参数3:3
参数4:5.0
参数5:B6204ace645816518
 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:51
参数4:服务不可用
参数5:B6204acf967502076
参数6:B6204ace645816518
 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204acf424322308
参数2:9
参数3:B6204ace645816518
参数4:6
参数5:74
参数6:雪碧（听装）
参数7:雪碧（听装）
参数8:0
参数9:null
参数10:2017-06-20 19:01:51
参数11:2.7646153
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204acf206565052
参数17:9
参数18:B6204ace645816518
参数19:1
参数20:3
参数21:农家小炒肉-份
参数22:农家小炒肉
参数23:0
参数24:null
参数25:2017-06-20 19:01:51
参数26:15.205384
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204acf967502076
参数2:B6204ace645816518
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:51
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15007152402
参数2:1
 
[INFO][2017-06-20 19:01:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15007152402
参数2:菜大师用户
参数3:2017-06-20 15:55:36
参数4:2017-06-20 15:55:36
参数5:1
参数6:1
参数7:0.0
参数8:30.49577035,114.39014934
参数9:2017-06-20 15:55:36
参数10:2017-06-20 15:55:36
参数11:0
参数12:2017-06-20 15:55:36
参数13:2017-06-20 15:55:36
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:01:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15007152402
参数2:1
 
[INFO][2017-06-20 19:01:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:55:36
参数2:null
参数3:0
参数4:2017-06-20 15:55:36
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303407
参数18:1
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad0311033857
参数2:0
参数3:303407
参数4:0009-0482
参数5:饿了么
参数6:1209019819826029596
参数7:476
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:55:20
参数14:46.8
参数15:-8.0
参数16:1.79
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:25.8
参数22:38.01
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:55:36
参数31:大童(女士)
参数32:15007152402
参数33:金地雄楚1号荣院路 A10-204
参数34:114.39014934
参数35:30.49577035
参数36:114.39666426015687
参数37:30.50177145354777
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:52
参数66:2017-06-20 19:01:52
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"番茄炒鸡蛋-大份","price":19.9,"quantity":1,"id":560271173,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad1764682554
参数2:B6204ad0311033857
参数3:用户
参数4:0
参数5:商家待接单
参数6:大童(女士)支付成功
参数7:大童(女士)
参数8:2017-06-20 15:55:36
参数9:0
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:55:20
参数2:2017-06-20 15:55:20
参数3:303407
 
[INFO][2017-06-20 19:01:53] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204ad0311033857,0009-0482 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 15:55:20
参数2:2017-06-20 15:55:20
参数3:303407
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15007152402
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2206
参数2:1890
参数3:5
参数4:7.0
参数5:B6204ad0311033857
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:53
参数4:服务不可用
参数5:B6204ad1033847772
参数6:B6204ad0311033857
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15926456509
参数2:1
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad1033847772
参数2:B6204ad0311033857
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:53
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:211751
参数3:1
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204ad1946616644
参数2:9
参数3:B6204ad0311033857
参数4:0
参数5:0
参数6:红烧牛腩-份
参数7:null
参数8:0
参数9:null
参数10:2017-06-20 19:01:53
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ad1033510218
参数17:9
参数18:B6204ad0311033857
参数19:1
参数20:7
参数21:番茄炒鸡蛋-大份
参数22:番茄炒鸡蛋
参数23:0
参数24:null
参数25:2017-06-20 19:01:53
参数26:16.16237
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad1785888153
参数2:0
参数3:211751
参数4:0009-0483
参数5:饿了么
参数6:1209019720420856860
参数7:477
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 15:56:33
参数14:26.9
参数15:0.0
参数16:0.84
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:16.9
参数22:20.06
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 15:56:39
参数31:曹航
参数32:15926456509
参数33:湖北省武汉市洪山区关山街道鑫尚都足疗当代极速网吧67号机器
参数34:114.3982
参数35:30.495138
参数36:114.40475184687085
参数37:30.500998803532394
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:53
参数66:2017-06-20 19:01:53
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad2442598278
参数2:B6204ad1785888153
参数3:用户
参数4:0
参数5:商家待接单
参数6:曹航支付成功
参数7:曹航
参数8:2017-06-20 15:56:39
参数9:0
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:56:33
参数2:2017-06-20 15:56:33
参数3:211751
 
[INFO][2017-06-20 19:01:54] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204ad1785888153,0009-0483 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 15:56:33
参数2:2017-06-20 15:56:33
参数3:211751
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15926456509
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1590
参数2:1362
参数3:4
参数4:6.0
参数5:B6204ad1785888153
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:54
参数4:服务不可用
参数5:B6204ad2293535634
参数6:B6204ad1785888153
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ad2293535634
参数2:B6204ad1785888153
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:54
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13145200175
参数2:1
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ad2956824111
参数2:9
参数3:B6204ad1785888153
参数4:0
参数5:0
参数6:红烧牛腩-份
参数7:null
参数8:0
参数9:null
参数10:2017-06-20 19:01:54
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:90941
参数3:1
 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad3361337811
参数2:0
参数3:90941
参数4:0009-0484
参数5:饿了么
参数6:1209020310953885724
参数7:478
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:09:14
参数14:24.4
参数15:-3.0
参数16:0.72
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:11.4
参数22:17.68
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:09:24
参数31:吕斌(先生)
参数32:13145200175
参数33:保利・茉莉公馆正门关山大道莫妮网咖25号
参数34:114.41743948
参数35:30.49693979
参数36:114.42404512947729
参数37:30.50260361058422
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:55
参数66:2017-06-20 19:01:55
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":108171986,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香酥鸡柳","price":20.9,"quantity":1,"id":560222731,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad3940542051
参数2:B6204ad3361337811
参数3:用户
参数4:0
参数5:商家待接单
参数6:吕斌(先生)支付成功
参数7:吕斌(先生)
参数8:2017-06-20 16:09:24
参数9:0
 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:09:14
参数2:2017-06-20 16:09:14
参数3:90941
 
[INFO][2017-06-20 19:01:55] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204ad3361337811,0009-0484 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:09:14
参数2:2017-06-20 16:09:14
参数3:90941
 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13145200175
 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204ad3361337811
 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ad3829477626
参数2:B6204ad3361337811
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:01:55
参数9:0
 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2373
参数2:2034
参数3:5
参数4:7.0
参数5:B6204ad3361337811
 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:香酥鸡柳
 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:55
参数4:服务不可用
参数5:B6204ad3429924275
参数6:B6204ad3361337811
 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18507111733
参数2:1
 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad3429924275
参数2:B6204ad3361337811
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:55
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18507111733
参数2:菜大师用户
参数3:2017-06-20 16:09:55
参数4:2017-06-20 16:09:55
参数5:1
参数6:1
参数7:0.0
参数8:30.49235296,114.38732112
参数9:2017-06-20 16:09:55
参数10:2017-06-20 16:09:55
参数11:0
参数12:2017-06-20 16:09:55
参数13:2017-06-20 16:09:55
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad3391885618
参数2:9
参数3:B6204ad3361337811
参数4:2
参数5:47
参数6:雪花蛋酒
参数7:雪花蛋酒
参数8:0
参数9:null
参数10:2017-06-20 19:01:55
参数11:2.5360656
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ad4771760633
参数17:9
参数18:B6204ad3361337811
参数19:1
参数20:127
参数21:香酥鸡柳
参数22:香酥鸡柳
参数23:0
参数24:null
参数25:2017-06-20 19:01:56
参数26:15.143934
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18507111733
参数2:1
 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:09:55
参数2:null
参数3:0
参数4:2017-06-20 16:09:55
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303408
参数18:1
 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad4727516066
参数2:0
参数3:303408
参数4:0009-0485
参数5:饿了么
参数6:1209020366402387996
参数7:479
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:09:44
参数14:24.9
参数15:0.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:09:55
参数31:慧慧
参数32:18507111733
参数33:八一花园玫瑰苑D3栋203
参数34:114.38732112
参数35:30.49235296
参数36:114.39381997694115
参数37:30.498404040713133
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:56
参数66:2017-06-20 19:01:56
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"小炒井岗笋肉丝","price":24.9,"quantity":1,"id":579331328,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad4848553268
参数2:B6204ad4727516066
参数3:用户
参数4:0
参数5:商家待接单
参数6:慧慧支付成功
参数7:慧慧
参数8:2017-06-20 16:09:55
参数9:0
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:09:44
参数2:2017-06-20 16:09:44
参数3:303408
 
[INFO][2017-06-20 19:01:57] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204ad4727516066,0009-0485 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18507111733
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:09:44
参数2:2017-06-20 16:09:44
参数3:303408
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204ad4727516066
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2714
参数2:2326
参数3:6
参数4:8.0
参数5:B6204ad4727516066
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad5062918784
参数2:B6204ad4727516066
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:01:57
参数9:0
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204ad5441000413
参数2:9
参数3:B6204ad4727516066
参数4:1
参数5:120
参数6:小炒井岗笋肉丝
参数7:小炒井岗笋肉丝
参数8:0
参数9:null
参数10:2017-06-20 19:01:57
参数11:18.16
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:57
参数4:服务不可用
参数5:B6204ad4551527135
参数6:B6204ad4727516066
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15587873596
参数2:1
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ad4551527135
参数2:B6204ad4727516066
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:57
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15587873596
参数2:菜大师用户
参数3:2017-06-20 16:10:49
参数4:2017-06-20 16:10:49
参数5:1
参数6:1
参数7:0.0
参数8:30.48052995,114.39769993
参数9:2017-06-20 16:10:49
参数10:2017-06-20 16:10:49
参数11:0
参数12:2017-06-20 16:10:49
参数13:2017-06-20 16:10:49
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15587873596
参数2:1
 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:10:49
参数2:null
参数3:0
参数4:2017-06-20 16:10:49
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303409
参数18:1
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad5981488611
参数2:0
参数3:303409
参数4:0009-0486
参数5:饿了么
参数6:1209020417069675548
参数7:480
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:10:47
参数14:57.699997
参数15:0.0
参数16:2.18
参数17:4.0
参数18:6.0
参数19:29.0
参数20:0.0
参数21:38.7
参数22:45.52
参数23:20.0
参数24:9.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:10:49
参数31:田子龙(先生)
参数32:15587873596
参数33:江南家园2期34栋702 702
参数34:114.39769993
参数35:30.48052995
参数36:114.40423634172734
参数37:30.48639544660709
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:多点辣, 不要香菜, 多点葱
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:57
参数66:2017-06-20 19:01:57
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"番茄炒鸡蛋-大份","price":19.9,"quantity":1,"id":560271173,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad6620159185
参数2:B6204ad5981488611
参数3:用户
参数4:0
参数5:商家待接单
参数6:田子龙(先生)支付成功
参数7:田子龙(先生)
参数8:2017-06-20 16:10:49
参数9:0
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:10:47
参数2:2017-06-20 16:10:47
参数3:303409
 
[INFO][2017-06-20 19:01:58] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204ad5981488611,0009-0486 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:10:47
参数2:2017-06-20 16:10:47
参数3:303409
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15587873596
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204ad5981488611
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ad6352163814
参数2:B6204ad5981488611
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:01:58
参数9:0
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1759
参数2:1507
参数3:4
参数4:6.0
参数5:B6204ad5981488611
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:58
参数4:服务不可用
参数5:B6204ad6196854365
参数6:B6204ad5981488611
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13720320469
参数2:1
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad6196854365
参数2:B6204ad5981488611
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:58
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ad6942512082
参数2:9
参数3:B6204ad5981488611
参数4:1
参数5:24
参数6:小炒土豆片
参数7:小炒土豆片
参数8:0
参数9:null
参数10:2017-06-20 19:01:58
参数11:13.332548
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ad6128531536
参数17:9
参数18:B6204ad5981488611
参数19:1
参数20:3
参数21:农家小炒肉-份
参数22:农家小炒肉
参数23:0
参数24:null
参数25:2017-06-20 19:01:58
参数26:16.48818
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204ad6501267227
参数32:9
参数33:B6204ad5981488611
参数34:1
参数35:7
参数36:番茄炒鸡蛋-大份
参数37:番茄炒鸡蛋
参数38:0
参数39:null
参数40:2017-06-20 19:01:58
参数41:15.699272
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:273613
参数3:1
 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad7956375616
参数2:0
参数3:273613
参数4:0009-0487
参数5:饿了么
参数6:1209020466998802460
参数7:481
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:11:44
参数14:23.4
参数15:0.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:11:59
参数31:吴洪恩(先生)
参数32:13720320469
参数33:八一花园荣院路 E22302
参数34:114.38724987
参数35:30.49238943
参数36:114.39374841852447
参数37:30.49844178583653
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:01:59
参数66:2017-06-20 19:01:59
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad7133035268
参数2:B6204ad7956375616
参数3:用户
参数4:0
参数5:商家待接单
参数6:吴洪恩(先生)支付成功
参数7:吴洪恩(先生)
参数8:2017-06-20 16:11:59
参数9:0
 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:11:44
参数2:2017-06-20 16:11:44
参数3:273613
 
[INFO][2017-06-20 19:01:59] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204ad7956375616,0009-0487 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:11:44
参数2:2017-06-20 16:11:44
参数3:273613
 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13720320469
 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204ad7956375616
 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad7105117500
参数2:B6204ad7956375616
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:01:59
参数9:0
 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2707
参数2:2320
参数3:6
参数4:8.0
参数5:B6204ad7956375616
 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:01:59
参数4:服务不可用
参数5:B6204ad7983608742
参数6:B6204ad7956375616
 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204ad7380611552
参数2:9
参数3:B6204ad7956375616
参数4:1
参数5:3
参数6:农家小炒肉-份
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-20 19:01:59
参数11:14.942606
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204ad7720933716
参数17:9
参数18:B6204ad7956375616
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-20 19:01:59
参数26:1.7873931
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204ad7983608742
参数2:B6204ad7956375616
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:01:59
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-20' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-20
参数2:2017-06-20
 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13397187478
参数2:1
 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13397187478
参数2:菜大师用户
参数3:2017-06-20 16:19:25
参数4:2017-06-20 16:19:25
参数5:1
参数6:1
参数7:0.0
参数8:30.47393206,114.3870539
参数9:2017-06-20 16:19:25
参数10:2017-06-20 16:19:25
参数11:0
参数12:2017-06-20 16:19:25
参数13:2017-06-20 16:19:25
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13397187478
参数2:1
 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:19:25
参数2:null
参数3:0
参数4:2017-06-20 16:19:25
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303410
参数18:1
 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620780231373373
参数2:0
参数3:303410
参数4:0009-0488
参数5:饿了么
参数6:1209020715670698012
参数7:482
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:17:47
参数14:39.5
参数15:-1.0
参数16:1.17
参数17:4.0
参数18:3.0
参数19:21.0
参数20:0.0
参数21:20.5
参数22:26.33
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:19:25
参数31:鸭蛋切开(先生)
参数32:13397187478
参数33:中南财经政法大学(南湖校区)中区3栋
参数34:114.3870539
参数35:30.47393206
参数36:114.39353381597249
参数37:30.479983177044865
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:00
参数66:2017-06-20 19:02:00
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"米饭","price":1.0,"quantity":1,"id":92440355,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":2,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"手撕鸡+雪花蛋酒+爱心荷包蛋","price":28.5,"quantity":1,"id":123877083,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620780935627617
参数2:B620780231373373
参数3:用户
参数4:0
参数5:商家待接单
参数6:鸭蛋切开(先生)支付成功
参数7:鸭蛋切开(先生)
参数8:2017-06-20 16:19:25
参数9:0
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:17:47
参数2:2017-06-20 16:17:47
参数3:303410
 
[INFO][2017-06-20 19:02:01] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B620780231373373,0009-0488 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:17:47
参数2:2017-06-20 16:17:47
参数3:303410
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13397187478
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B620780231373373
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:米饭
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620781708332726
参数2:B620780231373373
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:01
参数9:0
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2985
参数2:2558
参数3:6
参数4:8.0
参数5:B620780231373373
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:01
参数4:服务不可用
参数5:B620781653943277
参数6:B620780231373373
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15623266138
参数2:1
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620781653943277
参数2:B620780231373373
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:01
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:265989
参数3:1
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:手撕鸡
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620781662480517
参数2:0
参数3:265989
参数4:0009-0489
参数5:饿了么
参数6:1209021098065335324
参数7:483
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:23:54
参数14:44.8
参数15:-5.0
参数16:1.69
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:26.8
参数22:36.11
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:23:57
参数31:熊超(先生)
参数32:15623266138
参数33:武汉华夏理工学院东湖新技术开发区关山大道589   宿舍楼  7A  437
参数34:114.41354005
参数35:30.46783003
参数36:114.42011477552883
参数37:30.473503175498752
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:01
参数66:2017-06-20 19:02:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"花菜炒豆腐-大份","price":20.9,"quantity":1,"id":143649298,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"橄榄菜豆角肉末","price":23.9,"quantity":1,"id":176993599,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620782174925448
参数2:B620781662480517
参数3:用户
参数4:0
参数5:商家待接单
参数6:熊超(先生)支付成功
参数7:熊超(先生)
参数8:2017-06-20 16:23:57
参数9:0
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:23:54
参数2:2017-06-20 16:23:54
参数3:265989
 
[INFO][2017-06-20 19:02:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B620781662480517,0009-0489 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15623266138
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:23:54
参数2:2017-06-20 16:23:54
参数3:265989
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B620781662480517
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B620781214744231
参数2:9
参数3:B620780231373373
参数4:3
参数5:50
参数6:米饭
参数7:金枪鱼沙拉
参数8:0
参数9:null
参数10:2017-06-20 19:02:01
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620781299227803
参数17:9
参数18:B620780231373373
参数19:2
参数20:123
参数21:香滑蒸鸡蛋
参数22:香滑蒸鸡蛋
参数23:0
参数24:null
参数25:2017-06-20 19:02:01
参数26:3.3329115
参数27:2
参数28:0
参数29:0
参数30:1
参数31:B620782899357611
参数32:9
参数33:B620780231373373
参数34:1
参数35:4
参数36:手撕鸡
参数37:手撕鸡
参数38:0
参数39:null
参数40:2017-06-20 19:02:02
参数41:14.596607
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B620782096191217
参数47:9
参数48:B620780231373373
参数49:2
参数50:47
参数51:雪花蛋酒
参数52:雪花蛋酒
参数53:0
参数54:null
参数55:2017-06-20 19:02:02
参数56:2.5672426
参数57:1
参数58:0
参数59:0
参数60:1
参数61:B620782918729283
参数62:9
参数63:B620780231373373
参数64:5
参数65:38
参数66:爱心荷包蛋
参数67:荷包蛋
参数68:0
参数69:null
参数70:2017-06-20 19:02:02
参数71:1.8337446
参数72:1
参数73:0
参数74:0
参数75:1
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620782347707372
参数2:B620781662480517
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:02
参数9:0
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:3717
参数2:3186
参数3:8
参数4:10.0
参数5:B620781662480517
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:橄榄菜豆角肉末
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:02
参数4:服务不可用
参数5:B620782989481274
参数6:B620781662480517
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17689362057
参数2:1
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620782989481274
参数2:B620781662480517
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:02
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17689362057
参数2:菜大师用户
参数3:2017-06-20 16:31:08
参数4:2017-06-20 16:31:08
参数5:1
参数6:1
参数7:0.0
参数8:30.4719805,114.41684
参数9:2017-06-20 16:31:08
参数10:2017-06-20 16:31:08
参数11:0
参数12:2017-06-20 16:31:08
参数13:2017-06-20 16:31:08
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17689362057
参数2:1
 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620782162403515
参数2:9
参数3:B620781662480517
参数4:1
参数5:10
参数6:花菜炒豆腐-大份
参数7:花菜炒豆腐
参数8:0
参数9:null
参数10:2017-06-20 19:02:02
参数11:16.84596
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620782611822488
参数17:9
参数18:B620781662480517
参数19:1
参数20:17
参数21:橄榄菜豆角肉末
参数22:橄榄菜豆角肉末
参数23:0
参数24:null
参数25:2017-06-20 19:02:02
参数26:19.26404
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:31:08
参数2:null
参数3:0
参数4:2017-06-20 16:31:08
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303411
参数18:1
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620783200328137
参数2:0
参数3:303411
参数4:0009-0490
参数5:饿了么
参数6:1209021524575662108
参数7:484
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:30:57
参数14:27.2
参数15:0.0
参数16:0.86
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:17.2
参数22:20.34
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:31:08
参数31:张帅(先生)
参数32:17689362057
参数33:光谷・理想城关南园一路光谷・理想城 七栋一单元26楼
参数34:114.41684
参数35:30.4719805
参数36:114.42342228822565
参数37:30.47763983878574
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:03
参数66:2017-06-20 19:02:03
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"百事可乐（听装）","price":3.8,"quantity":1,"id":157948150,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香酥鸡柳","price":20.9,"quantity":1,"id":560222731,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620783260879660
参数2:B620783200328137
参数3:用户
参数4:0
参数5:商家待接单
参数6:张帅(先生)支付成功
参数7:张帅(先生)
参数8:2017-06-20 16:31:08
参数9:0
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:30:57
参数2:2017-06-20 16:30:57
参数3:303411
 
[INFO][2017-06-20 19:02:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B620783200328137,0009-0490 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:17689362057
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:30:57
参数2:2017-06-20 16:30:57
参数3:303411
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B620783200328137
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620783315589702
参数2:B620783200328137
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:03
参数9:0
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:百事可乐（听装）
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:03
参数4:服务不可用
参数5:B620783990830887
参数6:B620783200328137
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18008659665
参数2:1
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:3384
参数2:2900
参数3:7
参数4:9.0
参数5:B620783200328137
 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620783990830887
参数2:B620783200328137
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:03
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:140199
参数3:1
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620783976591017
参数2:9
参数3:B620783200328137
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-20 19:02:03
参数11:1.8694853
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620784073290104
参数17:9
参数18:B620783200328137
参数19:6
参数20:73
参数21:百事可乐（听装）
参数22:百事可乐（听装）
参数23:0
参数24:null
参数25:2017-06-20 19:02:04
参数26:2.8416176
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B620784893338142
参数32:9
参数33:B620783200328137
参数34:1
参数35:127
参数36:香酥鸡柳
参数37:香酥鸡柳
参数38:0
参数39:null
参数40:2017-06-20 19:02:04
参数41:15.628896
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620784029462103
参数2:0
参数3:140199
参数4:0009-0491
参数5:饿了么
参数6:1209021687188900892
参数7:485
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:33:22
参数14:25.4
参数15:-5.0
参数16:0.77
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.4
参数22:18.63
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:33:24
参数31:代威(先生)
参数32:18008659665
参数33:曙光星城B区洪山区曙光星城B区4栋2单元20楼2001室 4栋2单元20楼2001室
参数34:114.40258943
参数35:30.48624046
参数36:114.4091516483657
参数37:30.492031908546505
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:04
参数66:2017-06-20 19:02:04
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620784052752300
参数2:B620784029462103
参数3:用户
参数4:0
参数5:商家待接单
参数6:代威(先生)支付成功
参数7:代威(先生)
参数8:2017-06-20 16:33:24
参数9:0
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:33:22
参数2:2017-06-20 16:33:22
参数3:140199
 
[INFO][2017-06-20 19:02:04] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B620784029462103,0009-0491 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:33:22
参数2:2017-06-20 16:33:22
参数3:140199
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B620784029462103
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18008659665
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620784872567022
参数2:B620784029462103
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:04
参数9:0
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:559
参数2:479
参数3:2
参数4:4.0
参数5:B620784029462103
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:04
参数4:服务不可用
参数5:B620784732834730
参数6:B620784029462103
 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B620784841303206
参数2:9
参数3:B620784029462103
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-20 19:02:04
参数11:1.8336613
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620784943664740
参数17:9
参数18:B620784029462103
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:02:04
参数26:16.796337
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13296664598
参数2:1
 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620784732834730
参数2:B620784029462103
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:04
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:63131
参数3:1
 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620785840930370
参数2:0
参数3:63131
参数4:0009-0492
参数5:饿了么
参数6:1209021812346822684
参数7:486
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:35:45
参数14:27.9
参数15:-8.0
参数16:0.94
参数17:4.0
参数18:3.0
参数19:16.0
参数20:0.0
参数21:10.9
参数22:21.96
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:35:58
参数31:罗密(女士)
参数32:13296664598
参数33:曙光星城B区光谷腊台山路曙光新村 1栋1单元1102室
参数34:114.40258993
参数35:30.48624004
参数36:114.4091521498551
参数37:30.492031481335644
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:05
参数66:2017-06-20 19:02:05
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"米饭","price":1.0,"quantity":1,"id":92440355,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620785728340547
参数2:B620785840930370
参数3:用户
参数4:0
参数5:商家待接单
参数6:罗密(女士)支付成功
参数7:罗密(女士)
参数8:2017-06-20 16:35:58
参数9:0
 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:35:45
参数2:2017-06-20 16:35:45
参数3:63131
 
[INFO][2017-06-20 19:02:05] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B620785840930370,0009-0492 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13296664598
 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:35:45
参数2:2017-06-20 16:35:45
参数3:63131
 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:559
参数2:479
参数3:2
参数4:4.0
参数5:B620785840930370
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:06
参数4:服务不可用
参数5:B620785753385662
参数6:B620785840930370
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17671728830
参数2:1
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620785753385662
参数2:B620785840930370
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:06
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:279711
参数3:1
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B620785840930370
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620786845576677
参数2:B620785840930370
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:06
参数9:0
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620785103290321
参数2:9
参数3:B620785840930370
参数4:3
参数5:50
参数6:米饭
参数7:金枪鱼沙拉
参数8:0
参数9:null
参数10:2017-06-20 19:02:05
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620786628141720
参数17:9
参数18:B620785840930370
参数19:0
参数20:0
参数21:红烧牛腩-份
参数22:null
参数23:0
参数24:null
参数25:2017-06-20 19:02:06
参数26:0.0
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620786305950567
参数2:0
参数3:279711
参数4:0009-0493
参数5:饿了么
参数6:1209021875924186140
参数7:488
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:36:23
参数14:63.199997
参数15:-8.0
参数16:2.46
参数17:4.0
参数18:6.0
参数19:29.0
参数20:0.0
参数21:36.2
参数22:50.74
参数23:20.0
参数24:9.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:37:24
参数31:肖文睿(女士)
参数32:17671728830
参数33:光谷国际佳园路4附5 B座5楼505
参数34:114.43019992
参数35:30.50487
参数36:114.43679732244527
参数37:30.510579481440463
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:06
参数66:2017-06-20 19:02:06
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":108171986,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620786515167437
参数2:B620786305950567
参数3:用户
参数4:0
参数5:商家待接单
参数6:肖文睿(女士)支付成功
参数7:肖文睿(女士)
参数8:2017-06-20 16:37:24
参数9:0
 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:36:23
参数2:2017-06-20 16:36:23
参数3:279711
 
[INFO][2017-06-20 19:02:06] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B620786305950567,0009-0493 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:36:23
参数2:2017-06-20 16:36:23
参数3:279711
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:17671728830
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B620786305950567
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620787549282545
参数2:B620786305950567
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:07
参数9:0
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:4652
参数2:3987
参数3:10
参数4:12.0
参数5:B620786305950567
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:07
参数4:服务不可用
参数5:B620786729606135
参数6:B620786305950567
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13396061570
参数2:1
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620786729606135
参数2:B620786305950567
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:07
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:303020
参数3:1
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620787032261675
参数2:9
参数3:B620786305950567
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-20 19:02:07
参数11:15.976678
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620787388777831
参数17:9
参数18:B620786305950567
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-20 19:02:07
参数26:2.8099685
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B620787222928040
参数32:9
参数33:B620786305950567
参数34:1
参数35:24
参数36:小炒土豆片
参数37:小炒土豆片
参数38:0
参数39:null
参数40:2017-06-20 19:02:07
参数41:13.568133
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B620787289398643
参数47:9
参数48:B620786305950567
参数49:1
参数50:129
参数51:新派手撕鸡
参数52:新派手撕鸡
参数53:0
参数54:null
参数55:2017-06-20 19:02:07
参数56:18.385223
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620787873704342
参数2:0
参数3:303020
参数4:0009-0494
参数5:饿了么
参数6:1209021870622562332
参数7:487
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:37:04
参数14:28.699999
参数15:-8.0
参数16:0.93
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.7
参数22:21.77
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:37:07
参数31:黄肖
参数32:13396061570
参数33:赛博特科技体验中心关山大道519号光谷天地F2层
参数34:114.41051938
参数35:30.47687016
参数36:114.41709662165187
参数37:30.482567516210384
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:07
参数66:2017-06-20 19:02:07
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片","price":24.9,"quantity":1,"id":180150417,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"百事可乐（听装）","price":3.8,"quantity":1,"id":157948150,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620787905332488
参数2:B620787873704342
参数3:用户
参数4:0
参数5:商家待接单
参数6:黄肖支付成功
参数7:黄肖
参数8:2017-06-20 16:37:07
参数9:0
 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:37:04
参数2:2017-06-20 16:37:04
参数3:303020
 
[INFO][2017-06-20 19:02:08] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B620787873704342,0009-0494 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:37:04
参数2:2017-06-20 16:37:04
参数3:303020
 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13396061570
 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B620787873704342
 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2142
参数2:1836
参数3:5
参数4:7.0
参数5:B620787873704342
 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620788882803755
参数2:B620787873704342
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:08
参数9:0
 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:08
参数4:服务不可用
参数5:B620788414050841
参数6:B620787873704342
 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B620788648676468
参数2:9
参数3:B620787873704342
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:02:08
参数11:18.887562
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620788843975173
参数17:9
参数18:B620787873704342
参数19:6
参数20:73
参数21:百事可乐（听装）
参数22:百事可乐（听装）
参数23:0
参数24:null
参数25:2017-06-20 19:02:08
参数26:2.8824391
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620788414050841
参数2:B620787873704342
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:08
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15927379831
参数2:1
 
[INFO][2017-06-20 19:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:270802
参数3:1
 
[INFO][2017-06-20 19:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620789187986132
参数2:0
参数3:270802
参数4:0009-0495
参数5:饿了么
参数6:1209021999555325980
参数7:489
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:37:15
参数14:30.5
参数15:-6.0
参数16:1.02
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.5
参数22:23.48
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:37:28
参数31:蔡(先生)
参数32:15927379831
参数33:中南财经政法大学(南湖校区)环湖6栋
参数34:114.38215585
参数35:30.47270193
参数36:114.38861214303779
参数37:30.478837017608083
参数38:null
参数39:2017-06-20 17:45:15
参数40:17:45
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:尽快送达，谢谢！
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:09
参数66:2017-06-20 19:02:09
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片+雪花蛋酒+爱心荷包蛋","price":30.5,"quantity":1,"id":500973446,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620789951858323
参数2:B620789187986132
参数3:用户
参数4:0
参数5:商家待接单
参数6:蔡(先生)支付成功
参数7:蔡(先生)
参数8:2017-06-20 16:37:28
参数9:0
 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:37:15
参数2:2017-06-20 16:37:15
参数3:270802
 
[INFO][2017-06-20 19:02:10] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B620789187986132,0009-0495 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15927379831
 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:37:15
参数2:2017-06-20 16:37:15
参数3:270802
 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:3414
参数2:2926
参数3:7
参数4:9.0
参数5:B620789187986132
 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:10
参数4:服务不可用
参数5:B620789764751043
参数6:B620789187986132
 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620789764751043
参数2:B620789187986132
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:10
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b0a021069346
参数2:9
参数3:B620789187986132
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:02:10
参数11:18.768295
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b0a108191386
参数17:9
参数18:B620789187986132
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-20 19:02:10
参数26:2.7484949
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b0a058173461
参数32:9
参数33:B620789187986132
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-20 19:02:10
参数41:1.9632107
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B620789187986132
 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0a456689608
参数2:B620789187986132
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:10
参数9:0
 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13212781374
参数2:1
 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:225171
参数3:1
 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0b332069715
参数2:0
参数3:225171
参数4:0009-0496
参数5:饿了么
参数6:1209022252262203420
参数7:490
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:41:55
参数14:37.8
参数15:-10.0
参数16:1.34
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:14.8
参数22:29.46
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:42:09
参数31:郭露(女士)
参数32:13212781374
参数33:曙光星城A区腊台山路附近 4栋1单元15楼1502
参数34:114.40277986
参数35:30.48839964
参数36:114.40934482565764
参数37:30.49418893337273
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:11
参数66:2017-06-20 19:02:11
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"鲜菇炒肉丝","price":20.9,"quantity":1,"id":638014838,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0b983757044
参数2:B6204b0b332069715
参数3:用户
参数4:0
参数5:商家待接单
参数6:郭露(女士)支付成功
参数7:郭露(女士)
参数8:2017-06-20 16:42:09
参数9:0
 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:41:55
参数2:2017-06-20 16:41:55
参数3:225171
 
[INFO][2017-06-20 19:02:11] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b0b332069715,0009-0496 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:41:55
参数2:2017-06-20 16:41:55
参数3:225171
 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13212781374
 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b0b332069715
 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b0b769592435
参数2:B6204b0b332069715
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:11
参数9:0
 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:191
参数2:163
参数3:1
参数4:3.0
参数5:B6204b0b332069715
 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:11
参数4:服务不可用
参数5:B6204b0b285060402
参数6:B6204b0b332069715
 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0b074705626
参数2:9
参数3:B6204b0b332069715
参数4:1
参数5:24
参数6:小炒土豆片
参数7:小炒土豆片
参数8:0
参数9:null
参数10:2017-06-20 19:02:11
参数11:13.171269
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b0b269978382
参数17:9
参数18:B6204b0b332069715
参数19:1
参数20:132
参数21:鲜菇炒肉丝
参数22:鲜菇炒肉丝
参数23:0
参数24:null
参数25:2017-06-20 19:02:11
参数26:16.288729
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827100444
参数2:1
 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0b285060402
参数2:B6204b0b332069715
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:11
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827100444
参数2:菜大师用户
参数3:2017-06-20 16:43:47
参数4:2017-06-20 16:43:47
参数5:1
参数6:1
参数7:0.0
参数8:30.50165403,114.43015298
参数9:2017-06-20 16:43:47
参数10:2017-06-20 16:43:47
参数11:0
参数12:2017-06-20 16:43:47
参数13:2017-06-20 16:43:47
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827100444
参数2:1
 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:43:47
参数2:null
参数3:0
参数4:2017-06-20 16:43:47
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303412
参数18:1
 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0c002303172
参数2:0
参数3:303412
参数4:0009-0497
参数5:饿了么
参数6:1209022242892268572
参数7:491
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:43:31
参数14:31.9
参数15:-8.0
参数16:1.09
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.9
参数22:24.81
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:43:47
参数31:郑好(先生)
参数32:15827100444
参数33:学府佳园武汉市洪山区佳园路学府家园一区一栋6单元202
参数34:114.43015298
参数35:30.50165403
参数36:114.43674936544953
参数37:30.50736278312431
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:12
参数66:2017-06-20 19:02:12
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0c487384526
参数2:B6204b0c002303172
参数3:用户
参数4:0
参数5:商家待接单
参数6:郑好(先生)支付成功
参数7:郑好(先生)
参数8:2017-06-20 16:43:47
参数9:0
 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:43:31
参数2:2017-06-20 16:43:31
参数3:303412
 
[INFO][2017-06-20 19:02:12] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b0c002303172,0009-0497 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:43:31
参数2:2017-06-20 16:43:31
参数3:303412
 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15827100444
 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b0c002303172
 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0c776009386
参数2:B6204b0c002303172
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:12
参数9:0
 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:4323
参数2:3705
参数3:9
参数4:11.0
参数5:B6204b0c002303172
 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:13
参数4:服务不可用
参数5:B6204b0c023154068
参数6:B6204b0c002303172
 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18202769345
参数2:1
 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b0c023154068
参数2:B6204b0c002303172
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:13
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:73451
参数3:1
 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b0c467533566
参数2:9
参数3:B6204b0c002303172
参数4:2
参数5:123
参数6:香滑蒸鸡蛋
参数7:香滑蒸鸡蛋
参数8:0
参数9:null
参数10:2017-06-20 19:02:12
参数11:3.8887146
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b0d733373714
参数17:9
参数18:B6204b0c002303172
参数19:0
参数20:0
参数21:红烧牛腩-份
参数22:null
参数23:0
参数24:null
参数25:2017-06-20 19:02:13
参数26:0.0
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0d830463473
参数2:0
参数3:73451
参数4:0009-0498
参数5:饿了么
参数6:1209022246616594460
参数7:492
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:43:45
参数14:31.9
参数15:-8.0
参数16:1.09
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.9
参数22:24.81
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:43:48
参数31:盛(先生)
参数32:18202769345
参数33:悠鱼网咖(财大店)民族大道273 028
参数34:114.3959699
参数35:30.48172002
参数36:114.4024997590801
参数37:30.487614946759884
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:13
参数66:2017-06-20 19:02:13
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0d106163850
参数2:B6204b0d830463473
参数3:用户
参数4:0
参数5:商家待接单
参数6:盛(先生)支付成功
参数7:盛(先生)
参数8:2017-06-20 16:43:48
参数9:0
 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:43:45
参数2:2017-06-20 16:43:45
参数3:73451
 
[INFO][2017-06-20 19:02:13] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b0d830463473,0009-0498 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18202769345
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:43:45
参数2:2017-06-20 16:43:45
参数3:73451
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1421
参数2:1218
参数3:3
参数4:5.0
参数5:B6204b0d830463473
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b0d830463473
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b0e480637147
参数2:B6204b0d830463473
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:14
参数9:0
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:14
参数4:服务不可用
参数5:B6204b0d841807425
参数6:B6204b0d830463473
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15171189492
参数2:1
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0d841807425
参数2:B6204b0d830463473
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:14
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:105402
参数3:1
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b0d895696654
参数2:9
参数3:B6204b0d830463473
参数4:2
参数5:123
参数6:香滑蒸鸡蛋
参数7:香滑蒸鸡蛋
参数8:0
参数9:null
参数10:2017-06-20 19:02:13
参数11:3.8887146
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b0e017648505
参数17:9
参数18:B6204b0d830463473
参数19:0
参数20:0
参数21:红烧牛腩-份
参数22:null
参数23:0
参数24:null
参数25:2017-06-20 19:02:14
参数26:0.0
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0e742321145
参数2:0
参数3:105402
参数4:0009-0499
参数5:饿了么
参数6:1209022796271811612
参数7:495
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:49:14
参数14:25.7
参数15:-5.0
参数16:0.78
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.7
参数22:18.92
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:49:26
参数31:张林钰(女士)
参数32:15171189492
参数33:建发小区30栋中建康城与关南小区前山中间401
参数34:114.40623991
参数35:30.47174983
参数36:114.41280051620154
参数37:30.477489748951637
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:14
参数66:2017-06-20 19:02:14
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"柠檬酸梅汤","price":5.8,"quantity":1,"id":1230032195,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0e790330611
参数2:B6204b0e742321145
参数3:用户
参数4:0
参数5:商家待接单
参数6:张林钰(女士)支付成功
参数7:张林钰(女士)
参数8:2017-06-20 16:49:26
参数9:0
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:49:14
参数2:2017-06-20 16:49:14
参数3:105402
 
[INFO][2017-06-20 19:02:15] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b0e742321145,0009-0499 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:49:14
参数2:2017-06-20 16:49:14
参数3:105402
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15171189492
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b0e742321145
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:柠檬酸梅汤
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0f158550874
参数2:B6204b0e742321145
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:15
参数9:0
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2925
参数2:2507
参数3:6
参数4:8.0
参数5:B6204b0e742321145
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:15
参数4:服务不可用
参数5:B6204b0f241332570
参数6:B6204b0e742321145
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13006351272
参数2:1
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b0f241332570
参数2:B6204b0e742321145
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:15
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:肉末鱼香茄条
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:237120
参数3:1
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0f617660087
参数2:9
参数3:B6204b0e742321145
参数4:10
参数5:143
参数6:柠檬酸梅汤
参数7:柠檬酸梅汤
参数8:0
参数9:null
参数10:2017-06-20 19:02:15
参数11:4.269883
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b0f611391423
参数17:9
参数18:B6204b0e742321145
参数19:1
参数20:130
参数21:肉末鱼香茄条
参数22:肉末鱼香茄条
参数23:0
参数24:null
参数25:2017-06-20 19:02:15
参数26:14.650116
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0f819061026
参数2:0
参数3:237120
参数4:0009-0500
参数5:饿了么
参数6:1209022796867343388
参数7:493
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:49:16
参数14:36.8
参数15:0.0
参数16:1.29
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:23.8
参数22:28.51
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:49:20
参数31:方莲花(女士)
参数32:13006351272
参数33:中建康城(东区)关山大道中建康城东区14栋3单元402 14栋402
参数34:114.41003004
参数35:30.47083008
参数36:114.41660035011842
参数37:30.476530186898305
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:15
参数66:2017-06-20 19:02:15
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b0f446823481
参数2:B6204b0f819061026
参数3:用户
参数4:0
参数5:商家待接单
参数6:方莲花(女士)支付成功
参数7:方莲花(女士)
参数8:2017-06-20 16:49:20
参数9:0
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:49:16
参数2:2017-06-20 16:49:16
参数3:237120
 
[INFO][2017-06-20 19:02:16] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b0f819061026,0009-0500 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13006351272
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:49:16
参数2:2017-06-20 16:49:16
参数3:237120
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b0f819061026
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b10837967007
参数2:B6204b0f819061026
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:16
参数9:0
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2872
参数2:2461
参数3:6
参数4:8.0
参数5:B6204b0f819061026
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:16
参数4:服务不可用
参数5:B6204b10784696540
参数6:B6204b0f819061026
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b10034586188
参数2:9
参数3:B6204b0f819061026
参数4:1
参数5:117
参数6:青豆米鸡丁
参数7:青豆米鸡丁
参数8:0
参数9:null
参数10:2017-06-20 19:02:16
参数11:15.417093
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b10624932316
参数17:9
参数18:B6204b0f819061026
参数19:1
参数20:24
参数21:小炒土豆片
参数22:小炒土豆片
参数23:0
参数24:null
参数25:2017-06-20 19:02:16
参数26:13.092908
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b10784696540
参数2:B6204b0f819061026
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:16
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13907227783
参数2:1
 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:277106
参数3:1
 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:49:25
参数2:null
参数3:0
参数4:2017-06-20 16:49:25
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:277106
参数18:1
 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b11030428806
参数2:0
参数3:277106
参数4:0009-0501
参数5:饿了么
参数6:1209022798687815708
参数7:494
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:49:23
参数14:26.9
参数15:-5.0
参数16:0.84
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:11.9
参数22:20.06
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:49:25
参数31:杜舟(先生)
参数32:13907227783
参数33:天慧小区光谷大道27号 1栋3单元402
参数34:114.42456996
参数35:30.48875998
参数36:114.43116737637412
参数37:30.4944287665318
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:17
参数66:2017-06-20 19:02:17
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b11573543413
参数2:B6204b11030428806
参数3:用户
参数4:0
参数5:商家待接单
参数6:杜舟(先生)支付成功
参数7:杜舟(先生)
参数8:2017-06-20 16:49:25
参数9:0
 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:49:23
参数2:2017-06-20 16:49:23
参数3:277106
 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:49:23
参数2:2017-06-20 16:49:23
参数3:277106
 
[INFO][2017-06-20 19:02:17] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b11030428806,0009-0501 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b11030428806
 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13907227783
 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b11707850074
参数2:B6204b11030428806
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:17
参数9:0
 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2824
参数2:2420
参数3:6
参数4:8.0
参数5:B6204b11030428806
 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15971412293
参数2:1
 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:17
参数4:服务不可用
参数5:B6204b11167571415
参数6:B6204b11030428806
 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15971412293
参数2:菜大师用户
参数3:2017-06-20 16:51:02
参数4:2017-06-20 16:51:02
参数5:1
参数6:1
参数7:0.0
参数8:30.47711961,114.38402988
参数9:2017-06-20 16:51:02
参数10:2017-06-20 16:51:02
参数11:0
参数12:2017-06-20 16:51:02
参数13:2017-06-20 16:51:02
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b11167571415
参数2:B6204b11030428806
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:17
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b11541011221
参数2:9
参数3:B6204b11030428806
参数4:0
参数5:0
参数6:红烧牛腩-份
参数7:null
参数8:0
参数9:null
参数10:2017-06-20 19:02:17
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15971412293
参数2:1
 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:51:02
参数2:null
参数3:0
参数4:2017-06-20 16:51:02
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303413
参数18:1
 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b12513117064
参数2:0
参数3:303413
参数4:0009-0502
参数5:饿了么
参数6:1209022786776056860
参数7:496
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:50:47
参数14:20.9
参数15:0.0
参数16:1.14
参数17:4.0
参数18:2.0
参数19:0.0
参数20:0.0
参数21:26.9
参数22:25.76
参数23:0.0
参数24:0.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:51:02
参数31:吴(先生)
参数32:15971412293
参数33:政院小区22排85栋the night of桌游咖啡
参数34:114.38402988
参数35:30.47711961
参数36:114.39049885857311
参数37:30.483224365437103
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:18
参数66:2017-06-20 19:02:18
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b12514052263
参数2:B6204b12513117064
参数3:用户
参数4:0
参数5:商家待接单
参数6:吴(先生)支付成功
参数7:吴(先生)
参数8:2017-06-20 16:51:02
参数9:0
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:50:47
参数2:2017-06-20 16:50:47
参数3:303413
 
[INFO][2017-06-20 19:02:19] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b12513117064,0009-0502 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15971412293
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:50:47
参数2:2017-06-20 16:50:47
参数3:303413
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b12513117064
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b13526196713
参数2:B6204b12513117064
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:19
参数9:0
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2946
参数2:2525
参数3:6
参数4:8.0
参数5:B6204b12513117064
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b13980644604
参数2:9
参数3:B6204b12513117064
参数4:1
参数5:3
参数6:农家小炒肉-份
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-20 19:02:19
参数11:25.76
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:19
参数4:服务不可用
参数5:B6204b13303694405
参数6:B6204b12513117064
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18071047552
参数2:1
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b13303694405
参数2:B6204b12513117064
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:19
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18071047552
参数2:菜大师用户
参数3:2017-06-20 16:54:24
参数4:2017-06-20 16:54:24
参数5:1
参数6:1
参数7:0.0
参数8:30.48328995,114.41095004
参数9:2017-06-20 16:54:24
参数10:2017-06-20 16:54:24
参数11:0
参数12:2017-06-20 16:54:24
参数13:2017-06-20 16:54:24
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18071047552
参数2:1
 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:54:24
参数2:null
参数3:0
参数4:2017-06-20 16:54:24
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303414
参数18:1
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b13861309073
参数2:0
参数3:303414
参数4:0009-0503
参数5:饿了么
参数6:1209023174396802076
参数7:497
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:54:22
参数14:30.699999
参数15:-5.0
参数16:1.03
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:15.7
参数22:23.67
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:54:24
参数31:高
参数32:18071047552
参数33:光谷创意大厦B座职业技术学院东区附近 4楼达内培训机构
参数34:114.41095004
参数35:30.48328995
参数36:114.417534725791
参数37:30.488985418452597
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:19
参数66:2017-06-20 19:02:19
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪碧（听装）","price":3.8,"quantity":1,"id":157948394,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b14728833007
参数2:B6204b13861309073
参数3:用户
参数4:0
参数5:商家待接单
参数6:高支付成功
参数7:高
参数8:2017-06-20 16:54:24
参数9:0
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:54:22
参数2:2017-06-20 16:54:22
参数3:303414
 
[INFO][2017-06-20 19:02:20] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b13861309073,0009-0503 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b13861309073
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18071047552
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b14502421847
参数2:B6204b13861309073
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:20
参数9:0
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1678
参数2:1438
参数3:4
参数4:6.0
参数5:B6204b13861309073
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:54:22
参数2:2017-06-20 16:54:22
参数3:303414
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:雪碧（听装）
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:20
参数4:服务不可用
参数5:B6204b14439190775
参数6:B6204b13861309073
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15071399252
参数2:1
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b14439190775
参数2:B6204b13861309073
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:20
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:272977
参数3:1
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b15534567240
参数2:0
参数3:272977
参数4:0009-0504
参数5:饿了么
参数6:1209023204226759708
参数7:499
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:55:55
参数14:23.9
参数15:0.0
参数16:0.69
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.9
参数22:17.21
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:57:00
参数31:高月(女士)
参数32:15071399252
参数33:中南财经政法大学(南湖校区)东湖高新技术开发区南湖大道182号      财大临湖公寓3栋
参数34:114.38967107
参数35:30.47608905
参数36:114.39616556554293
参数37:30.48209391300158
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:21
参数66:2017-06-20 19:02:21
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"橄榄菜豆角肉末","price":23.9,"quantity":1,"id":176993599,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b14223646476
参数2:9
参数3:B6204b13861309073
参数4:6
参数5:74
参数6:雪碧（听装）
参数7:雪碧（听装）
参数8:0
参数9:null
参数10:2017-06-20 19:02:20
参数11:2.9298372
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b15453365762
参数17:9
参数18:B6204b13861309073
参数19:0
参数20:0
参数21:红烧牛腩-份
参数22:null
参数23:0
参数24:null
参数25:2017-06-20 19:02:21
参数26:0.0
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b15485244082
参数2:B6204b15534567240
参数3:用户
参数4:0
参数5:商家待接单
参数6:高月(女士)支付成功
参数7:高月(女士)
参数8:2017-06-20 16:57:00
参数9:0
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:55:55
参数2:2017-06-20 16:55:55
参数3:272977
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:55:55
参数2:2017-06-20 16:55:55
参数3:272977
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b15534567240
 
[INFO][2017-06-20 19:02:21] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b15534567240,0009-0504 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b15459504245
参数2:B6204b15534567240
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:21
参数9:0
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15071399252
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2495
参数2:2138
参数3:5
参数4:7.0
参数5:B6204b15534567240
 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b15628653268
参数2:9
参数3:B6204b15534567240
参数4:1
参数5:17
参数6:橄榄菜豆角肉末
参数7:橄榄菜豆角肉末
参数8:0
参数9:null
参数10:2017-06-20 19:02:21
参数11:17.21
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18827413450
参数2:1
 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:22
参数4:服务不可用
参数5:B6204b15746116168
参数6:B6204b15534567240
 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b15746116168
参数2:B6204b15534567240
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:22
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:274491
参数3:1
 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b16515308565
参数2:0
参数3:274491
参数4:0009-0505
参数5:饿了么
参数6:1209023303791015964
参数7:498
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:56:15
参数14:56.6
参数15:0.0
参数16:2.08
参数17:4.0
参数18:5.0
参数19:29.0
参数20:0.0
参数21:36.6
参数22:43.52
参数23:20.0
参数24:9.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:56:24
参数31:优优
参数32:18827413450
参数33:湖北省武汉市洪山区关东街道曙光星城A区 五栋二单元401
参数34:114.402281
参数35:30.487673
参数36:114.40884340025596
参数37:30.493469218649807
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:22
参数66:2017-06-20 19:02:22
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片","price":24.9,"quantity":1,"id":180150417,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"米饭","price":1.0,"quantity":1,"id":92440355,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"柠檬酸梅汤","price":5.8,"quantity":1,"id":1230032195,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b16045939362
参数2:B6204b16515308565
参数3:用户
参数4:0
参数5:商家待接单
参数6:优优支付成功
参数7:优优
参数8:2017-06-20 16:56:24
参数9:0
 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:56:15
参数2:2017-06-20 16:56:15
参数3:274491
 
[INFO][2017-06-20 19:02:23] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b16515308565,0009-0505 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18827413450
 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:56:15
参数2:2017-06-20 16:56:15
参数3:274491
 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:260
参数2:222
参数3:1
参数4:3.0
参数5:B6204b16515308565
 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:23
参数4:服务不可用
参数5:B6204b17250560823
参数6:B6204b16515308565
 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b17250560823
参数2:B6204b16515308565
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:23
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18223643346
参数2:1
 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18223643346
参数2:菜大师用户
参数3:2017-06-20 16:58:12
参数4:2017-06-20 16:58:12
参数5:1
参数6:1
参数7:0.0
参数8:30.48026995,114.42182003
参数9:2017-06-20 16:58:12
参数10:2017-06-20 16:58:12
参数11:0
参数12:2017-06-20 16:58:12
参数13:2017-06-20 16:58:12
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b17584270757
参数2:9
参数3:B6204b16515308565
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:02:23
参数11:19.145725
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b17615205020
参数17:9
参数18:B6204b16515308565
参数19:1
参数20:117
参数21:青豆米鸡丁
参数22:青豆米鸡丁
参数23:0
参数24:null
参数25:2017-06-20 19:02:23
参数26:15.301202
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b17583933726
参数32:9
参数33:B6204b16515308565
参数34:3
参数35:50
参数36:米饭
参数37:金枪鱼沙拉
参数38:0
参数39:null
参数40:2017-06-20 19:02:23
参数41:0.0
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B6204b17635720086
参数47:9
参数48:B6204b16515308565
参数49:2
参数50:123
参数51:香滑蒸鸡蛋
参数52:香滑蒸鸡蛋
参数53:0
参数54:null
参数55:2017-06-20 19:02:23
参数56:3.8445232
参数57:1
参数58:0
参数59:0
参数60:1
参数61:B6204b17575129347
参数62:9
参数63:B6204b16515308565
参数64:10
参数65:143
参数66:柠檬酸梅汤
参数67:柠檬酸梅汤
参数68:0
参数69:null
参数70:2017-06-20 19:02:23
参数71:4.459647
参数72:1
参数73:0
参数74:0
参数75:1
 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18223643346
参数2:1
 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:58:12
参数2:null
参数3:0
参数4:2017-06-20 16:58:12
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303415
参数18:1
 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b18354056543
参数2:0
参数3:303415
参数4:0009-0506
参数5:饿了么
参数6:1209023392961868828
参数7:500
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:58:00
参数14:24.9
参数15:-5.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:9.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:58:12
参数31:荣(先生)
参数32:18223643346
参数33:光谷总部国际时代9栋307 307
参数34:114.42182003
参数35:30.48026995
参数36:114.42841132856316
参数37:30.485928314659603
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:24
参数66:2017-06-20 19:02:24
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片","price":24.9,"quantity":1,"id":180150417,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b18409716501
参数2:B6204b18354056543
参数3:用户
参数4:0
参数5:商家待接单
参数6:荣(先生)支付成功
参数7:荣(先生)
参数8:2017-06-20 16:58:12
参数9:0
 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:58:00
参数2:2017-06-20 16:58:00
参数3:303415
 
[INFO][2017-06-20 19:02:24] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b18354056543,0009-0506 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:58:00
参数2:2017-06-20 16:58:00
参数3:303415
 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18223643346
 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:3008
参数2:2578
参数3:7
参数4:9.0
参数5:B6204b18354056543
 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b18938742206
参数2:9
参数3:B6204b18354056543
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:02:24
参数11:18.16
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:24
参数4:服务不可用
参数5:B6204b18632696606
参数6:B6204b18354056543
 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b18354056543
 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b18520476865
参数2:B6204b18354056543
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:24
参数9:0
 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15527689502
参数2:1
 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b18632696606
参数2:B6204b18354056543
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:24
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:243234
参数3:1
 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b19856184286
参数2:0
参数3:243234
参数4:0009-0507
参数5:饿了么
参数6:1209023472292984860
参数7:501
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:58:26
参数14:26.9
参数15:0.0
参数16:0.84
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:16.9
参数22:20.06
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:58:34
参数31:彭睿晨
参数32:15527689502
参数33:湖北省武汉市洪山区关山街道中南民族大学西区高层2栋2栋32层3202
参数34:114.395096
参数35:30.493426
参数36:114.4016326143478
参数37:30.49933884230827
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:25
参数66:2017-06-20 19:02:25
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"红烧牛腩-份","price":26.9,"quantity":1,"id":92239980,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b19419187055
参数2:B6204b19856184286
参数3:用户
参数4:0
参数5:商家待接单
参数6:彭睿晨支付成功
参数7:彭睿晨
参数8:2017-06-20 16:58:34
参数9:0
 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:58:26
参数2:2017-06-20 16:58:26
参数3:243234
 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15527689502
 
[INFO][2017-06-20 19:02:25] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b19856184286,0009-0507 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 16:58:26
参数2:2017-06-20 16:58:26
参数3:243234
 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1495
参数2:1281
参数3:3
参数4:5.0
参数5:B6204b19856184286
 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b19856184286
 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b1a242523253
参数2:B6204b19856184286
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:26
参数9:0
 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:26
参数4:服务不可用
参数5:B6204b19684002200
参数6:B6204b19856184286
 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18271433052
参数2:1
 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:红烧牛腩-份
 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b19684002200
参数2:B6204b19856184286
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:26
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b1a351408820
参数2:9
参数3:B6204b19856184286
参数4:0
参数5:0
参数6:红烧牛腩-份
参数7:null
参数8:0
参数9:null
参数10:2017-06-20 19:02:26
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:224174
参数3:1
 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b1a508732136
参数2:0
参数3:224174
参数4:0009-0508
参数5:饿了么
参数6:1209023527297070108
参数7:502
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 16:59:32
参数14:48.3
参数15:0.0
参数16:1.86
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:35.3
参数22:39.44
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 16:59:42
参数31:黄思诗(女士)
参数32:18271433052
参数33:红璞公寓(曙光星城店)曙光星城C区 九栋一单元2206
参数34:114.40323986
参数35:30.48344024
参数36:114.40980176171102
参数37:30.489221840951952
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:26
参数66:2017-06-20 19:02:26
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":108171986,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"番茄炒鸡蛋-大份","price":19.9,"quantity":1,"id":560271173,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"水煮肉片","price":24.9,"quantity":1,"id":180150417,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b1a187021878
参数2:B6204b1a508732136
参数3:用户
参数4:0
参数5:商家待接单
参数6:黄思诗(女士)支付成功
参数7:黄思诗(女士)
参数8:2017-06-20 16:59:42
参数9:0
 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:59:32
参数2:2017-06-20 16:59:32
参数3:224174
 
[INFO][2017-06-20 19:02:27] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b1a508732136,0009-0508 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18271433052
 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 16:59:32
参数2:2017-06-20 16:59:32
参数3:224174
 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:813
参数2:696
参数3:2
参数4:4.0
参数5:B6204b1a508732136
 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:27
参数4:服务不可用
参数5:B6204b1a913449513
参数6:B6204b1a508732136
 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13697361784
参数2:1
 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b1a913449513
参数2:B6204b1a508732136
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:27
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b1b406520777
参数2:9
参数3:B6204b1a508732136
参数4:2
参数5:47
参数6:雪花蛋酒
参数7:雪花蛋酒
参数8:0
参数9:null
参数10:2017-06-20 19:02:27
参数11:2.857971
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b1b445134545
参数17:9
参数18:B6204b1a508732136
参数19:1
参数20:7
参数21:番茄炒鸡蛋-大份
参数22:番茄炒鸡蛋
参数23:0
参数24:null
参数25:2017-06-20 19:02:27
参数26:16.249605
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b1b083614840
参数32:9
参数33:B6204b1a508732136
参数34:1
参数35:88
参数36:水煮肉片
参数37:水煮肉片
参数38:0
参数39:null
参数40:2017-06-20 19:02:27
参数41:20.332422
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:170287
参数3:1
 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b1b743393212
参数2:0
参数3:170287
参数4:0009-0509
参数5:饿了么
参数6:1209023545080941596
参数7:503
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:00:16
参数14:26.699999
参数15:-6.0
参数16:0.83
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.7
参数22:19.87
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:00:32
参数31:汤(先生)
参数32:13697361784
参数33:中南民族大学学生宿舍22栋民族大道182号 407
参数34:114.3912301
参数35:30.47952999
参数36:114.39773550974098
参数37:30.485507775475845
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:27
参数66:2017-06-20 19:02:27
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪碧（听装）","price":3.8,"quantity":1,"id":157948394,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b1b607960315
参数2:B6204b1b743393212
参数3:用户
参数4:0
参数5:商家待接单
参数6:汤(先生)支付成功
参数7:汤(先生)
参数8:2017-06-20 17:00:32
参数9:0
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:00:16
参数2:2017-06-20 17:00:16
参数3:170287
 
[INFO][2017-06-20 19:02:28] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b1b743393212,0009-0509 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:00:16
参数2:2017-06-20 17:00:16
参数3:170287
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13697361784
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b1b743393212
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b1c291193854
参数2:B6204b1b743393212
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:28
参数9:0
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2018
参数2:1729
参数3:5
参数4:7.0
参数5:B6204b1b743393212
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:新派手撕鸡
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:28
参数4:服务不可用
参数5:B6204b1c899843415
参数6:B6204b1b743393212
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18202799924
参数2:1
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b1c899843415
参数2:B6204b1b743393212
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:28
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:233396
参数3:1
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b1c754533336
参数2:9
参数3:B6204b1b743393212
参数4:6
参数5:74
参数6:雪碧（听装）
参数7:雪碧（听装）
参数8:0
参数9:null
参数10:2017-06-20 19:02:28
参数11:2.8279402
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b1c293928621
参数17:9
参数18:B6204b1b743393212
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:02:28
参数26:17.04206
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b1c477626852
参数2:0
参数3:233396
参数4:0009-0510
参数5:饿了么
参数6:1209023590001822748
参数7:505
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:00:50
参数14:28.5
参数15:-6.0
参数16:0.92
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:12.5
参数22:21.58
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:01:05
参数31:傅豪(先生)
参数32:18202799924
参数33:中南财经政法大学南湖校区-临湖公寓1号武汉市洪山区南湖大道182号中南财经政法大学南湖校区临湖1栋
参数34:114.3901371
参数35:30.47005995
参数36:114.39662814570654
参数37:30.476054926619163
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:28
参数66:2017-06-20 19:02:28
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"手撕鸡+雪花蛋酒+爱心荷包蛋","price":28.5,"quantity":1,"id":123877083,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b1d196123732
参数2:B6204b1c477626852
参数3:用户
参数4:0
参数5:商家待接单
参数6:傅豪(先生)支付成功
参数7:傅豪(先生)
参数8:2017-06-20 17:01:05
参数9:0
 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:00:50
参数2:2017-06-20 17:00:50
参数3:233396
 
[INFO][2017-06-20 19:02:29] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b1c477626852,0009-0510 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18202799924
 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:00:50
参数2:2017-06-20 17:00:50
参数3:233396
 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:3027
参数2:2594
参数3:7
参数4:9.0
参数5:B6204b1c477626852
 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:29
参数4:服务不可用
参数5:B6204b1d429385681
参数6:B6204b1c477626852
 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b1d429385681
参数2:B6204b1c477626852
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:29
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b1d484816815
参数2:9
参数3:B6204b1c477626852
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-20 19:02:29
参数11:16.580772
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b1d886238718
参数17:9
参数18:B6204b1c477626852
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-20 19:02:29
参数26:2.9162164
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b1d853673312
参数32:9
参数33:B6204b1c477626852
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-20 19:02:29
参数41:2.0830116
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:02:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b1c477626852
 
[INFO][2017-06-20 19:02:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b1f001805664
参数2:B6204b1c477626852
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:31
参数9:0
 
[INFO][2017-06-20 19:02:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15717152291
参数2:1
 
[INFO][2017-06-20 19:02:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:48106
参数3:1
 
[INFO][2017-06-20 19:02:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b22341067245
参数2:0
参数3:48106
参数4:0009-0511
参数5:饿了么
参数6:1209023723171100700
参数7:504
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:01:02
参数14:23.279999
参数15:-6.0
参数16:0.66
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:7.28
参数22:16.62
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:01:04
参数31:吴天品(先生)
参数32:15717152291
参数33:武汉纺织大学(南湖校区)学生公寓二区民族大道武汉纺织大学2区6栋
参数34:114.39986967
参数35:30.48651002
参数36:114.40642131862877
参数37:30.492342174055874
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:34
参数66:2017-06-20 19:02:34
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"另加筷子三件套装","price":0.38,"quantity":1,"id":148461928,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b22200417633
参数2:B6204b22341067245
参数3:用户
参数4:0
参数5:商家待接单
参数6:吴天品(先生)支付成功
参数7:吴天品(先生)
参数8:2017-06-20 17:01:04
参数9:0
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:01:02
参数2:2017-06-20 17:01:02
参数3:48106
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:35] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b22341067245,0009-0511 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15717152291
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:01:02
参数2:2017-06-20 17:01:02
参数3:48106
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1428
参数2:1224
参数3:3
参数4:5.0
参数5:B6204b22341067245
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:35
参数4:服务不可用
参数5:B6204b22666223386
参数6:B6204b22341067245
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b23326412366
参数2:9
参数3:B6204b22341067245
参数4:9
参数5:99
参数6:另加筷子三件套装
参数7:筷子三件套装
参数8:0
参数9:null
参数10:2017-06-20 19:02:35
参数11:0.2712887
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b23490682265
参数17:9
参数18:B6204b22341067245
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:02:35
参数26:16.348713
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b22341067245
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b23167958475
参数2:B6204b22341067245
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:35
参数9:0
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b22666223386
参数2:B6204b22341067245
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:35
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827407043
参数2:1
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:288351
参数3:1
 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:01:19
参数2:null
参数3:0
参数4:2017-06-20 17:01:19
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:288351
参数18:1
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b23788772205
参数2:0
参数3:288351
参数4:0009-0512
参数5:饿了么
参数6:1209023761532270620
参数7:506
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:01:17
参数14:23.9
参数15:-6.0
参数16:0.74
参数17:4.0
参数18:3.0
参数19:16.0
参数20:0.0
参数21:8.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:01:19
参数31:欧阳(先生)
参数32:15827407043
参数33:欧客健身(光谷店)雄楚大道981号立信大厦6层
参数34:114.40175006
参数35:30.49830998
参数36:114.40831868253413
参数37:30.504116116328472
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:35
参数66:2017-06-20 19:02:35
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"米饭","price":1.0,"quantity":1,"id":92440355,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b24285039621
参数2:B6204b23788772205
参数3:用户
参数4:0
参数5:商家待接单
参数6:欧阳(先生)支付成功
参数7:欧阳(先生)
参数8:2017-06-20 17:01:19
参数9:0
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:01:17
参数2:2017-06-20 17:01:17
参数3:288351
 
[INFO][2017-06-20 19:02:36] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b23788772205,0009-0512 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:01:17
参数2:2017-06-20 17:01:17
参数3:288351
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15827407043
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b23788772205
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b24313274403
参数2:B6204b23788772205
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:36
参数9:0
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1653
参数2:1416
参数3:4
参数4:6.0
参数5:B6204b23788772205
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:36
参数4:服务不可用
参数5:B6204b24042648062
参数6:B6204b23788772205
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b24849686613
参数2:9
参数3:B6204b23788772205
参数4:3
参数5:50
参数6:米饭
参数7:金枪鱼沙拉
参数8:0
参数9:null
参数10:2017-06-20 19:02:36
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b24445323714
参数17:9
参数18:B6204b23788772205
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:02:36
参数26:17.400167
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13247131043
参数2:1
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b24042648062
参数2:B6204b23788772205
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:36
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13247131043
参数2:菜大师用户
参数3:2017-06-20 17:01:45
参数4:2017-06-20 17:01:45
参数5:1
参数6:1
参数7:0.0
参数8:30.487141,114.403303
参数9:2017-06-20 17:01:45
参数10:2017-06-20 17:01:45
参数11:0
参数12:2017-06-20 17:01:45
参数13:2017-06-20 17:01:45
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13247131043
参数2:1
 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:01:45
参数2:null
参数3:0
参数4:2017-06-20 17:01:45
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303416
参数18:1
 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b25233650427
参数2:0
参数3:303416
参数4:0009-0513
参数5:饿了么
参数6:1209023774727502876
参数7:507
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:01:39
参数14:30.5
参数15:0.0
参数16:1.02
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:20.5
参数22:23.48
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:01:45
参数31:邹谨
参数32:13247131043
参数33:湖北省武汉市洪山区关东街道曙光星城B区1栋808
参数34:114.403303
参数35:30.487141
参数36:114.40986873737809
参数37:30.492922687756877
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:37
参数66:2017-06-20 19:02:37
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片+雪花蛋酒+爱心荷包蛋","price":30.5,"quantity":1,"id":500973446,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b25039889715
参数2:B6204b25233650427
参数3:用户
参数4:0
参数5:商家待接单
参数6:邹谨支付成功
参数7:邹谨
参数8:2017-06-20 17:01:45
参数9:0
 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:01:39
参数2:2017-06-20 17:01:39
参数3:303416
 
[INFO][2017-06-20 19:02:37] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b25233650427,0009-0513 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13247131043
 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:01:39
参数2:2017-06-20 17:01:39
参数3:303416
 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:412
参数2:353
参数3:1
参数4:3.0
参数5:B6204b25233650427
 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:37
参数4:服务不可用
参数5:B6204b25986520748
参数6:B6204b25233650427
 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13007157719
参数2:1
 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b25986520748
参数2:B6204b25233650427
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:37
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13007157719
参数2:菜大师用户
参数3:2017-06-20 17:02:51
参数4:2017-06-20 17:02:51
参数5:1
参数6:1
参数7:0.0
参数8:30.48262392,114.39283809
参数9:2017-06-20 17:02:51
参数10:2017-06-20 17:02:51
参数11:0
参数12:2017-06-20 17:02:51
参数13:2017-06-20 17:02:51
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b25285281256
参数2:9
参数3:B6204b25233650427
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:02:37
参数11:18.768295
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b26275712530
参数17:9
参数18:B6204b25233650427
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-20 19:02:38
参数26:2.7484949
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b26937990530
参数32:9
参数33:B6204b25233650427
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-20 19:02:38
参数41:1.9632107
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13007157719
参数2:1
 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:02:51
参数2:null
参数3:0
参数4:2017-06-20 17:02:51
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303417
参数18:1
 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b26838038306
参数2:0
参数3:303417
参数4:0009-0514
参数5:饿了么
参数6:1209023935394385948
参数7:508
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:02:40
参数14:25.4
参数15:-6.0
参数16:0.77
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:9.4
参数22:18.63
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:02:51
参数31:韦守黎(先生)
参数32:13007157719
参数33:中南民族大学中南民大南区22栋
参数34:114.39283809
参数35:30.48262392
参数36:114.39935427613757
参数37:30.488573815743074
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:38
参数66:2017-06-20 19:02:38
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b26458722544
参数2:B6204b26838038306
参数3:用户
参数4:0
参数5:商家待接单
参数6:韦守黎(先生)支付成功
参数7:韦守黎(先生)
参数8:2017-06-20 17:02:51
参数9:0
 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:02:40
参数2:2017-06-20 17:02:40
参数3:303417
 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b26838038306
 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:02:40
参数2:2017-06-20 17:02:40
参数3:303417
 
[INFO][2017-06-20 19:02:39] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b26838038306,0009-0514 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13007157719
 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b27776484022
参数2:B6204b26838038306
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:39
参数9:0
 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1534
参数2:1314
参数3:4
参数4:6.0
参数5:B6204b26838038306
 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:39
参数4:服务不可用
参数5:B6204b27310630353
参数6:B6204b26838038306
 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b27352763327
参数2:9
参数3:B6204b26838038306
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-20 19:02:39
参数11:1.8336613
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b27273682352
参数17:9
参数18:B6204b26838038306
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:02:39
参数26:16.796337
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18768238298
参数2:1
 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b27310630353
参数2:B6204b26838038306
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:39
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:225544
参数3:1
 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b27142613357
参数2:0
参数3:225544
参数4:0009-0515
参数5:饿了么
参数6:1209024042475036700
参数7:509
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:03:24
参数14:24.699999
参数15:-6.0
参数16:0.73
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:8.7
参数22:17.97
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:03:27
参数31:赵先生(先生)
参数32:18768238298
参数33:武汉工程大学邮电与信息工程学院雄楚大街693武汉工程大学内七栋
参数34:114.38986184
参数35:30.49967992
参数36:114.39637774965504
参数37:30.505686820942845
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:39
参数66:2017-06-20 19:02:39
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"百事可乐（听装）","price":3.8,"quantity":1,"id":157948150,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"鲜菇炒肉丝","price":20.9,"quantity":1,"id":638014838,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b28795778561
参数2:B6204b27142613357
参数3:用户
参数4:0
参数5:商家待接单
参数6:赵先生(先生)支付成功
参数7:赵先生(先生)
参数8:2017-06-20 17:03:27
参数9:0
 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:03:24
参数2:2017-06-20 17:03:24
参数3:225544
 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:03:24
参数2:2017-06-20 17:03:24
参数3:225544
 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18768238298
 
[INFO][2017-06-20 19:02:40] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b27142613357,0009-0515 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2716
参数2:2328
参数3:6
参数4:8.0
参数5:B6204b27142613357
 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:40
参数4:服务不可用
参数5:B6204b28480998844
参数6:B6204b27142613357
 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:鲜菇炒肉丝
 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b27142613357
 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13018056629
参数2:1
 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b28039079503
参数2:B6204b27142613357
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:40
参数9:0
 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b28480998844
参数2:B6204b27142613357
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:40
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13018056629
参数2:菜大师用户
参数3:2017-06-20 17:03:38
参数4:2017-06-20 17:03:38
参数5:1
参数6:1
参数7:0.0
参数8:30.48428002,114.39217994
参数9:2017-06-20 17:03:38
参数10:2017-06-20 17:03:38
参数11:0
参数12:2017-06-20 17:03:38
参数13:2017-06-20 17:03:38
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b28016262826
参数2:9
参数3:B6204b27142613357
参数4:6
参数5:73
参数6:百事可乐（听装）
参数7:百事可乐（听装）
参数8:0
参数9:null
参数10:2017-06-20 19:02:40
参数11:2.7646153
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b29010357660
参数17:9
参数18:B6204b27142613357
参数19:1
参数20:132
参数21:鲜菇炒肉丝
参数22:鲜菇炒肉丝
参数23:0
参数24:null
参数25:2017-06-20 19:02:41
参数26:15.205384
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13018056629
参数2:1
 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:03:38
参数2:null
参数3:0
参数4:2017-06-20 17:03:38
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303418
参数18:1
 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b29136599231
参数2:0
参数3:303418
参数4:0009-0516
参数5:饿了么
参数6:1209024058564457500
参数7:510
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:03:25
参数14:44.8
参数15:0.0
参数16:1.49
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:27.8
参数22:32.31
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:03:38
参数31:啦啦(女士)
参数32:13018056629
参数33:中南民族大学民族大道182号 南区6栋
参数34:114.39217994
参数35:30.48428002
参数36:114.39869465061915
参数37:30.49024207884489
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:41
参数66:2017-06-20 19:02:41
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片","price":24.9,"quantity":1,"id":180150417,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"番茄炒鸡蛋-大份","price":19.9,"quantity":1,"id":560271173,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b29229824071
参数2:B6204b29136599231
参数3:用户
参数4:0
参数5:商家待接单
参数6:啦啦(女士)支付成功
参数7:啦啦(女士)
参数8:2017-06-20 17:03:38
参数9:0
 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:03:25
参数2:2017-06-20 17:03:25
参数3:303418
 
[INFO][2017-06-20 19:02:42] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b29136599231,0009-0516 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:03:25
参数2:2017-06-20 17:03:25
参数3:303418
 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13018056629
 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1426
参数2:1222
参数3:3
参数4:5.0
参数5:B6204b29136599231
 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:42
参数4:服务不可用
参数5:B6204b29089831518
参数6:B6204b29136599231
 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13297920861
参数2:1
 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b2a718600186
参数2:9
参数3:B6204b29136599231
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:02:42
参数11:17.958015
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b2a993386622
参数17:9
参数18:B6204b29136599231
参数19:1
参数20:7
参数21:番茄炒鸡蛋-大份
参数22:番茄炒鸡蛋
参数23:0
参数24:null
参数25:2017-06-20 19:02:42
参数26:14.351988
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b29089831518
参数2:B6204b29136599231
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:42
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:20841
参数3:1
 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2a950769234
参数2:0
参数3:20841
参数4:0009-0517
参数5:饿了么
参数6:1209024120522583068
参数7:512
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:04:26
参数14:26.5
参数15:-6.0
参数16:0.82
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.5
参数22:19.68
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:04:41
参数31:徐恒昊(先生)
参数32:13297920861
参数33:中南民族大学民族大道182号 9栋宿舍106
参数34:114.39313011
参数35:30.48710003
参数36:114.39965205278267
参数37:30.493045907948307
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:42
参数66:2017-06-20 19:02:42
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉+荷包蛋+雪花蛋酒","price":26.5,"quantity":1,"id":621318334,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2a445928886
参数2:B6204b2a950769234
参数3:用户
参数4:0
参数5:商家待接单
参数6:徐恒昊(先生)支付成功
参数7:徐恒昊(先生)
参数8:2017-06-20 17:04:41
参数9:0
 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:04:26
参数2:2017-06-20 17:04:26
参数3:20841
 
[INFO][2017-06-20 19:02:43] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b2a950769234,0009-0517 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13297920861
 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:04:26
参数2:2017-06-20 17:04:26
参数3:20841
 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1049
参数2:899
参数3:3
参数4:5.0
参数5:B6204b2a950769234
 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b2a950769234
 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2b493355780
参数2:B6204b2a950769234
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:43
参数9:0
 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:43
参数4:服务不可用
参数5:B6204b2b269759567
参数6:B6204b2a950769234
 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13545353281
参数2:1
 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b2b269759567
参数2:B6204b2a950769234
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:43
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2b950843253
参数2:9
参数3:B6204b2a950769234
参数4:1
参数5:3
参数6:农家小炒肉
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-20 19:02:43
参数11:14.937831
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b2b183139170
参数17:9
参数18:B6204b2a950769234
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-20 19:02:43
参数26:1.9759037
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b2b373877116
参数32:9
参数33:B6204b2a950769234
参数34:2
参数35:47
参数36:雪花蛋酒
参数37:雪花蛋酒
参数38:0
参数39:null
参数40:2017-06-20 19:02:43
参数41:2.7662652
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:30608
参数3:1
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2b798575765
参数2:0
参数3:30608
参数4:0009-0518
参数5:饿了么
参数6:1209024122963872796
参数7:511
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:04:31
参数14:23.699999
参数15:-6.0
参数16:0.68
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:7.7
参数22:17.02
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:04:33
参数31:代康(先生)
参数32:13545353281
参数33:八一花园梅花苑荣院路八一花园梅花苑(中南民族大学西) 1E栋3203
参数34:114.38874001
参数35:30.49214006
参数36:114.39524545281385
参数37:30.498165741679856
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:43
参数66:2017-06-20 19:02:43
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"百事可乐（听装）","price":3.8,"quantity":1,"id":157948150,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2c979630266
参数2:B6204b2b798575765
参数3:用户
参数4:0
参数5:商家待接单
参数6:代康(先生)支付成功
参数7:代康(先生)
参数8:2017-06-20 17:04:33
参数9:0
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:04:31
参数2:2017-06-20 17:04:31
参数3:30608
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b2b798575765
 
[INFO][2017-06-20 19:02:44] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b2b798575765,0009-0518 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:04:31
参数2:2017-06-20 17:04:31
参数3:30608
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13545353281
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b2c951425588
参数2:B6204b2b798575765
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:44
参数9:0
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2514
参数2:2154
参数3:6
参数4:8.0
参数5:B6204b2b798575765
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13545918317
参数2:1
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:44
参数4:服务不可用
参数5:B6204b2c486026476
参数6:B6204b2b798575765
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b2c153570554
参数2:9
参数3:B6204b2b798575765
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-20 19:02:44
参数11:14.291056
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b2c741449477
参数17:9
参数18:B6204b2b798575765
参数19:6
参数20:73
参数21:百事可乐（听装）
参数22:百事可乐（听装）
参数23:0
参数24:null
参数25:2017-06-20 19:02:44
参数26:2.7289453
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2c486026476
参数2:B6204b2b798575765
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:44
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:73335
参数3:1
 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2d878676187
参数2:0
参数3:73335
参数4:0009-0519
参数5:饿了么
参数6:1209024240496441372
参数7:513
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:05:08
参数14:30.5
参数15:-6.0
参数16:1.02
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.5
参数22:23.48
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:05:23
参数31:郑 女士
参数32:13545918317
参数33:光谷青年城12栋1单元2701
参数34:114.40206
参数35:30.49212
参数36:114.4086254576679
参数37:30.497920450833977
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:45
参数66:2017-06-20 19:02:45
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片+雪花蛋酒+爱心荷包蛋","price":30.5,"quantity":1,"id":500973446,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2d205343831
参数2:B6204b2d878676187
参数3:用户
参数4:0
参数5:商家待接单
参数6:郑 女士支付成功
参数7:郑 女士
参数8:2017-06-20 17:05:23
参数9:0
 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:05:08
参数2:2017-06-20 17:05:08
参数3:73335
 
[INFO][2017-06-20 19:02:45] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b2d878676187,0009-0519 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:05:08
参数2:2017-06-20 17:05:08
参数3:73335
 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13545918317
 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1077
参数2:923
参数3:3
参数4:5.0
参数5:B6204b2d878676187
 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b2d878676187
 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2d764460365
参数2:B6204b2d878676187
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:45
参数9:0
 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:45
参数4:服务不可用
参数5:B6204b2d185518320
参数6:B6204b2d878676187
 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13477035362
参数2:1
 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b2d185518320
参数2:B6204b2d878676187
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:45
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b2d982189327
参数2:9
参数3:B6204b2d878676187
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:02:45
参数11:18.768295
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b2d260778627
参数17:9
参数18:B6204b2d878676187
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-20 19:02:45
参数26:2.7484949
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b2d614547830
参数32:9
参数33:B6204b2d878676187
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-20 19:02:45
参数41:1.9632107
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:53012
参数3:1
 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2e209359134
参数2:0
参数3:53012
参数4:0009-0520
参数5:饿了么
参数6:1209024268841732124
参数7:514
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:05:08
参数14:23.279999
参数15:-6.0
参数16:0.66
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:7.28
参数22:16.62
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:05:31
参数31:俞静远(先生)
参数32:13477035362
参数33:中南民族大学北区学生公寓1B102
参数34:114.39653032
参数35:30.49463041
参数36:114.40307439273639
参数37:30.500518908987488
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:46
参数66:2017-06-20 19:02:46
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"另加筷子三件套装","price":0.38,"quantity":1,"id":148461928,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2e200941140
参数2:B6204b2e209359134
参数3:用户
参数4:0
参数5:商家待接单
参数6:俞静远(先生)支付成功
参数7:俞静远(先生)
参数8:2017-06-20 17:05:31
参数9:0
 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:05:08
参数2:2017-06-20 17:05:08
参数3:53012
 
[INFO][2017-06-20 19:02:46] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b2e209359134,0009-0520 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:05:08
参数2:2017-06-20 17:05:08
参数3:53012
 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13477035362
 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:另加筷子三件套装
 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1544
参数2:1323
参数3:4
参数4:6.0
参数5:B6204b2e209359134
 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:46
参数4:服务不可用
参数5:B6204b2e987687422
参数6:B6204b2e209359134
 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15171472203
参数2:1
 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2e987687422
参数2:B6204b2e209359134
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:46
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:303030
参数3:1
 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2f114104085
参数2:9
参数3:B6204b2e209359134
参数4:9
参数5:99
参数6:另加筷子三件套装
参数7:筷子三件套装
参数8:0
参数9:null
参数10:2017-06-20 19:02:47
参数11:0.2712887
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b2f074742543
参数17:9
参数18:B6204b2e209359134
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:02:47
参数26:16.348713
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2f751016625
参数2:0
参数3:303030
参数4:0009-0521
参数5:饿了么
参数6:1209024371912374300
参数7:515
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:06:00
参数14:28.5
参数15:-8.0
参数16:0.92
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.5
参数22:21.58
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:06:02
参数31:钟(先生)
参数32:15171472203
参数33:中南财经政法大学(南湖校区)东湖高新技术开发区南湖大道182号 环湖6栋
参数34:114.38967057
参数35:30.47608964
参数36:114.39616506373422
参数37:30.482094512140076
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:47
参数66:2017-06-20 19:02:47
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"手撕鸡+雪花蛋酒+爱心荷包蛋","price":28.5,"quantity":1,"id":123877083,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2f159165801
参数2:B6204b2f751016625
参数3:用户
参数4:0
参数5:商家待接单
参数6:钟(先生)支付成功
参数7:钟(先生)
参数8:2017-06-20 17:06:02
参数9:0
 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:06:00
参数2:2017-06-20 17:06:00
参数3:303030
 
[INFO][2017-06-20 19:02:47] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b2f751016625,0009-0521 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15171472203
 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:06:00
参数2:2017-06-20 17:06:00
参数3:303030
 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b2f751016625
 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b2f624590376
参数2:B6204b2f751016625
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:47
参数9:0
 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2495
参数2:2138
参数3:5
参数4:7.0
参数5:B6204b2f751016625
 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:47
参数4:服务不可用
参数5:B6204b2f800612377
参数6:B6204b2f751016625
 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b2f800612377
参数2:B6204b2f751016625
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:47
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13469944611
参数2:1
 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b2f756335104
参数2:9
参数3:B6204b2f751016625
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-20 19:02:47
参数11:16.580772
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b30016462033
参数17:9
参数18:B6204b2f751016625
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-20 19:02:48
参数26:2.9162164
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b30124916008
参数32:9
参数33:B6204b2f751016625
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-20 19:02:48
参数41:2.0830116
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:212892
参数3:1
 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b30095922843
参数2:0
参数3:212892
参数4:0009-0522
参数5:饿了么
参数6:1209024403747212316
参数7:517
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:06:20
参数14:25.4
参数15:-6.0
参数16:0.77
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:9.4
参数22:18.63
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:07:36
参数31:曾秋霞(女士)
参数32:13469944611
参数33:长航蓝晶国际东湖高新雄楚大街与关山大道交汇处向东200米处 7号楼，1004
参数34:114.41782974
参数35:30.49551956
参数36:114.42443466776548
参数37:30.501182259981363
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:千万不要放芹菜，香菜
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:48
参数66:2017-06-20 19:02:48
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b30771666260
参数2:B6204b30095922843
参数3:用户
参数4:0
参数5:商家待接单
参数6:曾秋霞(女士)支付成功
参数7:曾秋霞(女士)
参数8:2017-06-20 17:07:36
参数9:0
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:06:20
参数2:2017-06-20 17:06:20
参数3:212892
 
[INFO][2017-06-20 19:02:49] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b30095922843,0009-0522 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:06:20
参数2:2017-06-20 17:06:20
参数3:212892
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13469944611
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b30095922843
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b31007546874
参数2:B6204b30095922843
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:49
参数9:0
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2385
参数2:2044
参数3:5
参数4:7.0
参数5:B6204b30095922843
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:49
参数4:服务不可用
参数5:B6204b30351937621
参数6:B6204b30095922843
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b31266496077
参数2:9
参数3:B6204b30095922843
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-20 19:02:49
参数11:1.8336613
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b31798688285
参数17:9
参数18:B6204b30095922843
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:02:49
参数26:16.796337
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13437291889
参数2:1
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b30351937621
参数2:B6204b30095922843
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:49
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:77534
参数3:1
 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b31664448474
参数2:0
参数3:77534
参数4:0009-0523
参数5:饿了么
参数6:1209024448055856156
参数7:516
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:06:49
参数14:25.9
参数15:-6.0
参数16:0.79
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:9.9
参数22:19.11
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:07:04
参数31:严(先生)
参数32:13437291889
参数33:洪福家园一栋一单元2001
参数34:114.40111505
参数35:30.49773398
参数36:114.40768081654663
参数37:30.503549452790153
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:49
参数66:2017-06-20 19:02:49
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":108171986,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b31987282231
参数2:B6204b31664448474
参数3:用户
参数4:0
参数5:商家待接单
参数6:严(先生)支付成功
参数7:严(先生)
参数8:2017-06-20 17:07:04
参数9:0
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:06:49
参数2:2017-06-20 17:06:49
参数3:77534
 
[INFO][2017-06-20 19:02:50] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b31664448474,0009-0523 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:06:49
参数2:2017-06-20 17:06:49
参数3:77534
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13437291889
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b31664448474
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b32397427614
参数2:B6204b31664448474
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:50
参数9:0
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1563
参数2:1339
参数3:4
参数4:6.0
参数5:B6204b31664448474
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:50
参数4:服务不可用
参数5:B6204b32544531718
参数6:B6204b31664448474
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b32544531718
参数2:B6204b31664448474
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:50
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b32396326213
参数2:9
参数3:B6204b31664448474
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-20 19:02:50
参数11:14.682973
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b32785811767
参数17:9
参数18:B6204b31664448474
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-20 19:02:50
参数26:1.8445946
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b32858653370
参数32:9
参数33:B6204b31664448474
参数34:2
参数35:47
参数36:雪花蛋酒
参数37:雪花蛋酒
参数38:0
参数39:null
参数40:2017-06-20 19:02:50
参数41:2.5824325
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13297067418
参数2:1
 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:143543
参数3:1
 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b33713201454
参数2:0
参数3:143543
参数4:0009-0524
参数5:饿了么
参数6:1209024581300525084
参数7:518
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:08:03
参数14:26.699999
参数15:-6.0
参数16:0.83
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.7
参数22:19.87
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:08:05
参数31:胡钦钧(先生)
参数32:13297067418
参数33:中南民族大学学生宿舍22栋民族大道182号 南区22栋407
参数34:114.3912301
参数35:30.47952999
参数36:114.39773550974098
参数37:30.485507775475845
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:51
参数66:2017-06-20 19:02:51
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"雪碧（听装）","price":3.8,"quantity":1,"id":157948394,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b33076228504
参数2:B6204b33713201454
参数3:用户
参数4:0
参数5:商家待接单
参数6:胡钦钧(先生)支付成功
参数7:胡钦钧(先生)
参数8:2017-06-20 17:08:05
参数9:0
 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:08:03
参数2:2017-06-20 17:08:03
参数3:143543
 
[INFO][2017-06-20 19:02:51] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b33713201454,0009-0524 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:08:03
参数2:2017-06-20 17:08:03
参数3:143543
 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13297067418
 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b33713201454
 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b33958635211
参数2:B6204b33713201454
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:51
参数9:0
 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2018
参数2:1729
参数3:5
参数4:7.0
参数5:B6204b33713201454
 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:51
参数4:服务不可用
参数5:B6204b33979916676
参数6:B6204b33713201454
 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827234927
参数2:1
 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b33794638385
参数2:9
参数3:B6204b33713201454
参数4:1
参数5:129
参数6:新派手撕鸡
参数7:新派手撕鸡
参数8:0
参数9:null
参数10:2017-06-20 19:02:51
参数11:17.04206
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b33644581358
参数17:9
参数18:B6204b33713201454
参数19:6
参数20:74
参数21:雪碧（听装）
参数22:雪碧（听装）
参数23:0
参数24:null
参数25:2017-06-20 19:02:51
参数26:2.8279402
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b33979916676
参数2:B6204b33713201454
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:51
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827234927
参数2:菜大师用户
参数3:2017-06-20 17:08:31
参数4:2017-06-20 17:08:31
参数5:1
参数6:1
参数7:0.0
参数8:30.48061998,114.39163009
参数9:2017-06-20 17:08:31
参数10:2017-06-20 17:08:31
参数11:0
参数12:2017-06-20 17:08:31
参数13:2017-06-20 17:08:31
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827234927
参数2:1
 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:08:31
参数2:null
参数3:0
参数4:2017-06-20 17:08:31
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303419
参数18:1
 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b34416313075
参数2:0
参数3:303419
参数4:0009-0525
参数5:饿了么
参数6:1209024585318696988
参数7:519
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:08:11
参数14:43.8
参数15:-8.0
参数16:1.64
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:22.8
参数22:35.16
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:08:31
参数31:周乐锐
参数32:15827234927
参数33:中南民族大学民族大道182号 南区22栋404
参数34:114.39163009
参数35:30.48061998
参数36:114.39813851244874
参数37:30.486590892255194
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:52
参数66:2017-06-20 19:02:52
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b34120368401
参数2:B6204b34416313075
参数3:用户
参数4:0
参数5:商家待接单
参数6:周乐锐支付成功
参数7:周乐锐
参数8:2017-06-20 17:08:31
参数9:0
 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:08:11
参数2:2017-06-20 17:08:11
参数3:303419
 
[INFO][2017-06-20 19:02:52] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b34416313075,0009-0525 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:08:11
参数2:2017-06-20 17:08:11
参数3:303419
 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15827234927
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1774
参数2:1520
参数3:4
参数4:6.0
参数5:B6204b34416313075
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:53
参数4:服务不可用
参数5:B6204b34556547754
参数6:B6204b34416313075
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827362890
参数2:1
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b34416313075
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b34257349506
参数2:9
参数3:B6204b34416313075
参数4:1
参数5:3
参数6:农家小炒肉-份
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-20 19:02:52
参数11:16.77726
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b35063544862
参数17:9
参数18:B6204b34416313075
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:02:53
参数26:18.38274
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b35763451084
参数2:B6204b34416313075
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:53
参数9:0
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b34556547754
参数2:B6204b34416313075
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:53
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:170289
参数3:1
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b35403183220
参数2:0
参数3:170289
参数4:0009-0526
参数5:饿了么
参数6:1209024679262569500
参数7:520
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:09:01
参数14:23.4
参数15:-6.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:7.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:09:12
参数31:冉小波(先生)
参数32:15827362890
参数33:中南民族大学民族大道182号，南区22栋
参数34:114.39313062
参数35:30.48710011
参数36:114.39965256526773
参数37:30.49304597892686
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:53
参数66:2017-06-20 19:02:53
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"鲜菇炒肉丝","price":20.9,"quantity":1,"id":638014838,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b35220573642
参数2:B6204b35403183220
参数3:用户
参数4:0
参数5:商家待接单
参数6:冉小波(先生)支付成功
参数7:冉小波(先生)
参数8:2017-06-20 17:09:12
参数9:0
 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:09:01
参数2:2017-06-20 17:09:01
参数3:170289
 
[INFO][2017-06-20 19:02:54] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b35403183220,0009-0526 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15827362890
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:09:01
参数2:2017-06-20 17:09:01
参数3:170289
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b35403183220
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1049
参数2:899
参数3:3
参数4:5.0
参数5:B6204b35403183220
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b36768000372
参数2:B6204b35403183220
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:54
参数9:0
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15623847585
参数2:1
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:54
参数4:服务不可用
参数5:B6204b35426999714
参数6:B6204b35403183220
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b36134298417
参数2:9
参数3:B6204b35403183220
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-20 19:02:54
参数11:1.7873931
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b36868862446
参数17:9
参数18:B6204b35403183220
参数19:1
参数20:132
参数21:鲜菇炒肉丝
参数22:鲜菇炒肉丝
参数23:0
参数24:null
参数25:2017-06-20 19:02:54
参数26:14.942606
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b35426999714
参数2:B6204b35403183220
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:54
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15623847585
参数2:菜大师用户
参数3:2017-06-20 17:09:36
参数4:2017-06-20 17:09:36
参数5:1
参数6:1
参数7:0.0
参数8:30.49160999,114.40257015
参数9:2017-06-20 17:09:36
参数10:2017-06-20 17:09:36
参数11:0
参数12:2017-06-20 17:09:36
参数13:2017-06-20 17:09:36
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15623847585
参数2:1
 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:09:36
参数2:null
参数3:0
参数4:2017-06-20 17:09:36
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303420
参数18:1
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b36350138375
参数2:0
参数3:303420
参数4:0009-0527
参数5:饿了么
参数6:1209024815535512604
参数7:521
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:09:22
参数14:28.9
参数15:-8.0
参数16:0.94
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.9
参数22:21.96
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:09:36
参数31:胡文闯(先生)
参数32:15623847585
参数33:光谷青年城新竹路 4栋 3116
参数34:114.40257015
参数35:30.49160999
参数36:114.40913713988924
参数37:30.497403001435135
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:54
参数66:2017-06-20 19:02:54
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"加多宝（听装）","price":5.0,"quantity":1,"id":571184455,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"橄榄菜豆角肉末","price":23.9,"quantity":1,"id":176993599,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b37933498618
参数2:B6204b36350138375
参数3:用户
参数4:0
参数5:商家待接单
参数6:胡文闯(先生)支付成功
参数7:胡文闯(先生)
参数8:2017-06-20 17:09:36
参数9:0
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:09:22
参数2:2017-06-20 17:09:22
参数3:303420
 
[INFO][2017-06-20 19:02:55] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b36350138375,0009-0527 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:09:22
参数2:2017-06-20 17:09:22
参数3:303420
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15623847585
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b36350138375
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:644
参数2:552
参数3:2
参数4:4.0
参数5:B6204b36350138375
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b37466173376
参数2:B6204b36350138375
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:55
参数9:0
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:55
参数4:服务不可用
参数5:B6204b37295427456
参数6:B6204b36350138375
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b37262020576
参数2:9
参数3:B6204b36350138375
参数4:6
参数5:71
参数6:加多宝（听装）
参数7:加多宝
参数8:0
参数9:null
参数10:2017-06-20 19:02:55
参数11:3.7993078
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b37587130260
参数17:9
参数18:B6204b36350138375
参数19:1
参数20:17
参数21:橄榄菜豆角肉末
参数22:橄榄菜豆角肉末
参数23:0
参数24:null
参数25:2017-06-20 19:02:55
参数26:18.160692
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18707195075
参数2:1
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b37295427456
参数2:B6204b36350138375
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:55
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:22104
参数3:1
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b37757835643
参数2:0
参数3:22104
参数4:0009-0528
参数5:饿了么
参数6:1209024985924953116
参数7:522
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:10:53
参数14:28.5
参数15:-8.0
参数16:0.92
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.5
参数22:21.58
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:11:17
参数31:杜宇(先生)
参数32:18707195075
参数33:曙光星城C区纺织路8号曙光星城c区9栋902
参数34:114.40278606
参数35:30.48230004
参数36:114.409345131293
参数37:30.488087671840653
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:55
参数66:2017-06-20 19:02:55
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"手撕鸡+雪花蛋酒+爱心荷包蛋","price":28.5,"quantity":1,"id":123877083,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b38728737207
参数2:B6204b37757835643
参数3:用户
参数4:0
参数5:商家待接单
参数6:杜宇(先生)支付成功
参数7:杜宇(先生)
参数8:2017-06-20 17:11:17
参数9:0
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:10:53
参数2:2017-06-20 17:10:53
参数3:22104
 
[INFO][2017-06-20 19:02:56] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b37757835643,0009-0528 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:10:53
参数2:2017-06-20 17:10:53
参数3:22104
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18707195075
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:943
参数2:808
参数3:2
参数4:4.0
参数5:B6204b37757835643
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:56
参数4:服务不可用
参数5:B6204b38835550438
参数6:B6204b37757835643
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15629146036
参数2:1
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b37757835643
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b38855319083
参数2:B6204b37757835643
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:56
参数9:0
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b38835550438
参数2:B6204b37757835643
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:56
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b38103353184
参数2:9
参数3:B6204b37757835643
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-20 19:02:56
参数11:16.580772
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b38435235386
参数17:9
参数18:B6204b37757835643
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-20 19:02:56
参数26:2.9162164
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b38934884874
参数32:9
参数33:B6204b37757835643
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-20 19:02:56
参数41:2.0830116
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:221068
参数3:1
 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b38709526530
参数2:0
参数3:221068
参数4:0009-0529
参数5:饿了么
参数6:1209025037867356188
参数7:523
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:11:20
参数14:28.5
参数15:-8.0
参数16:0.92
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.5
参数22:21.58
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:11:23
参数31:娄
参数32:15629146036
参数33:武汉纺织大学南湖校区学生公寓一区纺织路与经纬四路交叉口北100米
参数34:114.40061934
参数35:30.48478939
参数36:114.40717240664014
参数37:30.490609520393328
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:56
参数66:2017-06-20 19:02:56
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"手撕鸡+雪花蛋酒+爱心荷包蛋","price":28.5,"quantity":1,"id":123877083,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b39533799250
参数2:B6204b38709526530
参数3:用户
参数4:0
参数5:商家待接单
参数6:娄支付成功
参数7:娄
参数8:2017-06-20 17:11:23
参数9:0
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:11:20
参数2:2017-06-20 17:11:20
参数3:221068
 
[INFO][2017-06-20 19:02:57] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b38709526530,0009-0529 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:11:20
参数2:2017-06-20 17:11:20
参数3:221068
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15629146036
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b38709526530
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1125
参数2:964
参数3:3
参数4:5.0
参数5:B6204b38709526530
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b39253054847
参数2:B6204b38709526530
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:57
参数9:0
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:57
参数4:服务不可用
参数5:B6204b39950731481
参数6:B6204b38709526530
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13163334243
参数2:1
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b39950731481
参数2:B6204b38709526530
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:57
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b39192717075
参数2:9
参数3:B6204b38709526530
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-20 19:02:57
参数11:16.580772
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b39830185724
参数17:9
参数18:B6204b38709526530
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-20 19:02:57
参数26:2.9162164
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b39933376634
参数32:9
参数33:B6204b38709526530
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-20 19:02:57
参数41:2.0830116
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:220567
参数3:1
 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b3a502373876
参数2:0
参数3:220567
参数4:0009-0530
参数5:饿了么
参数6:1209025048428432412
参数7:524
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:11:41
参数14:23.279999
参数15:-6.0
参数16:0.66
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:7.28
参数22:16.62
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:11:59
参数31:常泰(先生)
参数32:13163334243
参数33:武汉纺织大学(南湖校区)学生宿舍一区门口 1栋113
参数34:114.40034978
参数35:30.48420064
参数36:114.40690116531607
参数37:30.490024748621977
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:58
参数66:2017-06-20 19:02:58
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"另加筷子三件套装","price":0.38,"quantity":1,"id":148461928,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b3a987745648
参数2:B6204b3a502373876
参数3:用户
参数4:0
参数5:商家待接单
参数6:常泰(先生)支付成功
参数7:常泰(先生)
参数8:2017-06-20 17:11:59
参数9:0
 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:11:41
参数2:2017-06-20 17:11:41
参数3:220567
 
[INFO][2017-06-20 19:02:58] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b3a502373876,0009-0530 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:11:41
参数2:2017-06-20 17:11:41
参数3:220567
 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13163334243
 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b3a502373876
 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b3a646326844
参数2:B6204b3a502373876
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:02:58
参数9:0
 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1052
参数2:901
参数3:3
参数4:5.0
参数5:B6204b3a502373876
 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:02:58
参数4:服务不可用
参数5:B6204b3a299376645
参数6:B6204b3a502373876
 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b3a934643662
参数2:9
参数3:B6204b3a502373876
参数4:9
参数5:99
参数6:另加筷子三件套装
参数7:筷子三件套装
参数8:0
参数9:null
参数10:2017-06-20 19:02:58
参数11:0.2712887
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b3a698021888
参数17:9
参数18:B6204b3a502373876
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:02:58
参数26:16.348713
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b3a299376645
参数2:B6204b3a502373876
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:02:58
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15891993567
参数2:1
 
[INFO][2017-06-20 19:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:66175
参数3:1
 
[INFO][2017-06-20 19:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b3b465311140
参数2:0
参数3:66175
参数4:0009-0531
参数5:饿了么
参数6:1209025118532170780
参数7:525
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:12:29
参数14:28.5
参数15:-8.0
参数16:0.92
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.5
参数22:21.58
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:12:31
参数31:夏铭珠(女士)
参数32:15891993567
参数33:中南民族大学北区学生公寓当代学生公寓4a
参数34:114.39562188
参数35:30.49450493
参数36:114.40216172810163
参数37:30.500408908775704
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:02:59
参数66:2017-06-20 19:02:59
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"手撕鸡+雪花蛋酒+爱心荷包蛋","price":28.5,"quantity":1,"id":123877083,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b3b417854043
参数2:B6204b3b465311140
参数3:用户
参数4:0
参数5:商家待接单
参数6:夏铭珠(女士)支付成功
参数7:夏铭珠(女士)
参数8:2017-06-20 17:12:31
参数9:0
 
[INFO][2017-06-20 19:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:02:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:12:29
参数2:2017-06-20 17:12:29
参数3:66175
 
[INFO][2017-06-20 19:03:00] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b3b465311140,0009-0531 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15891993567
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:12:29
参数2:2017-06-20 17:12:29
参数3:66175
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b3b465311140
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-20' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-20
参数2:2017-06-20
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1667
参数2:1428
参数3:4
参数4:6.0
参数5:B6204b3b465311140
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078a093790481
参数2:B6204b3b465311140
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:03:00
参数9:0
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:03:00
参数4:服务不可用
参数5:B6204b3b170450421
参数6:B6204b3b465311140
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18607234123
参数2:1
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b3b170450421
参数2:B6204b3b465311140
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:03:00
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62078a099645821
参数2:9
参数3:B6204b3b465311140
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-20 19:03:00
参数11:16.580772
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62078a507440804
参数17:9
参数18:B6204b3b465311140
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-20 19:03:00
参数26:2.9162164
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62078a405890003
参数32:9
参数33:B6204b3b465311140
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-20 19:03:00
参数41:2.0830116
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:276112
参数3:1
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:13:03
参数2:null
参数3:0
参数4:2017-06-20 17:13:03
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:276112
参数18:1
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078a624126267
参数2:0
参数3:276112
参数4:0009-0532
参数5:饿了么
参数6:1209025171581808668
参数7:526
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:12:53
参数14:24.9
参数15:-1.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:13:03
参数31:汤文静(女士)
参数32:18607234123
参数33:丽岛漫城光谷大道46 5栋1单元605
参数34:114.42025043
参数35:30.49306937
参数36:114.42685411723919
参数37:30.498729394262547
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:00
参数66:2017-06-20 19:03:00
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"番茄炒鸡蛋-大份","price":19.9,"quantity":1,"id":560271173,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078a593466614
参数2:B62078a624126267
参数3:用户
参数4:0
参数5:商家待接单
参数6:汤文静(女士)支付成功
参数7:汤文静(女士)
参数8:2017-06-20 17:13:03
参数9:0
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:12:53
参数2:2017-06-20 17:12:53
参数3:276112
 
[INFO][2017-06-20 19:03:01] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62078a624126267,0009-0532 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:12:53
参数2:2017-06-20 17:12:53
参数3:276112
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18607234123
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62078a624126267
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62078b358057443
参数2:B62078a624126267
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:03:01
参数9:0
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2399
参数2:2056
参数3:5
参数4:7.0
参数5:B62078a624126267
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:03:01
参数4:服务不可用
参数5:B62078b684842836
参数6:B62078a624126267
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078b347108213
参数2:9
参数3:B62078a624126267
参数4:2
参数5:123
参数6:香滑蒸鸡蛋
参数7:香滑蒸鸡蛋
参数8:0
参数9:null
参数10:2017-06-20 19:03:01
参数11:3.6465862
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62078b876655812
参数17:9
参数18:B62078a624126267
参数19:1
参数20:7
参数21:番茄炒鸡蛋-大份
参数22:番茄炒鸡蛋
参数23:0
参数24:null
参数25:2017-06-20 19:03:01
参数26:14.513413
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15857579462
参数2:1
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078b684842836
参数2:B62078a624126267
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:03:01
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15857579462
参数2:菜大师用户
参数3:2017-06-20 17:13:48
参数4:2017-06-20 17:13:48
参数5:1
参数6:1
参数7:0.0
参数8:30.47339,114.38144021
参数9:2017-06-20 17:13:48
参数10:2017-06-20 17:13:48
参数11:0
参数12:2017-06-20 17:13:48
参数13:2017-06-20 17:13:48
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15857579462
参数2:1
 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:13:48
参数2:null
参数3:0
参数4:2017-06-20 17:13:48
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303421
参数18:1
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078b961547603
参数2:0
参数3:303421
参数4:0009-0533
参数5:饿了么
参数6:1209025256608730140
参数7:527
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:13:39
参数14:39.3
参数15:-6.0
参数16:1.41
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:20.3
参数22:30.89
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:13:48
参数31:马逸蝶(女士)
参数32:15857579462
参数33:中南财经政法大学南湖校区环湖公寓4号楼中南大道与济世路交叉口西南150米 4号楼
参数34:114.38144021
参数35:30.47339
参数36:114.38789403844997
参数37:30.47953694965244
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:01
参数66:2017-06-20 19:03:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078c986275325
参数2:B62078b961547603
参数3:用户
参数4:0
参数5:商家待接单
参数6:马逸蝶(女士)支付成功
参数7:马逸蝶(女士)
参数8:2017-06-20 17:13:48
参数9:0
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:13:39
参数2:2017-06-20 17:13:39
参数3:303421
 
[INFO][2017-06-20 19:03:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62078b961547603,0009-0533 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:13:39
参数2:2017-06-20 17:13:39
参数3:303421
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15857579462
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62078b961547603
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078c619466536
参数2:B62078b961547603
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:03:02
参数9:0
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:3411
参数2:2923
参数3:7
参数4:9.0
参数5:B62078b961547603
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:03:02
参数4:服务不可用
参数5:B62078c207112718
参数6:B62078b961547603
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62078c207112718
参数2:B62078b961547603
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:03:02
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B62078c763320782
参数2:9
参数3:B62078b961547603
参数4:1
参数5:117
参数6:青豆米鸡丁
参数7:青豆米鸡丁
参数8:0
参数9:null
参数10:2017-06-20 19:03:02
参数11:15.6415
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62078c256296785
参数17:9
参数18:B62078b961547603
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-20 19:03:02
参数26:1.9650127
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62078c575739043
参数32:9
参数33:B62078b961547603
参数34:1
参数35:24
参数36:小炒土豆片
参数37:小炒土豆片
参数38:0
参数39:null
参数40:2017-06-20 19:03:02
参数41:13.283485
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17786416621
参数2:1
 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:162197
参数3:1
 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078d816327870
参数2:0
参数3:162197
参数4:0009-0534
参数5:饿了么
参数6:1209025264024125468
参数7:528
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:13:55
参数14:26.699999
参数15:-8.0
参数16:0.83
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:8.7
参数22:19.87
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:13:57
参数31:出奕欣
参数32:17786416621
参数33:中南民族大学南区11栋311
参数34:114.39089214
参数35:30.48267706
参数36:114.39739911021582
参数37:30.488661754925417
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:03
参数66:2017-06-20 19:03:03
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪碧（听装）","price":3.8,"quantity":1,"id":157948394,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078d384047425
参数2:B62078d816327870
参数3:用户
参数4:0
参数5:商家待接单
参数6:出奕欣支付成功
参数7:出奕欣
参数8:2017-06-20 17:13:57
参数9:0
 
[INFO][2017-06-20 19:03:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62078d816327870,0009-0534 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:13:55
参数2:2017-06-20 17:13:55
参数3:162197
 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:17786416621
 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1645
参数2:1410
参数3:4
参数4:6.0
参数5:B62078d816327870
 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:13:55
参数2:2017-06-20 17:13:55
参数3:162197
 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18726630613
参数2:1
 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62078d482042184
参数2:9
参数3:B62078d816327870
参数4:6
参数5:74
参数6:雪碧（听装）
参数7:雪碧（听装）
参数8:0
参数9:null
参数10:2017-06-20 19:03:03
参数11:2.8279402
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62078d398074443
参数17:9
参数18:B62078d816327870
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:03:03
参数26:17.04206
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:03:04
参数4:服务不可用
参数5:B62078d092478573
参数6:B62078d816327870
 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078d092478573
参数2:B62078d816327870
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:03:04
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:243628
参数3:1
 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62078d816327870
 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62078e217851663
参数2:B62078d816327870
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:03:04
参数9:0
 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078e700584014
参数2:0
参数3:243628
参数4:0009-0535
参数5:饿了么
参数6:1209025378461418524
参数7:529
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:14:18
参数14:23.279999
参数15:-6.0
参数16:0.66
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:7.28
参数22:16.62
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:14:33
参数31:王栋 先生
参数32:18726630613
参数33:中南民族大学南区22栋621
参数34:114.39313
参数35:30.4871
参数36:114.39965194223466
参数37:30.4930458798909
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:04
参数66:2017-06-20 19:03:04
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"另加筷子三件套装","price":0.38,"quantity":1,"id":148461928,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078e225418702
参数2:B62078e700584014
参数3:用户
参数4:0
参数5:商家待接单
参数6:王栋 先生支付成功
参数7:王栋 先生
参数8:2017-06-20 17:14:33
参数9:0
 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:14:18
参数2:2017-06-20 17:14:18
参数3:243628
 
[INFO][2017-06-20 19:03:04] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62078e700584014,0009-0535 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:14:18
参数2:2017-06-20 17:14:18
参数3:243628
 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18726630613
 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1049
参数2:899
参数3:3
参数4:5.0
参数5:B62078e700584014
 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:03:05
参数4:服务不可用
参数5:B62078e147893647
参数6:B62078e700584014
 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15527460977
参数2:1
 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078e571294357
参数2:9
参数3:B62078e700584014
参数4:9
参数5:99
参数6:另加筷子三件套装
参数7:筷子三件套装
参数8:0
参数9:null
参数10:2017-06-20 19:03:04
参数11:0.2712887
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62078f901919202
参数17:9
参数18:B62078e700584014
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-20 19:03:05
参数26:16.348713
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62078e147893647
参数2:B62078e700584014
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:03:05
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62078e700584014
 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078f473071651
参数2:B62078e700584014
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:03:05
参数9:0
 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:33314
参数3:1
 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078f720206358
参数2:0
参数3:33314
参数4:0009-0536
参数5:饿了么
参数6:1209025302754398236
参数7:530
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:14:23
参数14:23.4
参数15:-1.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:12.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:14:36
参数31:胡(女士)
参数32:15527460977
参数33:曙光新村新竹路 曙光新城A区2栋2单元1702
参数34:114.40303065
参数35:30.48856996
参数36:114.4095967087151
参数37:30.494355777944136
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:05
参数66:2017-06-20 19:03:05
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"花菜炒豆腐-大份","price":20.9,"quantity":1,"id":143649298,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078f658504502
参数2:B62078f720206358
参数3:用户
参数4:0
参数5:商家待接单
参数6:胡(女士)支付成功
参数7:胡(女士)
参数8:2017-06-20 17:14:36
参数9:0
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:14:23
参数2:2017-06-20 17:14:23
参数3:33314
 
[INFO][2017-06-20 19:03:06] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62078f720206358,0009-0536 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:14:23
参数2:2017-06-20 17:14:23
参数3:33314
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15527460977
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62078f720206358
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:花菜炒豆腐-大份
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620790720162260
参数2:B62078f720206358
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:03:06
参数9:0
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:214
参数2:183
参数3:1
参数4:3.0
参数5:B62078f720206358
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:03:06
参数4:服务不可用
参数5:B62078f821234554
参数6:B62078f720206358
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15527057307
参数2:1
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62078f821234554
参数2:B62078f720206358
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:03:06
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:47862
参数3:1
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B620790569312336
参数2:9
参数3:B62078f720206358
参数4:1
参数5:10
参数6:花菜炒豆腐-大份
参数7:花菜炒豆腐
参数8:0
参数9:null
参数10:2017-06-20 19:03:06
参数11:14.942606
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620790600748110
参数17:9
参数18:B62078f720206358
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-20 19:03:06
参数26:1.7873931
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620790697971837
参数2:0
参数3:47862
参数4:0009-0537
参数5:饿了么
参数6:1209025444177817628
参数7:531
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:14:53
参数14:23.4
参数15:-6.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:7.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:14:55
参数31:王子航(先生)
参数32:15527057307
参数33:武汉纺织大学(南湖校区)学生公寓二区武汉纺织大学二区6栋214
参数34:114.39986967
参数35:30.48651002
参数36:114.40642131862877
参数37:30.492342174055874
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:06
参数66:2017-06-20 19:03:06
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"香酥鸡柳","price":20.9,"quantity":1,"id":560222731,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620790187009045
参数2:B620790697971837
参数3:用户
参数4:0
参数5:商家待接单
参数6:王子航(先生)支付成功
参数7:王子航(先生)
参数8:2017-06-20 17:14:55
参数9:0
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:14:53
参数2:2017-06-20 17:14:53
参数3:47862
 
[INFO][2017-06-20 19:03:07] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B620790697971837,0009-0537 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:14:53
参数2:2017-06-20 17:14:53
参数3:47862
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15527057307
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B620790697971837
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620791466131337
参数2:B620790697971837
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:03:07
参数9:0
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1428
参数2:1224
参数3:3
参数4:5.0
参数5:B620790697971837
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15586514330
参数2:1
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:03:07
参数4:服务不可用
参数5:B620791306169743
参数6:B620790697971837
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620791133860338
参数2:9
参数3:B620790697971837
参数4:1
参数5:127
参数6:香酥鸡柳
参数7:香酥鸡柳
参数8:0
参数9:null
参数10:2017-06-20 19:03:07
参数11:14.942606
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620791569513323
参数17:9
参数18:B620790697971837
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-20 19:03:07
参数26:1.7873931
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620791306169743
参数2:B620790697971837
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:03:07
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:39554
参数3:1
 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620791804214064
参数2:0
参数3:39554
参数4:0009-0538
参数5:饿了么
参数6:1209025419959905308
参数7:532
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:14:56
参数14:23.4
参数15:-6.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:7.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:15:11
参数31:李政(先生)
参数32:15586514330
参数33:中南民族大学民族大道182号学生宿舍2栋
参数34:114.39306607
参数35:30.48273708
参数36:114.3995834481616
参数37:30.488682958187034
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:07
参数66:2017-06-20 19:03:07
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620792384955560
参数2:B620791804214064
参数3:用户
参数4:0
参数5:商家待接单
参数6:李政(先生)支付成功
参数7:李政(先生)
参数8:2017-06-20 17:15:11
参数9:0
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:14:56
参数2:2017-06-20 17:14:56
参数3:39554
 
[INFO][2017-06-20 19:03:08] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B620791804214064,0009-0538 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:14:56
参数2:2017-06-20 17:14:56
参数3:39554
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15586514330
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:03:08
参数4:服务不可用
参数5:B620792719885416
参数6:B620791804214064
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15623266975
参数2:1
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620792275513753
参数2:9
参数3:B620791804214064
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-20 19:03:08
参数11:1.7873931
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620792808562287
参数17:9
参数18:B620791804214064
参数19:1
参数20:3
参数21:农家小炒肉-份
参数22:农家小炒肉
参数23:0
参数24:null
参数25:2017-06-20 19:03:08
参数26:14.942606
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620792719885416
参数2:B620791804214064
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:03:08
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15623266975
参数2:菜大师用户
参数3:2017-06-20 17:15:24
参数4:2017-06-20 17:15:24
参数5:1
参数6:1
参数7:0.0
参数8:30.46920039,114.40923057
参数9:2017-06-20 17:15:24
参数10:2017-06-20 17:15:24
参数11:0
参数12:2017-06-20 17:15:24
参数13:2017-06-20 17:15:24
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1534
参数2:1314
参数3:4
参数4:6.0
参数5:B620791804214064
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15623266975
参数2:1
 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:15:24
参数2:null
参数3:0
参数4:2017-06-20 17:15:24
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303422
参数18:1
 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620793412132182
参数2:0
参数3:303422
参数4:0009-0539
参数5:饿了么
参数6:1209025459562633244
参数7:533
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:15:22
参数14:23.699999
参数15:-6.0
参数16:0.68
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:7.7
参数22:17.02
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:15:24
参数31:余欣玮(先生)
参数32:15623266975
参数33:武汉华夏理工学院七号宿舍楼
参数34:114.40923057
参数35:30.46920039
参数36:114.41579747065646
参数37:30.47490754141175
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:09
参数66:2017-06-20 19:03:09
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"百事可乐（听装）","price":3.8,"quantity":1,"id":157948150,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620793864799570
参数2:B620793412132182
参数3:用户
参数4:0
参数5:商家待接单
参数6:余欣玮(先生)支付成功
参数7:余欣玮(先生)
参数8:2017-06-20 17:15:24
参数9:0
 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:15:22
参数2:2017-06-20 17:15:22
参数3:303422
 
[INFO][2017-06-20 19:03:09] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B620793412132182,0009-0539 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:15:22
参数2:2017-06-20 17:15:22
参数3:303422
 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15623266975
 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B620793412132182
 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B620793157725836
参数2:B620793412132182
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:03:09
参数9:0
 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2957
参数2:2534
参数3:6
参数4:8.0
参数5:B620793412132182
 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:03:09
参数4:服务不可用
参数5:B620793586841436
参数6:B620793412132182
 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B620793526408321
参数2:9
参数3:B620793412132182
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-20 19:03:09
参数11:14.291056
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B620793968685633
参数17:9
参数18:B620793412132182
参数19:6
参数20:73
参数21:百事可乐（听装）
参数22:百事可乐（听装）
参数23:0
参数24:null
参数25:2017-06-20 19:03:09
参数26:2.7289453
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B620793586841436
参数2:B620793412132182
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:03:09
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:03:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15629160292
参数2:1
 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:29720
参数3:1
 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b72154963575
参数2:0
参数3:29720
参数4:0009-0540
参数5:饿了么
参数6:1209025540495852572
参数7:534
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:15:33
参数14:23.4
参数15:-6.0
参数16:0.72
参数17:4.0
参数18:3.0
参数19:16.0
参数20:0.0
参数21:8.4
参数22:17.68
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:15:36
参数31:殷(先生)
参数32:15629160292
参数33:武汉纺织大学(南湖校区)鲁巷纺织路一号 2区6栋
参数34:114.39988039
参数35:30.48681043
参数36:114.40643236937503
参数37:30.492642492731452
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:14
参数66:2017-06-20 19:03:14
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"米饭","price":1.0,"quantity":1,"id":92440355,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"番茄炒鸡蛋-大份","price":19.9,"quantity":1,"id":560271173,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b72294922073
参数2:B6204b72154963575
参数3:用户
参数4:0
参数5:商家待接单
参数6:殷(先生)支付成功
参数7:殷(先生)
参数8:2017-06-20 17:15:36
参数9:0
 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:15:33
参数2:2017-06-20 17:15:33
参数3:29720
 
[INFO][2017-06-20 19:03:14] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b72154963575,0009-0540 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:15:33
参数2:2017-06-20 17:15:33
参数3:29720
 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15629160292
 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1459
参数2:1250
参数3:3
参数4:5.0
参数5:B6204b72154963575
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13635801747
参数2:1
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:03:14
参数4:服务不可用
参数5:B6204b72340612827
参数6:B6204b72154963575
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b72340612827
参数2:B6204b72154963575
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:03:14
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b72474045478
参数2:9
参数3:B6204b72154963575
参数4:3
参数5:50
参数6:米饭
参数7:金枪鱼沙拉
参数8:0
参数9:null
参数10:2017-06-20 19:03:14
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b72722815672
参数17:9
参数18:B6204b72154963575
参数19:1
参数20:7
参数21:番茄炒鸡蛋-大份
参数22:番茄炒鸡蛋
参数23:0
参数24:null
参数25:2017-06-20 19:03:14
参数26:15.035556
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b73441033881
参数32:9
参数33:B6204b72154963575
参数34:5
参数35:38
参数36:荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-20 19:03:15
参数41:1.888889
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:107061
参数3:1
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b73980447323
参数2:0
参数3:107061
参数4:0009-0541
参数5:饿了么
参数6:1209025467875659804
参数7:535
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:15:38
参数14:26.5
参数15:-6.0
参数16:0.82
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.5
参数22:19.68
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:15:47
参数31:张铭(先生)
参数32:13635801747
参数33:光谷青年城-2栋1526号
参数34:114.40240033
参数35:30.49102955
参数36:114.40896618604673
参数37:30.496824854382094
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:15
参数66:2017-06-20 19:03:15
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉+荷包蛋+雪花蛋酒","price":26.5,"quantity":1,"id":621318334,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b73452417160
参数2:B6204b73980447323
参数3:用户
参数4:0
参数5:商家待接单
参数6:张铭(先生)支付成功
参数7:张铭(先生)
参数8:2017-06-20 17:15:47
参数9:0
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:15:38
参数2:2017-06-20 17:15:38
参数3:107061
 
[INFO][2017-06-20 19:03:15] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6204b73980447323,0009-0541 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13635801747
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-20 17:15:38
参数2:2017-06-20 17:15:38
参数3:107061
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6204b73980447323
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b73008866346
参数2:B6204b73980447323
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:03:15
参数9:0
 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:534
参数2:457
参数3:2
参数4:4.0
参数5:B6204b73980447323
 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-20 19:03:16
参数4:服务不可用
参数5:B6204b73929144313
参数6:B6204b73980447323
 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18986009664
参数2:1
 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b73929144313
参数2:B6204b73980447323
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:03:16
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18986009664
参数2:菜大师用户
参数3:2017-06-20 17:16:47
参数4:2017-06-20 17:16:47
参数5:1
参数6:1
参数7:0.0
参数8:30.49211995,114.40205986
参数9:2017-06-20 17:16:47
参数10:2017-06-20 17:16:47
参数11:0
参数12:2017-06-20 17:16:47
参数13:2017-06-20 17:16:47
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b74380459822
参数2:9
参数3:B6204b73980447323
参数4:1
参数5:3
参数6:农家小炒肉
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-20 19:03:16
参数11:14.937831
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b74728765418
参数17:9
参数18:B6204b73980447323
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-20 19:03:16
参数26:1.9759037
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b74100746035
参数32:9
参数33:B6204b73980447323
参数34:2
参数35:47
参数36:雪花蛋酒
参数37:雪花蛋酒
参数38:0
参数39:null
参数40:2017-06-20 19:03:16
参数41:2.7662652
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18986009664
参数2:1
 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:16:47
参数2:null
参数3:0
参数4:2017-06-20 17:16:47
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303423
参数18:1
 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b74467598657
参数2:0
参数3:303423
参数4:0009-0542
参数5:饿了么
参数6:1209025619407513628
参数7:536
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:16:26
参数14:61.699997
参数15:-10.0
参数16:2.38
参数17:4.0
参数18:6.0
参数19:29.0
参数20:0.0
参数21:32.7
参数22:49.32
参数23:20.0
参数24:9.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:16:47
参数31:梁志超(先生)
参数32:18986009664
参数33:光谷青年城新竹路 5栋1605
参数34:114.40205986
参数35:30.49211995
参数36:114.40862531708581
参数37:30.497920402854074
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:16
参数66:2017-06-20 19:03:16
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"水煮肉片","price":24.9,"quantity":1,"id":180150417,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"番茄炒鸡蛋-大份","price":19.9,"quantity":1,"id":560271173,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b74003436871
参数2:B6204b74467598657
参数3:用户
参数4:0
参数5:商家待接单
参数6:梁志超(先生)支付成功
参数7:梁志超(先生)
参数8:2017-06-20 17:16:47
参数9:0
 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:16:26
参数2:2017-06-20 17:16:26
参数3:303423
 
[INFO][2017-06-20 19:03:17] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b74467598657,0009-0542 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:16:26
参数2:2017-06-20 17:16:26
参数3:303423
 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18986009664
 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6204b74467598657
 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6204b75152841005
参数2:B6204b74467598657
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-20 19:03:17
参数9:0
 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1077
参数2:923
参数3:3
参数4:5.0
参数5:B6204b74467598657
 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-20 19:03:17
参数4:服务不可用
参数5:B6204b75522301637
参数6:B6204b74467598657
 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18186470278
参数2:1
 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b75522301637
参数2:B6204b74467598657
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-20 19:03:17
参数8:0
参数9:0.0
 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6204b75315486567
参数2:9
参数3:B6204b74467598657
参数4:1
参数5:88
参数6:水煮肉片
参数7:水煮肉片
参数8:0
参数9:null
参数10:2017-06-20 19:03:17
参数11:19.903858
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6204b75216835555
参数17:9
参数18:B6204b74467598657
参数19:1
参数20:24
参数21:小炒土豆片
参数22:小炒土豆片
参数23:0
参数24:null
参数25:2017-06-20 19:03:17
参数26:13.509045
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6204b75456890472
参数32:9
参数33:B6204b74467598657
参数34:1
参数35:7
参数36:番茄炒鸡蛋-大份
参数37:番茄炒鸡蛋
参数38:0
参数39:null
参数40:2017-06-20 19:03:17
参数41:15.9071
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:158255
参数3:1
 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-20 19:03:17] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Tue Jun 20 18:50:11 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-06-20 19:03:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:18:53
参数2:null
参数3:0
参数4:2017-06-20 17:18:53
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:158255
参数18:1
 
[INFO][2017-06-20 19:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b75080880350
参数2:0
参数3:158255
参数4:0009-0543
参数5:饿了么
参数6:1209025810139188252
参数7:537
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:18:30
参数14:23.4
参数15:0.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:18:53
参数31:周丰秋
参数32:18186470278
参数33:湖北省武汉市洪山区关东街道曙光星城B区 1单元3栋404
参数34:114.403011
参数35:30.486047
参数36:114.40957461435087
参数37:30.491832461352466
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:17
参数66:2017-06-20 19:03:17
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香酥鸡柳","price":20.9,"quantity":1,"id":560222731,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b76962352204
参数2:B6204b75080880350
参数3:用户
参数4:0
参数5:商家待接单
参数6:周丰秋支付成功
参数7:周丰秋
参数8:2017-06-20 17:18:53
参数9:0
 
[INFO][2017-06-20 19:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13072725006
参数2:1
 
[INFO][2017-06-20 19:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:154935
参数3:1
 
[INFO][2017-06-20 19:03:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b76950673805
参数2:0
参数3:154935
参数4:0009-0544
参数5:饿了么
参数6:1209025895577222172
参数7:538
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:19:05
参数14:23.4
参数15:-6.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:7.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:19:25
参数31:在在(先生)
参数32:13072725006
参数33:清江山水62-2704室
参数34:114.40133013
参数35:30.47371052
参数36:114.40787498918357
参数37:30.479516985613838
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:18
参数66:2017-06-20 19:03:18
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b77127464555
参数2:B6204b76950673805
参数3:用户
参数4:0
参数5:商家待接单
参数6:在在(先生)支付成功
参数7:在在(先生)
参数8:2017-06-20 17:19:25
参数9:0
 
[INFO][2017-06-20 19:03:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15623564572
参数2:1
 
[INFO][2017-06-20 19:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:256171
参数3:1
 
[INFO][2017-06-20 19:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b78485995125
参数2:0
参数3:256171
参数4:0009-0545
参数5:饿了么
参数6:1209026100443999260
参数7:539
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:20:58
参数14:27.9
参数15:0.0
参数16:0.89
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:17.9
参数22:21.01
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:21:11
参数31:李 先生
参数32:15623564572
参数33:万科锦程雄楚大道1008号 8栋2503
参数34:114.40708
参数35:30.49721
参数36:114.41366649389988
参数37:30.50294640330423
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:20
参数66:2017-06-20 19:03:20
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b78217242362
参数2:B6204b78485995125
参数3:用户
参数4:0
参数5:商家待接单
参数6:李 先生支付成功
参数7:李 先生
参数8:2017-06-20 17:21:11
参数9:0
 
[INFO][2017-06-20 19:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15623693334
参数2:1
 
[INFO][2017-06-20 19:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15623693334
参数2:菜大师用户
参数3:2017-06-20 17:21:54
参数4:2017-06-20 17:21:54
参数5:1
参数6:1
参数7:0.0
参数8:30.49559064,114.39460047
参数9:2017-06-20 17:21:54
参数10:2017-06-20 17:21:54
参数11:0
参数12:2017-06-20 17:21:54
参数13:2017-06-20 17:21:54
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-20 19:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-20 19:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15623693334
参数2:1
 
[INFO][2017-06-20 19:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:21:54
参数2:null
参数3:0
参数4:2017-06-20 17:21:54
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303424
参数18:1
 
[INFO][2017-06-20 19:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b79185826032
参数2:0
参数3:303424
参数4:0009-0546
参数5:饿了么
参数6:1209026324864432156
参数7:540
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-20 17:21:51
参数14:24.699999
参数15:-6.0
参数16:0.73
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:8.7
参数22:17.97
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-20 17:21:54
参数31:王建立(先生)
参数32:15623693334
参数33:中南民族大学北区学生公寓学生宿舍4B4b
参数34:114.39460047
参数35:30.49559064
参数36:114.40113637572534
参数37:30.50151252468481
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-20 19:03:21
参数66:2017-06-20 19:03:21
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪碧（听装）","price":3.8,"quantity":1,"id":157948394,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-20 19:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-20 19:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6204b79931578312
参数2:B6204b79185826032
参数3:用户
参数4:0
参数5:商家待接单
参数6:王建立(先生)支付成功
参数7:王建立(先生)
参数8:2017-06-20 17:21:54
参数9:0
 
[INFO][2017-06-21 09:14:11] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-06-21 09:14:11] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Jun 21 09:14:11 CST 2017]; root of context hierarchy 
[INFO][2017-06-21 09:14:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-06-21 09:14:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-06-21 09:14:12] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-06-21 09:14:12] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-06-21 09:14:14] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-06-21 09:14:14] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 3091 ms 
[INFO][2017-06-21 09:14:14] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-06-21 09:14:14] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jun 21 09:14:14 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-06-21 09:14:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-06-21 09:14:16] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getSigna() 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 09:14:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 09:14:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jun 21 09:14:14 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-06-21 09:14:17] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-06-21 09:14:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-06-21 09:14:17] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51417-1498007657604-1:1,clientId=null,started=false} 
[INFO][2017-06-21 09:14:17] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://114.55.97.90:61616 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-06-21 09:14:18] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b75080880350,0009-0543 
[INFO][2017-06-21 09:14:18] org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:245) RMI TCP Connection(5)-127.0.0.1 No TaskScheduler/ScheduledExecutorService bean found for scheduled processing 
[INFO][2017-06-21 09:14:18] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3856 ms 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:18:30
参数2:2017-06-20 17:18:30
参数3:158255
 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:18:30
参数2:2017-06-20 17:18:30
参数3:158255
 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:香滑蒸鸡蛋
 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:25
 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18186470278
 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_prints
             


         WHERE stores_id = ? 
         
            ORDER BY print_id 
[INFO][2017-06-21 09:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:20:58
参数2:2017-06-20 17:20:58
参数3:256171
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:20:58
参数2:2017-06-20 17:20:58
参数3:256171
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:529
参数2:453
参数3:2
参数4:4.0
参数5:B6204b75080880350
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:新派手撕鸡
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:19:05
参数2:2017-06-20 17:19:05
参数3:154935
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:19:05
参数2:2017-06-20 17:19:05
参数3:154935
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1369
参数2:1173
参数3:3
参数4:5.0
参数5:B6204b78485995125
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211651a67786664
参数2:9
参数3:B6204b78485995125
参数4:2
参数5:123
参数6:香滑蒸鸡蛋
参数7:香滑蒸鸡蛋
参数8:0
参数9:null
参数10:2017-06-21 09:14:18
参数11:3.765233
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211651b46702360
参数17:9
参数18:B6204b78485995125
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-21 09:14:19
参数26:17.244768
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:21:51
参数2:2017-06-20 17:21:51
参数3:303424
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1993
参数2:1708
参数3:4
参数4:6.0
参数5:B6204b76950673805
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20 17:21:51
参数2:2017-06-20 17:21:51
参数3:303424
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:雪碧（听装）
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1783
参数2:1528
参数3:4
参数4:6.0
参数5:B6204b79185826032
 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:农家小炒肉-份
 
[INFO][2017-06-21 09:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 09:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211651b29505768
参数2:9
参数3:B6204b79185826032
参数4:6
参数5:74
参数6:雪碧（听装）
参数7:雪碧（听装）
参数8:0
参数9:null
参数10:2017-06-21 09:14:19
参数11:2.7646153
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211651c76134017
参数17:9
参数18:B6204b79185826032
参数19:1
参数20:3
参数21:农家小炒肉-份
参数22:农家小炒肉
参数23:0
参数24:null
参数25:2017-06-21 09:14:20
参数26:15.205384
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 09:14:20] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b78485995125,0009-0545 
[INFO][2017-06-21 09:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:荷包蛋
 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211651c45573385
参数2:9
参数3:B6204b76950673805
参数4:1
参数5:3
参数6:农家小炒肉-份
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-21 09:14:20
参数11:14.942606
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211651c08688886
参数17:9
参数18:B6204b76950673805
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-21 09:14:20
参数26:1.7873931
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:香酥鸡柳
 
[INFO][2017-06-21 09:14:21] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b76950673805,0009-0544 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211651d13347083
参数2:9
参数3:B6204b75080880350
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-21 09:14:21
参数11:1.7873931
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211651d18189174
参数17:9
参数18:B6204b75080880350
参数19:1
参数20:127
参数21:香酥鸡柳
参数22:香酥鸡柳
参数23:0
参数24:null
参数25:2017-06-21 09:14:21
参数26:14.942606
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:14:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:14:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:14:22] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6204b79185826032,0009-0546 
[INFO][2017-06-21 09:14:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:14:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:14:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:14:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:14:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 09:14:25
参数4:
参数5:B6211651a41014630
参数6:B6204b75080880350
 
[INFO][2017-06-21 09:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211651a41014630
参数2:B6204b75080880350
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 09:14:25
参数8:0
参数9:0.0
 
[INFO][2017-06-21 09:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 09:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15623564572
 
[INFO][2017-06-21 09:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:14:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 09:14:25
参数4:
参数5:B6211652134101336
参数6:B6204b78485995125
 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211652134101336
参数2:B6204b78485995125
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 09:14:25
参数8:0
参数9:0.0
 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13072725006
 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 09:14:26
参数4:
参数5:B6211652255571770
参数6:B6204b76950673805
 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211652255571770
参数2:B6204b76950673805
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 09:14:26
参数8:0
参数9:0.0
 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 09:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15623693334
 
[INFO][2017-06-21 09:14:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:14:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 09:14:27
参数4:
参数5:B6211652289477463
参数6:B6204b79185826032
 
[INFO][2017-06-21 09:14:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:14:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-20
参数2:2017-06-20
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:14:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:14:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211652289477463
参数2:B6204b79185826032
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 09:14:27
参数8:0
参数9:0.0
 
[INFO][2017-06-21 09:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:16:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:16:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:16:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:16:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 09:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-06-21 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:chenbin
 
[INFO][2017-06-21 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:351
参数2:1032
 
[INFO][2017-06-21 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:352
参数2:1032
 
[INFO][2017-06-21 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:353
参数2:1032
 
[INFO][2017-06-21 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:372
参数2:1032
 
[INFO][2017-06-21 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:354
参数2:1032
 
[INFO][2017-06-21 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:355
参数2:1032
 
[INFO][2017-06-21 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:356
参数2:1032
 
[INFO][2017-06-21 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-06-21 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-06-21 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-06-21 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:9
参数2:2017-06-21
参数3:2017-06-21
参数4:9
参数5:2017-06-21
参数6:2017-06-21
参数7:9
参数8:2017-06-21
参数9:2017-06-21
参数10:9
参数11:2017-06-21
参数12:2017-06-21
参数13:9
参数14:2017-06-21
参数15:2017-06-21
参数16:9
参数17:2017-06-21
参数18:2017-06-21
 
[INFO][2017-06-21 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-06-21 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2017-06-21
参数2:2017-06-21
参数3:9
参数4:2017-06-20
参数5:2017-06-20
参数6:9
参数7:2017-06-14
参数8:2017-06-14
参数9:9
 
[INFO][2017-06-21 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-06-21 09:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getPageRecord: 
select count(0) from (select * from  cds_brand)  tmp_count 
[INFO][2017-06-21 09:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-06-21 09:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getPageRecord: 
select tmp.* from (select (row_number() Over(order by brand_id asc)) as rownumber, * from  cds_brand) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-06-21 09:20:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-06-21 09:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-06-21 09:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-06-21 09:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-06-21 09:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-06-21 09:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-06-21 09:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-06-21 09:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:22:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:22:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:22:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:22:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:22:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:22:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 09:22:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 09:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:22:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 09:22:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:22:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-06-21 09:22:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:22:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-06-21 09:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-06-21 09:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-06-21 09:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-06-21 09:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:22:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-06-21 09:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:23:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-06-21 09:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-06-21 09:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-06-21 09:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-06-21 09:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-06-21 09:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:23:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-06-21 09:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-06-21 09:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-06-21 09:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-06-21 09:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-06-21 09:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:24:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-06-21 09:24:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:24:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-06-21 09:24:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:24:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-06-21 09:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-06-21 09:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-06-21 09:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-06-21 09:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-06-21 09:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-06-21 09:24:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:24:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-06-21 09:24:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:24:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-06-21 09:24:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:24:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-06-21 09:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-06-21 09:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-06-21 09:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:24:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-06-21 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 09:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 09:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:25
 
[INFO][2017-06-21 09:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 09:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:25:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 09:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:26:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:26:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-06-21 09:26:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:26:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-06-21 09:26:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:26:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-06-21 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-06-21 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-06-21 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-06-21 09:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 09:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 09:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 09:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15608659756
参数2:1
 
[INFO][2017-06-21 09:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15608659756
参数2:菜大师用户
参数3:2017-06-21 09:30:08
参数4:2017-06-21 09:30:08
参数5:1
参数6:1
参数7:0.0
参数8:30.48221983,114.39254992
参数9:2017-06-21 09:30:08
参数10:2017-06-21 09:30:08
参数11:0
参数12:2017-06-21 09:30:08
参数13:2017-06-21 09:30:08
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 09:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15608659756
参数2:1
 
[INFO][2017-06-21 09:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:30:08
参数2:null
参数3:0
参数4:2017-06-21 09:30:08
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303425
参数18:1
 
[INFO][2017-06-21 09:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNo: 
select top 1 convert(int,substring(order_no,6,4)) as order_no
            from cds_order_info
            where create_date >?
            and create_date < ? + ' 23:59:59'
            and stores_id=?
            and brand_id=?
            order by order_no desc 
[INFO][2017-06-21 09:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:9
参数4:1
 
[INFO][2017-06-21 09:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621246024694051
参数2:0
参数3:303425
参数4:0009-0001
参数5:饿了么
参数6:3008692916364362780
参数7:1
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 09:29:43
参数14:23.4
参数15:-1.9
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:11.5
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 09:30:08
参数31:邢荣(女士)
参数32:15608659756
参数33:中南民族大学民族大道182号 南区五栋宿舍楼
参数34:114.39254992
参数35:30.48221983
参数36:114.3990643342791
参数37:30.4881747443575
参数38:null
参数39:2017-06-21 10:45:42
参数40:10:45
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 09:31:02
参数66:2017-06-21 09:31:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 09:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621246087720883
参数2:B621246024694051
参数3:用户
参数4:0
参数5:商家待接单
参数6:邢荣(女士)支付成功
参数7:邢荣(女士)
参数8:2017-06-21 09:30:08
参数9:0
 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:29:43
参数2:2017-06-21 09:29:43
参数3:303425
 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:29:43
参数2:2017-06-21 09:29:43
参数3:303425
 
[INFO][2017-06-21 09:31:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:31:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15608659756
 
[INFO][2017-06-21 09:31:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:31:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 09:31:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621246024694051,0009-0001 
[INFO][2017-06-21 09:31:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:31:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://restapi.amap.com:80 
[WARN][2017-06-21 09:31:03] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-1 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendDistanceReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.jms.OrderSendDistanceReceiver.onMessage(OrderSendDistanceReceiver.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:荷包蛋
 
[WARN][2017-06-21 09:31:03] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-1 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.service.OrderService.sendDwdOrder(OrderService.java:294)
	at com.service.OrderService.sendDwdOrder(OrderService.java:268)
	at com.service.OrderService$$FastClassBySpringCGLIB$$58cf08d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:652)
	at com.service.OrderService$$EnhancerBySpringCGLIB$$b5fa618a.sendDwdOrder(<generated>)
	at com.jms.OrderSendReceiver.onMessage(OrderSendReceiver.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_prints
             


         WHERE stores_id = ? 
         
            ORDER BY print_id 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621246024694051
 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621246138270855
参数2:B621246024694051
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 09:31:03
参数9:0
 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:农家小炒肉-份
 
[INFO][2017-06-21 09:31:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:31:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:31:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:31:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:31:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:31:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 09:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621246131740400
参数2:9
参数3:B621246024694051
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-21 09:31:03
参数11:1.7873931
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621246179780157
参数17:9
参数18:B621246024694051
参数19:1
参数20:3
参数21:农家小炒肉-份
参数22:农家小炒肉
参数23:0
参数24:null
参数25:2017-06-21 09:31:03
参数26:14.942606
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 09:31:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:31:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:31:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:31:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:31:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:31:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:32:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:32:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:32:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:32:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:32:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:32:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 09:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 09:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 09:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15972947736
参数2:1
 
[INFO][2017-06-21 09:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:153140
参数3:1
 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621247d00351665
参数2:0
参数3:153140
参数4:0009-0002
参数5:饿了么
参数6:3008692964221416476
参数7:2
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 09:32:16
参数14:25.8
参数15:-8.0
参数16:0.89
参数17:4.0
参数18:4.0
参数19:16.0
参数20:0.0
参数21:9.8
参数22:20.91
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 09:32:19
参数31:黄先生(先生)
参数32:15972947736
参数33:清江山水软件园中路清江山水63栋 501室
参数34:114.40017996
参数35:30.47375
参数36:114.4067202023063
参数37:30.47957395196217
参数38:null
参数39:2017-06-21 10:45:16
参数40:10:45
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:2人用餐, 十点半尽量送到
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 09:34:01
参数66:2017-06-21 09:34:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"米饭","price":1.0,"quantity":2,"id":92440355,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"绿豆汤","price":3.9,"quantity":1,"id":126727061,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621247e54058768
参数2:B621247d00351665
参数3:用户
参数4:0
参数5:商家待接单
参数6:黄先生(先生)支付成功
参数7:黄先生(先生)
参数8:2017-06-21 09:32:19
参数9:0
 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 09:32:16
参数2:2017-06-21 09:32:16
参数3:153140
 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 09:32:16
参数2:2017-06-21 09:32:16
参数3:153140
 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15972947736
 
[INFO][2017-06-21 09:34:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621247d00351665,0009-0002 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:米饭
 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2108
参数2:1806
参数3:5
参数4:7.0
参数5:B621247d00351665
 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621247d00351665
 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621247e31712856
参数2:B621247d00351665
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 09:34:02
参数9:0
 
[INFO][2017-06-21 09:34:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: socket write error 
[INFO][2017-06-21 09:34:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:34:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:34:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:34:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:34:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:青豆米鸡丁
 
[INFO][2017-06-21 09:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 09:34:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:34:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:34:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:34:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:34:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:34:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:绿豆汤
 
[INFO][2017-06-21 09:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 09:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621247f38511527
参数2:9
参数3:B621247d00351665
参数4:3
参数5:50
参数6:米饭
参数7:金枪鱼沙拉
参数8:0
参数9:null
参数10:2017-06-21 09:34:03
参数11:0.0
参数12:2
参数13:0
参数14:0
参数15:1
参数16:B621247f66514628
参数17:9
参数18:B621247d00351665
参数19:1
参数20:117
参数21:青豆米鸡丁
参数22:青豆米鸡丁
参数23:0
参数24:null
参数25:2017-06-21 09:34:03
参数26:16.128256
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621247f71293437
参数32:9
参数33:B621247d00351665
参数34:2
参数35:46
参数36:绿豆汤
参数37:绿豆汤
参数38:0
参数39:null
参数40:2017-06-21 09:34:03
参数41:3.1608143
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 09:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 09:34:08
参数4:
参数5:B621247e08278352
参数6:B621247d00351665
 
[INFO][2017-06-21 09:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621247e08278352
参数2:B621247d00351665
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 09:34:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 09:34:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:34:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-06-21 09:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-06-21 09:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-06-21 09:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-06-21 09:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-06-21 09:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-06-21 09:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:35:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-06-21 09:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-06-21 09:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-06-21 09:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-06-21 09:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-06-21 09:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-06-21 09:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 09:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 09:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 09:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 09:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:25
 
[INFO][2017-06-21 09:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 09:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 09:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-06-21 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-06-21 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-06-21 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-06-21 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-06-21 09:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-06-21 09:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:38:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:38:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15390052052
参数2:1
 
[INFO][2017-06-21 09:38:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:38:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:156314
参数3:1
 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62124a620126883
参数2:0
参数3:156314
参数4:0009-0003
参数5:饿了么
参数6:3008692877902728220
参数7:3
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 09:34:18
参数14:27.199999
参数15:0.0
参数16:0.86
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:17.2
参数22:20.34
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 09:34:32
参数31:杨杰(先生)
参数32:15390052052
参数33:风度柏林三期光谷步行街 二单元一栋0503
参数34:114.40859003
参数35:30.50024
参数36:114.41518253736437
参数37:30.50596071892098
参数38:null
参数39:2017-06-21 10:45:18
参数40:10:45
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:1人用餐, 别敲门，到了打我电话。
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 09:38:02
参数66:2017-06-21 09:38:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"百事可乐（听装）","price":3.8,"quantity":1,"id":157948150,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62124a630157164
参数2:B62124a620126883
参数3:用户
参数4:0
参数5:商家待接单
参数6:杨杰(先生)支付成功
参数7:杨杰(先生)
参数8:2017-06-21 09:34:32
参数9:0
 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:34:18
参数2:2017-06-21 09:34:18
参数3:156314
 
[INFO][2017-06-21 09:38:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62124a620126883,0009-0003 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:34:18
参数2:2017-06-21 09:34:18
参数3:156314
 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15390052052
 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62124a620126883
 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2044
参数2:1752
参数3:5
参数4:7.0
参数5:B62124a620126883
 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62124a643940427
参数2:B62124a620126883
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 09:38:02
参数9:0
 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:百事可乐（听装）
 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62124a667732516
参数2:9
参数3:B62124a620126883
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-21 09:38:02
参数11:1.8694854
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62124a688581777
参数17:9
参数18:B62124a620126883
参数19:1
参数20:3
参数21:农家小炒肉-份
参数22:农家小炒肉
参数23:0
参数24:null
参数25:2017-06-21 09:38:02
参数26:15.628898
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62124a716092701
参数32:9
参数33:B62124a620126883
参数34:6
参数35:73
参数36:百事可乐（听装）
参数37:百事可乐（听装）
参数38:0
参数39:null
参数40:2017-06-21 09:38:03
参数41:2.8416178
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 09:38:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Connection reset by peer: socket write error 
[INFO][2017-06-21 09:38:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:38:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:38:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-06-21 09:38:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:38:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-06-21 09:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 09:38:08
参数4:
参数5:B62124a691729862
参数6:B62124a620126883
 
[INFO][2017-06-21 09:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62124a691729862
参数2:B62124a620126883
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 09:38:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 09:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:39:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:39:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-06-21 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-06-21 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-06-21 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-06-21 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-06-21 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-06-21 09:40:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:40:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:40:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:40:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:40:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:40:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 09:40:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:40:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 09:40:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:40:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-06-21 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-06-21 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-06-21 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-06-21 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-06-21 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:40:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-06-21 09:40:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:40:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-06-21 09:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-06-21 09:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-06-21 09:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-06-21 09:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-06-21 09:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:40:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-06-21 09:40:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:40:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-06-21 09:40:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:40:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-06-21 09:40:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:40:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-06-21 09:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-06-21 09:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-06-21 09:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-06-21 09:40:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:40:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-06-21 09:40:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:40:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-06-21 09:40:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:40:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-06-21 09:40:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:40:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-06-21 09:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-06-21 09:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-06-21 09:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-06-21 09:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-06-21 09:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-06-21 09:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-06-21 09:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-06-21 09:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-06-21 09:40:57] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) http-nio-8001-exec-4 Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
[INFO][2017-06-21 09:40:58] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:127) http-nio-8001-exec-4 SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
[WARN][2017-06-21 09:40:58] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 该连接已关闭。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_ptstores_manage.xml]
### The error may involve cds_ptstores_manage.GetStoresTree
### The error occurred while executing a query
### SQL: select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a                left join cds_brand b on a.brand_id=b.brand_id                left join cds_stores c on a.stores_id=c.stores_id                where a.brand_id = ?
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 该连接已关闭。
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; 该连接已关闭。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 该连接已关闭。 
[INFO][2017-06-21 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:41:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:41:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-06-21 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-06-21 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-06-21 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-06-21 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-06-21 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-06-21 09:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-06-21 09:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 09:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-06-21 09:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 09:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-06-21 09:41:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:41:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-06-21 09:41:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 09:41:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-06-21 09:41:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 09:41:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-06-21 09:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 09:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 09:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 09:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:46:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18510640803
参数2:1
 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:40254
参数3:1
 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62124f608136151
参数2:0
参数3:40254
参数4:0009-0004
参数5:饿了么
参数6:3008693010551673884
参数7:4
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 09:42:19
参数14:25.4
参数15:0.0
参数16:0.77
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:15.4
参数22:18.63
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 09:42:22
参数31:贾李(先生)
参数32:18510640803
参数33:光谷软件园-F区南湖大道光谷软件园F3栋16楼
参数34:114.40872213
参数35:30.47866096
参数36:114.41529672780231
参数37:30.48437549567399
参数38:null
参数39:2017-06-21 11:15:19
参数40:11:15
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 09:46:02
参数66:2017-06-21 09:46:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62124f653928125
参数2:B62124f608136151
参数3:用户
参数4:0
参数5:商家待接单
参数6:贾李(先生)支付成功
参数7:贾李(先生)
参数8:2017-06-21 09:42:22
参数9:0
 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 09:42:19
参数2:2017-06-21 09:42:19
参数3:40254
 
[INFO][2017-06-21 09:46:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62124f608136151,0009-0004 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 09:42:19
参数2:2017-06-21 09:42:19
参数3:40254
 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_prints
             


         WHERE stores_id = ? 
         
            ORDER BY print_id 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 09:46:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:25
 
[INFO][2017-06-21 09:46:02] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:46:02] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 09:46:02] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:46:02] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:新派手撕鸡
 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18510640803
 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {}->http://restapi.amap.com:80 
[WARN][2017-06-21 09:46:03] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-2 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendDistanceReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.jms.OrderSendDistanceReceiver.onMessage(OrderSendDistanceReceiver.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[WARN][2017-06-21 09:46:03] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-2 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.service.OrderService.sendDwdOrder(OrderService.java:294)
	at com.service.OrderService.sendDwdOrder(OrderService.java:268)
	at com.service.OrderService$$FastClassBySpringCGLIB$$58cf08d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:652)
	at com.service.OrderService$$EnhancerBySpringCGLIB$$b5fa618a.sendDwdOrder(<generated>)
	at com.jms.OrderSendReceiver.onMessage(OrderSendReceiver.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62124f608136151
 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:荷包蛋
 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62124f741322753
参数2:B62124f608136151
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 09:46:03
参数9:0
 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 09:46:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 09:46:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62124f799933705
参数2:9
参数3:B62124f608136151
参数4:1
参数5:129
参数6:新派手撕鸡
参数7:新派手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 09:46:03
参数11:16.796337
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62124f788317663
参数17:9
参数18:B62124f608136151
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-21 09:46:03
参数26:1.8336613
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 09:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 09:48:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:48:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 09:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 09:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827301178
参数2:1
 
[INFO][2017-06-21 09:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827301178
参数2:菜大师用户
参数3:2017-06-21 09:48:14
参数4:2017-06-21 09:48:14
参数5:1
参数6:1
参数7:0.0
参数8:30.480709,114.41983
参数9:2017-06-21 09:48:14
参数10:2017-06-21 09:48:14
参数11:0
参数12:2017-06-21 09:48:14
参数13:2017-06-21 09:48:14
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 09:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827301178
参数2:1
 
[INFO][2017-06-21 09:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:48:14
参数2:null
参数3:0
参数4:null
参数5:null
参数6:0
参数7:2017-06-21 09:48:14
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303426
参数18:1
 
[INFO][2017-06-21 09:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621253149655305
参数2:0
参数3:303426
参数4:0009-0005
参数5:美团
参数6:10274160139574958
参数7:1
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 09:48:14
参数14:26.5
参数15:0.0
参数16:1.0
参数17:4.0
参数18:2.0
参数19:22.0
参数20:0.0
参数21:10.5
参数22:20.0
参数23:11.0
参数24:11.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 09:48:14
参数31:吴(先生)
参数32:15827301178
参数33:光谷总部国际 (6栋5楼东)
参数34:114.41983
参数35:30.480709
参数36:114.42642215526796
参数37:30.486365945047186
参数38:null
参数39:2017-06-21 11:30:00
参数40:11:30
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 09:52:01
参数66:2017-06-21 09:52:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"农家小炒肉+荷包蛋+雪花蛋酒","price":26.5,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 09:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621253111090017
参数2:B621253149655305
参数3:用户
参数4:0
参数5:商家待接单
参数6:吴(先生)支付成功
参数7:吴(先生)
参数8:2017-06-21 09:48:14
参数9:0
 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:48:14
参数2:2017-06-21 09:48:14
参数3:303426
 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621253149655305
 
[INFO][2017-06-21 09:52:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621253149655305,0009-0005 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:48:14
参数2:2017-06-21 09:48:14
参数3:303426
 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15827301178
 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621253264961225
参数2:B621253149655305
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 09:52:02
参数9:0
 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:农家小炒肉
 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2983
参数2:2556
参数3:6
参数4:8.0
参数5:B621253149655305
 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:雪花蛋酒
 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 09:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 09:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 09:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621253278147601
参数2:9
参数3:B621253149655305
参数4:1
参数5:3
参数6:农家小炒肉
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-21 09:52:02
参数11:15.180722
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621253218163235
参数17:9
参数18:B621253149655305
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-21 09:52:02
参数26:2.0080323
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621253283934643
参数32:9
参数33:B621253149655305
参数34:2
参数35:47
参数36:雪花蛋酒
参数37:雪花蛋酒
参数38:0
参数39:null
参数40:2017-06-21 09:52:02
参数41:2.811245
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B621253323589758
参数47:9
参数48:B621253149655305
参数49:0
参数50:0
参数51:满18.0元赠哈尔滨冰纯白啤330ml*1
参数52:null
参数53:0
参数54:null
参数55:2017-06-21 09:52:03
参数56:0.0
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-21 09:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 09:52:07
参数4:
参数5:B621253179757180
参数6:B621253149655305
 
[INFO][2017-06-21 09:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621253179757180
参数2:B621253149655305
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 09:52:07
参数8:0
参数9:0.0
 
[INFO][2017-06-21 09:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 09:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17607169631
参数2:1
 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:215633
参数3:1
 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621255947327844
参数2:0
参数3:215633
参数4:0009-0006
参数5:美团
参数6:10274161852241721
参数7:2
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 09:53:07
参数14:30.0
参数15:4.0
参数16:1.0
参数17:4.0
参数18:2.0
参数19:12.0
参数20:0.0
参数21:20.0
参数22:23.0
参数23:11.0
参数24:1.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 09:53:07
参数31:?????(先生)
参数32:17607169631
参数33:紫菘・枫林上城 (12栋1单元打电话)
参数34:114.399657
参数35:30.495598
参数36:114.40621539910727
参数37:30.501435520663247
参数38:null
参数39:2017-06-21 10:50:00
参数40:10:50
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 09:56:01
参数66:2017-06-21 09:56:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"农家小炒肉+荷包蛋+雪花蛋酒","price":26.5,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621255967321403
参数2:B621255947327844
参数3:用户
参数4:0
参数5:商家待接单
参数6:?????(先生)支付成功
参数7:?????(先生)
参数8:2017-06-21 09:53:07
参数9:0
 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 09:53:07
参数2:2017-06-21 09:53:07
参数3:215633
 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621255947327844
 
[INFO][2017-06-21 09:56:01] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621255947327844,0009-0006 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 09:53:07
参数2:2017-06-21 09:53:07
参数3:215633
 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:17607169631
 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621255904598105
参数2:B621255947327844
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 09:56:01
参数9:0
 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:56:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1507
参数2:1291
参数3:4
参数4:6.0
参数5:B621255947327844
 
[INFO][2017-06-21 09:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 09:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 09:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 09:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 09:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 09:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621255964297881
参数2:9
参数3:B621255947327844
参数4:1
参数5:3
参数6:农家小炒肉
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-21 09:56:01
参数11:15.421083
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621255a04872545
参数17:9
参数18:B621255947327844
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-21 09:56:02
参数26:2.039826
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621255a04803385
参数32:9
参数33:B621255947327844
参数34:2
参数35:47
参数36:雪花蛋酒
参数37:雪花蛋酒
参数38:0
参数39:null
参数40:2017-06-21 09:56:02
参数41:2.8557563
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B621255a31758484
参数47:9
参数48:B621255947327844
参数49:2
参数50:47
参数51:雪花蛋酒
参数52:雪花蛋酒
参数53:0
参数54:null
参数55:2017-06-21 09:56:02
参数56:2.6833334
参数57:1
参数58:0
参数59:0
参数60:1
参数61:B621255a94167286
参数62:9
参数63:B621255947327844
参数64:0
参数65:0
参数66:满18.0元赠哈尔滨冰纯白啤330ml*1
参数67:null
参数68:0
参数69:null
参数70:2017-06-21 09:56:02
参数71:0.0
参数72:1
参数73:0
参数74:0
参数75:1
 
[INFO][2017-06-21 09:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 09:56:07
参数4:
参数5:B621255950290248
参数6:B621255947327844
 
[INFO][2017-06-21 09:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621255950290248
参数2:B621255947327844
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 09:56:07
参数8:0
参数9:0.0
 
[INFO][2017-06-21 09:56:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:56:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 09:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 09:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 09:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 09:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 09:57:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:57:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18086538539
参数2:1
 
[INFO][2017-06-21 09:57:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 09:57:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:32263
参数3:1
 
[INFO][2017-06-21 09:57:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:57:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621256307958212
参数2:0
参数3:32263
参数4:0009-0007
参数5:饿了么
参数6:3008693063643274268
参数7:5
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 09:55:16
参数14:23.8
参数15:0.0
参数16:0.69
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.8
参数22:17.11
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 09:55:25
参数31:高(女士)
参数32:18086538539
参数33:中南财经政法大学(南湖校区)文沛楼（东二门车队旁边，临湖公寓前面那栋楼）
参数34:114.39064806
参数35:30.47158596
参数36:114.39714291982808
参数37:30.477572122223684
参数38:null
参数39:2017-06-21 11:30:15
参数40:11:30
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 09:57:01
参数66:2017-06-21 09:57:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"绿豆汤","price":3.9,"quantity":1,"id":126727061,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 09:57:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:57:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621256388929823
参数2:B621256307958212
参数3:用户
参数4:0
参数5:商家待接单
参数6:高(女士)支付成功
参数7:高(女士)
参数8:2017-06-21 09:55:25
参数9:0
 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:55:16
参数2:2017-06-21 09:55:16
参数3:32263
 
[INFO][2017-06-21 09:57:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621256307958212,0009-0007 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:55:16
参数2:2017-06-21 09:55:16
参数3:32263
 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18086538539
 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:肉末鱼香茄条
 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621256307958212
 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_prints
             


         WHERE stores_id = ? 
         
            ORDER BY print_id 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2830
参数2:2425
参数3:6
参数4:8.0
参数5:B621256307958212
 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621256460444236
参数2:B621256307958212
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 09:57:02
参数9:0
 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:25
 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 09:57:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:绿豆汤
 
[INFO][2017-06-21 09:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 09:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621256414146845
参数2:9
参数3:B621256307958212
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-21 09:57:02
参数11:14.306261
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621256493718535
参数17:9
参数18:B621256307958212
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 09:57:02
参数26:2.8037398
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 09:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 09:57:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 09:57:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 09:57:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 09:57:07
参数4:
参数5:B621256480160833
参数6:B621256307958212
 
[INFO][2017-06-21 09:57:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 09:57:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621256480160833
参数2:B621256307958212
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 09:57:07
参数8:0
参数9:0.0
 
[INFO][2017-06-21 09:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 09:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 09:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 09:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 09:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:00:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:00:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:00:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:00:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:00:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:00:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:00:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:00:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15811533099
参数2:1
 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15811533099
参数2:菜大师用户
参数3:2017-06-21 09:58:28
参数4:2017-06-21 09:58:28
参数5:1
参数6:1
参数7:0.0
参数8:30.49541,114.417304
参数9:2017-06-21 09:58:28
参数10:2017-06-21 09:58:28
参数11:0
参数12:2017-06-21 09:58:28
参数13:2017-06-21 09:58:28
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15811533099
参数2:1
 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:58:28
参数2:null
参数3:0
参数4:null
参数5:null
参数6:0
参数7:2017-06-21 09:58:28
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303427
参数18:1
 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6213e968075721
参数2:0
参数3:303427
参数4:0009-0008
参数5:美团
参数6:10274161496376674
参数7:3
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 09:58:28
参数14:28.5
参数15:0.0
参数16:1.0
参数17:4.0
参数18:2.0
参数19:12.0
参数20:0.0
参数21:22.5
参数22:22.0
参数23:11.0
参数24:1.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 09:58:28
参数31:谭(女士)
参数32:15811533099
参数33:长航・蓝晶国际 (7栋601)
参数34:114.417304
参数35:30.49541
参数36:114.4239085310185
参数37:30.50107388166144
参数38:null
参数39:2017-06-21 12:10:00
参数40:12:10
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:00:01
参数66:2017-06-21 10:00:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"手撕鸡+雪花蛋酒+爱心荷包蛋","price":28.5,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6213e909742410
参数2:B6213e968075721
参数3:用户
参数4:0
参数5:商家待接单
参数6:谭(女士)支付成功
参数7:谭(女士)
参数8:2017-06-21 09:58:28
参数9:0
 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 09:58:28
参数2:2017-06-21 09:58:28
参数3:303427
 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6213e968075721
 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 09:58:28
参数2:2017-06-21 09:58:28
参数3:303427
 
[INFO][2017-06-21 10:00:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6213e968075721,0009-0008 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15811533099
 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6213e960912011
参数2:B6213e968075721
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:00:01
参数9:0
 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:手撕鸡
 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2345
参数2:2010
参数3:5
参数4:7.0
参数5:B6213e968075721
 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:爱心荷包蛋
 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6213ea55425673
参数2:9
参数3:B6213e968075721
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:00:02
参数11:16.903475
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6213ea39781240
参数17:9
参数18:B6213e968075721
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-21 10:00:02
参数26:2.972973
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6213ea51554818
参数32:9
参数33:B6213e968075721
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-21 10:00:02
参数41:2.123552
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B6213eb65527310
参数47:9
参数48:B6213e968075721
参数49:0
参数50:0
参数51:满18.0元赠哈尔滨冰纯白啤330ml*1
参数52:null
参数53:0
参数54:null
参数55:2017-06-21 10:00:03
参数56:0.0
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-21 10:00:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:00:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:00:07
参数4:
参数5:B6213e962691644
参数6:B6213e968075721
 
[INFO][2017-06-21 10:00:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:00:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6213e962691644
参数2:B6213e968075721
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:00:07
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:01:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15377260577
参数2:1
 
[INFO][2017-06-21 10:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:01:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:87942
参数3:1
 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6213f309279462
参数2:0
参数3:87942
参数4:0009-0009
参数5:饿了么
参数6:3008692984354037788
参数7:6
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 09:58:07
参数14:20.9
参数15:-3.5
参数16:1.14
参数17:4.0
参数18:2.0
参数19:0.0
参数20:0.0
参数21:23.4
参数22:25.76
参数23:0.0
参数24:0.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 09:58:09
参数31:罗重玖(先生)
参数32:15377260577
参数33:光谷・理想城七栋1单元504
参数34:114.41671008
参数35:30.47240806
参数36:114.4232926620043
参数37:30.47806789728714
参数38:null
参数39:2017-06-21 11:00:06
参数40:11:00
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:1人用餐, 骑手把餐送到的时候请不要敲门，打我手机我会出来拿
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:01:01
参数66:2017-06-21 10:01:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6213f465396214
参数2:B6213f309279462
参数3:用户
参数4:0
参数5:商家待接单
参数6:罗重玖(先生)支付成功
参数7:罗重玖(先生)
参数8:2017-06-21 09:58:09
参数9:0
 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:58:07
参数2:2017-06-21 09:58:07
参数3:87942
 
[INFO][2017-06-21 10:01:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6213f309279462,0009-0009 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 09:58:07
参数2:2017-06-21 09:58:07
参数3:87942
 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15377260577
 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6213f309279462
 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:农家小炒肉-份
 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:3188
参数2:2732
参数3:7
参数4:9.0
参数5:B6213f309279462
 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6213f458515707
参数2:B6213f309279462
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:01:02
参数9:0
 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6213f494603827
参数2:9
参数3:B6213f309279462
参数4:1
参数5:3
参数6:农家小炒肉-份
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-21 10:01:02
参数11:25.76
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:01:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13349914642
参数2:1
 
[INFO][2017-06-21 10:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13349914642
参数2:菜大师用户
参数3:2017-06-21 10:00:26
参数4:2017-06-21 10:00:26
参数5:1
参数6:1
参数7:0.0
参数8:30.48710204,114.39313011
参数9:2017-06-21 10:00:26
参数10:2017-06-21 10:00:26
参数11:0
参数12:2017-06-21 10:00:26
参数13:2017-06-21 10:00:26
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13349914642
参数2:1
 
[INFO][2017-06-21 10:01:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Connection reset by peer: socket write error 
[INFO][2017-06-21 10:01:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:01:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:01:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:01:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:01:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:00:26
参数2:null
参数3:0
参数4:2017-06-21 10:00:26
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303428
参数18:1
 
[INFO][2017-06-21 10:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:01:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6213f502149876
参数2:0
参数3:303428
参数4:0009-0010
参数5:饿了么
参数6:3008692947427429404
参数7:7
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:00:14
参数14:28.5
参数15:-8.0
参数16:0.92
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.5
参数22:21.58
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:00:26
参数31:唐宗伟(先生)
参数32:13349914642
参数33:中南民族大学南区学生宿舍1栋107
参数34:114.39313011
参数35:30.48710204
参数36:114.39965205467854
参数37:30.493047918453435
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:01:03
参数66:2017-06-21 10:01:03
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"手撕鸡+绿豆汤+荷包蛋","price":28.5,"quantity":1,"id":126723271,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[ERROR][2017-06-21 10:01:03] org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:525) DefaultMessageListenerContainer-1 Application exception overridden by rollback exception 
org.springframework.dao.DataAccessResourceFailureException: 
### Error updating database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
### The error may involve baseSqlMap.insertRecord-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO cds_order_info(                        order_id          ,              user_id          ,              member_id          ,              order_no          ,              fromin          ,              order_desc          ,              fromin_no          ,              fromin_id          ,              fromin_name          ,              order_type          ,              bookdinner          ,              desk_no          ,              create_date          ,              goods_prcie          ,              uc_price          ,              serviceFee          ,              ship_fee          ,              box_price          ,              deduction_price          ,              vip_deduction_price          ,              total_price          ,              income          ,              shop_part          ,              platform_part          ,              out_ship_fee          ,              message_price          ,              uc_id          ,              pay_type_id          ,              pay_type_name          ,              pay_time          ,              receiver_name          ,              receiver_phone          ,              receiver_adress          ,              receiver_lng          ,              receiver_lat          ,              baidu_lng          ,              baidu_lat          ,              receiver_sex          ,              service_time          ,              service_time_str          ,              order_status          ,              back_status          ,              task_order_code          ,              task_order_name          ,              task_order_phone          ,              task_order_time          ,              pack_user_id          ,              pack_user_name          ,              pack_user_phone          ,              pack_user_time          ,              task_user_id          ,              task_user_code          ,              task_user_name          ,              task_user_phone          ,              task_user_time          ,              task_time          ,              member_desc          ,              stores_id          ,              transaction_id          ,              is_sync          ,              send_name          ,              send_time          ,              isstoresprint          ,              print_time          ,              in_time          ,              updatetime          ,              battch_isdo          ,              pack_exception_time          ,              send_exception          ,              send_exception_time          ,              send_id          ,              service_exception_time          ,              goods          ,              cancel_type          ,              cancel_remark          ,              distance          ,              duration          ,              kilometre          ,              send_price          ,              brand_id                   ) VALUES(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?                   )
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
; SQL []; Software caused connection abort: recv failed; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:105)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:71)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:365)
	at com.sun.proxy.$Proxy9.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:237)
	at com.framework.dao.SqlDaoImpl.insertRecord(SqlDaoImpl.java:242)
	at com.service.OrderService.createOrder(OrderService.java:64)
	at com.service.OrderService$$FastClassBySpringCGLIB$$58cf08d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.service.OrderService$$EnhancerBySpringCGLIB$$b5fa618a.createOrder(<generated>)
	at com.jms.BudanOrderIncreased.elem_increased(BudanOrderIncreased.java:206)
	at com.jms.BudanOrderIncreased.onMessage(BudanOrderIncreased.java:88)
	at sun.reflect.GeneratedMethodAccessor236.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.read(IOBuffer.java:1789)
	at com.microsoft.sqlserver.jdbc.TDSReader.readPacket(IOBuffer.java:4838)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6150)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:402)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:350)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:180)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:155)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.execute(SQLServerPreparedStatement.java:332)
	at org.apache.tomcat.dbcp.dbcp2.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:197)
	at org.apache.tomcat.dbcp.dbcp2.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:197)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:41)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:66)
	at sun.reflect.GeneratedMethodAccessor170.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy45.update(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:45)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:75)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:134)
	at sun.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:355)
	... 32 more
[INFO][2017-06-21 10:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-21 10:01:08
参数4:服务不可用
参数5:B6213f421072227
参数6:B6213f309279462
 
[INFO][2017-06-21 10:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6213f421072227
参数2:B6213f309279462
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-21 10:01:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:03:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:05:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:05:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13349914642
参数2:1
 
[INFO][2017-06-21 10:05:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:05:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:303428
参数3:1
 
[INFO][2017-06-21 10:05:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62141b79328575
参数2:0
参数3:303428
参数4:0009-0010
参数5:饿了么
参数6:3008692947427429404
参数7:7
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:00:14
参数14:28.5
参数15:-8.0
参数16:0.92
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.5
参数22:21.58
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:00:26
参数31:唐宗伟(先生)
参数32:13349914642
参数33:中南民族大学南区学生宿舍1栋107
参数34:114.39313011
参数35:30.48710204
参数36:114.39965205467854
参数37:30.493047918453435
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:05:01
参数66:2017-06-21 10:05:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"手撕鸡+绿豆汤+荷包蛋","price":28.5,"quantity":1,"id":126723271,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:05:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62141b12522356
参数2:B62141b79328575
参数3:用户
参数4:0
参数5:商家待接单
参数6:唐宗伟(先生)支付成功
参数7:唐宗伟(先生)
参数8:2017-06-21 10:00:26
参数9:0
 
[INFO][2017-06-21 10:05:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:05:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:00:14
参数2:2017-06-21 10:00:14
参数3:303428
 
[INFO][2017-06-21 10:05:01] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62141b79328575,0009-0010 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13349914642
 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:00:14
参数2:2017-06-21 10:00:14
参数3:303428
 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62141b79328575
 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1049
参数2:899
参数3:3
参数4:5.0
参数5:B62141b79328575
 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62141c37163157
参数2:B62141b79328575
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:05:02
参数9:0
 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:荷包蛋
 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18872211175
参数2:1
 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:303258
参数3:1
 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62141c93883268
参数2:9
参数3:B62141b79328575
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:05:02
参数11:16.328594
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62141c61176824
参数17:9
参数18:B62141b79328575
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 10:05:02
参数26:3.200076
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62141c54894302
参数32:9
参数33:B62141b79328575
参数34:5
参数35:38
参数36:荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-21 10:05:02
参数41:2.051331
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:05:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62141c03986523
参数2:0
参数3:303258
参数4:0009-0011
参数5:饿了么
参数6:3008693031749754908
参数7:8
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:03:26
参数14:26.5
参数15:-5.0
参数16:0.82
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:11.5
参数22:19.68
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:03:29
参数31:杨澜(女士)
参数32:18872211175
参数33:光谷软件园F1栋3楼
参数34:114.40683989
参数35:30.47841
参数36:114.41340885625493
参数37:30.484144659468416
参数38:null
参数39:2017-06-21 11:45:26
参数40:11:45
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:05:02
参数66:2017-06-21 10:05:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉+荷包蛋+雪花蛋酒","price":26.5,"quantity":1,"id":621318334,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62141d18459183
参数2:B62141c03986523
参数3:用户
参数4:0
参数5:商家待接单
参数6:杨澜(女士)支付成功
参数7:杨澜(女士)
参数8:2017-06-21 10:03:29
参数9:0
 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:03:26
参数2:2017-06-21 10:03:26
参数3:303258
 
[INFO][2017-06-21 10:05:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62141c03986523,0009-0011 
[INFO][2017-06-21 10:05:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 10:05:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:03:26
参数2:2017-06-21 10:03:26
参数3:303258
 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18872211175
 
[INFO][2017-06-21 10:05:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://restapi.amap.com:80 
[WARN][2017-06-21 10:05:03] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-1 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendDistanceReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.jms.OrderSendDistanceReceiver.onMessage(OrderSendDistanceReceiver.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:农家小炒肉
 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62141c03986523
 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62141d01489651
参数2:B62141c03986523
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:05:03
参数9:0
 
[WARN][2017-06-21 10:05:03] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-1 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.service.OrderService.sendDwdOrder(OrderService.java:294)
	at com.service.OrderService.sendDwdOrder(OrderService.java:268)
	at com.service.OrderService$$FastClassBySpringCGLIB$$58cf08d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:652)
	at com.service.OrderService$$EnhancerBySpringCGLIB$$b5fa618a.sendDwdOrder(<generated>)
	at com.jms.OrderSendReceiver.onMessage(OrderSendReceiver.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18857564314
参数2:1
 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:雪花蛋酒
 
[INFO][2017-06-21 10:05:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18857564314
参数2:菜大师用户
参数3:2017-06-21 10:03:43
参数4:2017-06-21 10:03:43
参数5:1
参数6:1
参数7:0.0
参数8:30.47897008,114.38702004
参数9:2017-06-21 10:03:43
参数10:2017-06-21 10:03:43
参数11:0
参数12:2017-06-21 10:03:43
参数13:2017-06-21 10:03:43
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:05:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18857564314
参数2:1
 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:03:43
参数2:null
参数3:0
参数4:2017-06-21 10:03:43
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303429
参数18:1
 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62141d53138017
参数2:9
参数3:B62141c03986523
参数4:1
参数5:3
参数6:农家小炒肉
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-21 10:05:03
参数11:14.937831
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62141e09589253
参数17:9
参数18:B62141c03986523
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-21 10:05:04
参数26:1.9759037
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62141e01454242
参数32:9
参数33:B62141c03986523
参数34:2
参数35:47
参数36:雪花蛋酒
参数37:雪花蛋酒
参数38:0
参数39:null
参数40:2017-06-21 10:05:04
参数41:2.7662652
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62141e62175022
参数2:0
参数3:303429
参数4:0009-0012
参数5:饿了么
参数6:3008692992188891164
参数7:9
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:03:28
参数14:48.4
参数15:-4.7
参数16:1.67
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:26.7
参数22:35.73
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:03:43
参数31:朱(先生)
参数32:18857564314
参数33:南湖・时尚城光谷南湖大道茶山刘 南湖.时尚城K1栋k119 Obar屋（派乐汉堡隔壁）
参数34:114.38702004
参数35:30.47897008
参数36:114.3935047892112
参数37:30.48502312898447
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:05:04
参数66:2017-06-21 10:05:04
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"手撕鸡+绿豆汤+荷包蛋","price":28.5,"quantity":1,"id":126723271,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62141e28700230
参数2:B62141e62175022
参数3:用户
参数4:0
参数5:商家待接单
参数6:朱(先生)支付成功
参数7:朱(先生)
参数8:2017-06-21 10:03:43
参数9:0
 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:03:28
参数2:2017-06-21 10:03:28
参数3:303429
 
[INFO][2017-06-21 10:05:04] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62141e62175022,0009-0012 
[INFO][2017-06-21 10:05:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:03:28
参数2:2017-06-21 10:03:28
参数3:303429
 
[INFO][2017-06-21 10:05:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 10:05:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:青豆米鸡丁
 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62141e62175022
 
[WARN][2017-06-21 10:05:04] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-2 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendDistanceReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.jms.OrderSendDistanceReceiver.onMessage(OrderSendDistanceReceiver.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62141e20340146
参数2:B62141e62175022
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:05:04
参数9:0
 
[INFO][2017-06-21 10:05:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13277936816
参数2:1
 
[INFO][2017-06-21 10:05:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:132004
参数3:1
 
[INFO][2017-06-21 10:05:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62141f23225534
参数2:9
参数3:B62141e62175022
参数4:1
参数5:117
参数6:青豆米鸡丁
参数7:青豆米鸡丁
参数8:0
参数9:null
参数10:2017-06-21 10:05:05
参数11:14.69064
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62141f84454857
参数17:9
参数18:B62141e62175022
参数19:1
参数20:4
参数21:手撕鸡
参数22:手撕鸡
参数23:0
参数24:null
参数25:2017-06-21 10:05:05
参数26:15.919517
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62141f10793660
参数32:9
参数33:B62141e62175022
参数34:2
参数35:46
参数36:绿豆汤
参数37:绿豆汤
参数38:0
参数39:null
参数40:2017-06-21 10:05:05
参数41:3.1199052
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B62141f63766742
参数47:9
参数48:B62141e62175022
参数49:5
参数50:38
参数51:荷包蛋
参数52:荷包蛋
参数53:0
参数54:null
参数55:2017-06-21 10:05:05
参数56:1.9999393
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62141f64702621
参数2:0
参数3:132004
参数4:0009-0013
参数5:饿了么
参数6:3008693033259530268
参数7:10
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:04:26
参数14:29.4
参数15:-8.0
参数16:0.97
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:11.4
参数22:22.43
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:04:28
参数31:程卓(先生)
参数32:13277936816
参数33:武汉工程大学邮电与信息工程学院雄楚大街693武汉工程大学内 7栋533
参数34:114.38985966
参数35:30.49967967
参数36:114.39637555908105
参数37:30.50568661007804
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:05:05
参数66:2017-06-21 10:05:05
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":108171986,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62141f06715515
参数2:B62141f64702621
参数3:用户
参数4:0
参数5:商家待接单
参数6:程卓(先生)支付成功
参数7:程卓(先生)
参数8:2017-06-21 10:04:28
参数9:0
 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:04:26
参数2:2017-06-21 10:04:26
参数3:132004
 
[INFO][2017-06-21 10:05:06] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62141f64702621,0009-0013 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:04:26
参数2:2017-06-21 10:04:26
参数3:132004
 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13277936816
 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[WARN][2017-06-21 10:05:06] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-1 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendDistanceReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.jms.OrderSendDistanceReceiver.onMessage(OrderSendDistanceReceiver.java:64)
	at sun.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[WARN][2017-06-21 10:05:06] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-1 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.service.OrderService.sendDwdOrder(OrderService.java:294)
	at com.service.OrderService.sendDwdOrder(OrderService.java:268)
	at com.service.OrderService$$FastClassBySpringCGLIB$$58cf08d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:652)
	at com.service.OrderService$$EnhancerBySpringCGLIB$$b5fa618a.sendDwdOrder(<generated>)
	at com.jms.OrderSendReceiver.onMessage(OrderSendReceiver.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:香滑蒸鸡蛋
 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62142096029333
参数2:9
参数3:B62141f64702621
参数4:2
参数5:47
参数6:雪花蛋酒
参数7:雪花蛋酒
参数8:0
参数9:null
参数10:2017-06-21 10:05:06
参数11:2.6702383
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62142076087150
参数17:9
参数18:B62141f64702621
参数19:2
参数20:123
参数21:香滑蒸鸡蛋
参数22:香滑蒸鸡蛋
参数23:0
参数24:null
参数25:2017-06-21 10:05:06
参数26:3.814626
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62142012111864
参数32:9
参数33:B62141f64702621
参数34:1
参数35:3
参数36:农家小炒肉-份
参数37:农家小炒肉
参数38:0
参数39:null
参数40:2017-06-21 10:05:06
参数41:15.945137
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:05:06] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:05:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:05:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62141f64702621
 
[INFO][2017-06-21 10:05:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62142105270153
参数2:B62141f64702621
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:05:07
参数9:0
 
[INFO][2017-06-21 10:05:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:05:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-21 10:05:07
参数4:服务不可用
参数5:B62141b02195858
参数6:B62141b79328575
 
[INFO][2017-06-21 10:05:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62141b02195858
参数2:B62141b79328575
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-21 10:05:07
参数8:0
参数9:0.0
 
[WARN][2017-06-21 10:05:07] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-2 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: 
### Error updating database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
### The error may involve baseSqlMap.insertRecord-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO cds_order_send_log(                        send_id          ,              order_id          ,              send_type          ,              opt_type          ,              opt_note          ,              opt_name          ,              opt_time          ,              opt_id          ,              send_price                   ) VALUES(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?                   )
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
; SQL []; Software caused connection abort: recv failed; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.dao.DataAccessResourceFailureException: 
### Error updating database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
### The error may involve baseSqlMap.insertRecord-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO cds_order_send_log(                        send_id          ,              order_id          ,              send_type          ,              opt_type          ,              opt_note          ,              opt_name          ,              opt_time          ,              opt_id          ,              send_price                   ) VALUES(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?                   )
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
; SQL []; Software caused connection abort: recv failed; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:105)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:71)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:365)
	at com.sun.proxy.$Proxy9.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:237)
	at com.framework.dao.SqlDaoImpl.insertRecord(SqlDaoImpl.java:242)
	at com.service.OrderService.sendDwdOrder(OrderService.java:315)
	at com.service.OrderService.sendDwdOrder(OrderService.java:268)
	at com.service.OrderService$$FastClassBySpringCGLIB$$58cf08d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:652)
	at com.service.OrderService$$EnhancerBySpringCGLIB$$b5fa618a.sendDwdOrder(<generated>)
	at com.jms.OrderSendReceiver.onMessage(OrderSendReceiver.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.read(IOBuffer.java:1789)
	at com.microsoft.sqlserver.jdbc.TDSReader.readPacket(IOBuffer.java:4838)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6150)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:402)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:350)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:180)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:155)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.execute(SQLServerPreparedStatement.java:332)
	at org.apache.tomcat.dbcp.dbcp2.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:197)
	at org.apache.tomcat.dbcp.dbcp2.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:197)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:41)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:66)
	at sun.reflect.GeneratedMethodAccessor170.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy45.update(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:45)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:75)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:134)
	at sun.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:355)
	... 27 more
[INFO][2017-06-21 10:05:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:05:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18857564314
 
[INFO][2017-06-21 10:05:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:05:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:05:08
参数4:
参数5:B62142111444732
参数6:B62141e62175022
 
[INFO][2017-06-21 10:05:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:05:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62142111444732
参数2:B62141e62175022
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:05:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:06:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:06:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:06:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:06:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:08:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:08:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:08:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:08:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:08:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 10:08:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 10:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13006306016
参数2:1
 
[INFO][2017-06-21 10:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:08:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:299065
参数3:1
 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62143910086570
参数2:0
参数3:299065
参数4:0009-0014
参数5:饿了么
参数6:3008693079220868124
参数7:11
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:06:34
参数14:36.8
参数15:-8.0
参数16:1.29
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:15.8
参数22:28.51
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:07:04
参数31:王嫣然(女士)
参数32:13006306016
参数33:长航・蓝晶国际-A区高新大道与明玉路交汇处东南侧 7号楼1304
参数34:114.41833014
参数35:30.49611996
参数36:114.4249357208553
参数37:30.50178186540316
参数38:null
参数39:2017-06-21 11:30:33
参数40:11:30
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:2用餐, 微辣
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:08:01
参数66:2017-06-21 10:08:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62143a76651635
参数2:B62143910086570
参数3:用户
参数4:0
参数5:商家待接单
参数6:王嫣然(女士)支付成功
参数7:王嫣然(女士)
参数8:2017-06-21 10:07:04
参数9:0
 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:06:34
参数2:2017-06-21 10:06:34
参数3:299065
 
[INFO][2017-06-21 10:08:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62143910086570,0009-0014 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:06:34
参数2:2017-06-21 10:06:34
参数3:299065
 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13006306016
 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_prints
             


         WHERE stores_id = ? 
         
            ORDER BY print_id 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62143910086570
 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62143a87086155
参数2:B62143910086570
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:08:02
参数9:0
 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2399
参数2:2056
参数3:5
参数4:7.0
参数5:B62143910086570
 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:小炒土豆片
 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:08:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15207178710
参数2:1
 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:42524
参数3:1
 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B62143a56508036
参数2:9
参数3:B62143910086570
参数4:1
参数5:117
参数6:青豆米鸡丁
参数7:青豆米鸡丁
参数8:0
参数9:null
参数10:2017-06-21 10:08:02
参数11:15.417093
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62143a65943401
参数17:9
参数18:B62143910086570
参数19:1
参数20:24
参数21:小炒土豆片
参数22:小炒土豆片
参数23:0
参数24:null
参数25:2017-06-21 10:08:02
参数26:13.092908
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Connection reset 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62143b66217360
参数2:0
参数3:42524
参数4:0009-0015
参数5:饿了么
参数6:3008693080965686300
参数7:12
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:07:22
参数14:26.5
参数15:-1.0
参数16:0.82
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:15.5
参数22:19.68
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:07:25
参数31:廖茜(女士)
参数32:15207178710
参数33:光谷E城E3二楼找钢网
参数34:114.40181024
参数35:30.47615938
参数36:114.40835938236164
参数37:30.481959389205684
参数38:null
参数39:2017-06-21 11:30:22
参数40:11:30
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:08:03
参数66:2017-06-21 10:08:03
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉+荷包蛋+雪花蛋酒","price":26.5,"quantity":1,"id":621318334,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62143b77801232
参数2:B62143b66217360
参数3:用户
参数4:0
参数5:商家待接单
参数6:廖茜(女士)支付成功
参数7:廖茜(女士)
参数8:2017-06-21 10:07:25
参数9:0
 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-2 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-2 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:07:22
参数2:2017-06-21 10:07:22
参数3:42524
 
[INFO][2017-06-21 10:08:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62143b66217360,0009-0015 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15207178710
 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:07:22
参数2:2017-06-21 10:07:22
参数3:42524
 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://restapi.amap.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:03] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://restapi.amap.com:80 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[WARN][2017-06-21 10:08:03] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-1 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendDistanceReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.jms.OrderSendDistanceReceiver.onMessage(OrderSendDistanceReceiver.java:64)
	at sun.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[WARN][2017-06-21 10:08:03] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-1 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.service.OrderService.sendDwdOrder(OrderService.java:294)
	at com.service.OrderService.sendDwdOrder(OrderService.java:268)
	at com.service.OrderService$$FastClassBySpringCGLIB$$58cf08d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:652)
	at com.service.OrderService$$EnhancerBySpringCGLIB$$b5fa618a.sendDwdOrder(<generated>)
	at com.jms.OrderSendReceiver.onMessage(OrderSendReceiver.java:65)
	at sun.reflect.GeneratedMethodAccessor338.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62143b66217360
 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:08:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62143b04759527
参数2:B62143b66217360
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:08:03
参数9:0
 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://waimaiopen.meituan.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://waimaiopen.meituan.com:80 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://waimaiopen.meituan.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://waimaiopen.meituan.com:80 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://waimaiopen.meituan.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://waimaiopen.meituan.com:80 
[INFO][2017-06-21 10:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62143b48163317
参数2:9
参数3:B62143b66217360
参数4:1
参数5:3
参数6:农家小炒肉
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-21 10:08:03
参数11:14.937831
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62143c77707163
参数17:9
参数18:B62143b66217360
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-21 10:08:04
参数26:1.9759037
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62143c18391566
参数32:9
参数33:B62143b66217360
参数34:2
参数35:47
参数36:雪花蛋酒
参数37:雪花蛋酒
参数38:0
参数39:null
参数40:2017-06-21 10:08:04
参数41:2.7662652
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 10:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:25
 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {s}->https://api.weixin.qq.com:443: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:04] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {s}->https://api.weixin.qq.com:443 
[INFO][2017-06-21 10:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:08:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:08:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:08:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://waimaiopen.meituan.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://waimaiopen.meituan.com:80 
[INFO][2017-06-21 10:08:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://waimaiopen.meituan.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://waimaiopen.meituan.com:80 
[INFO][2017-06-21 10:08:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) DefaultMessageListenerContainer-1 I/O exception (java.net.SocketException) caught when processing request to {}->http://waimaiopen.meituan.com:80: Software caused connection abort: recv failed 
[INFO][2017-06-21 10:08:05] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) DefaultMessageListenerContainer-1 Retrying request to {}->http://waimaiopen.meituan.com:80 
[INFO][2017-06-21 10:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:08:08
参数4:
参数5:B62143a75743135
参数6:B62143910086570
 
[INFO][2017-06-21 10:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62143a75743135
参数2:B62143910086570
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:08:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:10:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:10:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:10:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:10:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:11:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:11:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:11:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:11:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15162310770
参数2:1
 
[INFO][2017-06-21 10:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:20526
参数3:1
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621278909565410
参数2:0
参数3:20526
参数4:0009-0016
参数5:饿了么
参数6:3008693085545832476
参数7:13
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:09:38
参数14:31.8
参数15:0.0
参数16:1.09
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:21.8
参数22:24.71
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:09:57
参数31:盛 先生
参数32:15162310770
参数33:中南财经政法大学南湖校区环湖公寓6号南湖大道182号
参数34:114.38064
参数35:30.47269
参数36:114.38708975132742
参数37:30.478849595304364
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:12:01
参数66:2017-06-21 10:12:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"绿豆汤","price":3.9,"quantity":1,"id":126727061,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621278928507616
参数2:B621278909565410
参数3:用户
参数4:0
参数5:商家待接单
参数6:盛 先生支付成功
参数7:盛 先生
参数8:2017-06-21 10:09:57
参数9:0
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:09:38
参数2:2017-06-21 10:09:38
参数3:20526
 
[INFO][2017-06-21 10:12:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621278909565410,0009-0016 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:09:38
参数2:2017-06-21 10:09:38
参数3:20526
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15162310770
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:新派手撕鸡
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:3531
参数2:3026
参数3:8
参数4:10.0
参数5:B621278909565410
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:绿豆汤
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621278909565410
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15972092868
参数2:1
 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621278a48716717
参数2:B621278909565410
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:12:02
参数9:0
 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:126846
参数3:1
 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621278a51254350
参数2:9
参数3:B621278909565410
参数4:1
参数5:129
参数6:新派手撕鸡
参数7:新派手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:12:02
参数11:17.794308
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621278a92248218
参数17:9
参数18:B621278909565410
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 10:12:02
参数26:3.0304716
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621278b77324756
参数32:9
参数33:B621278909565410
参数34:2
参数35:123
参数36:香滑蒸鸡蛋
参数37:香滑蒸鸡蛋
参数38:0
参数39:null
参数40:2017-06-21 10:12:03
参数41:3.88522
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621278b81604366
参数2:0
参数3:126846
参数4:0009-0017
参数5:美团
参数6:10274162072137925
参数7:4
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:10:14
参数14:45.6
参数15:0.0
参数16:2.0
参数17:4.0
参数18:4.0
参数19:16.0
参数20:0.0
参数21:37.6
参数22:37.0
参数23:14.0
参数24:2.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:10:14
参数31:颜晶(女士)
参数32:15972092868
参数33:香樟12栋 (光谷三医院八楼妇产科护士站)
参数34:114.41492
参数35:30.49736
参数36:114.42152351923858
参数37:30.50303288947421
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:12:03
参数66:2017-06-21 10:12:03
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"鲜菇炒肉丝","price":20.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"绿豆汤","price":3.9,"quantity":2,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621278b27893715
参数2:B621278b81604366
参数3:用户
参数4:0
参数5:商家待接单
参数6:颜晶(女士)支付成功
参数7:颜晶(女士)
参数8:2017-06-21 10:10:14
参数9:0
 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:10:14
参数2:2017-06-21 10:10:14
参数3:126846
 
[INFO][2017-06-21 10:12:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621278b81604366,0009-0017 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621278b81604366
 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15972092868
 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:10:14
参数2:2017-06-21 10:10:14
参数3:126846
 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621278b21693566
参数2:B621278b81604366
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:12:03
参数9:0
 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:鲜菇炒肉丝
 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[WARN][2017-06-21 10:12:03] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-1 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderPrintReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\baseSqlMap.xml]
### The error may involve baseSqlMap.getRecord-Inline
### The error occurred while setting parameters
### SQL: SELECT                                        brand_id                  ,                      brand_name                  ,                      brand_comment                  ,                      brand_fromno_start                  ,                      weixin_appid                  ,                      weixin_appsecret                  ,                      weixin_token                  ,                      weixin_mchid                  ,                      weixin_key                                   FROM cds_brand                          WHERE brand_id = ?
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
; SQL []; Software caused connection abort: recv failed; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.dao.DataAccessResourceFailureException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\baseSqlMap.xml]
### The error may involve baseSqlMap.getRecord-Inline
### The error occurred while setting parameters
### SQL: SELECT                                        brand_id                  ,                      brand_name                  ,                      brand_comment                  ,                      brand_fromno_start                  ,                      weixin_appid                  ,                      weixin_appsecret                  ,                      weixin_token                  ,                      weixin_mchid                  ,                      weixin_key                                   FROM cds_brand                          WHERE brand_id = ?
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
; SQL []; Software caused connection abort: recv failed; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:105)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:71)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:365)
	at com.sun.proxy.$Proxy9.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at com.framework.dao.SqlDaoImpl.getRecord(SqlDaoImpl.java:168)
	at com.framework.dao.SqlDaoImpl.getRecord(SqlDaoImpl.java:28)
	at com.service.PrintService.getWeixinUrl(PrintService.java:555)
	at com.service.PrintService.printClient(PrintService.java:69)
	at com.service.PrintService.printClient(PrintService.java:41)
	at com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:47)
	at sun.reflect.GeneratedMethodAccessor337.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Software caused connection abort: recv failed
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1667)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1654)
	at com.microsoft.sqlserver.jdbc.TDSChannel.read(IOBuffer.java:1789)
	at com.microsoft.sqlserver.jdbc.TDSReader.readPacket(IOBuffer.java:4838)
	at com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:6150)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:402)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:350)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:180)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:155)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.execute(SQLServerPreparedStatement.java:332)
	at org.apache.tomcat.dbcp.dbcp2.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:197)
	at org.apache.tomcat.dbcp.dbcp2.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:197)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:56)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:70)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at com.sun.proxy.$Proxy45.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:57)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:267)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:141)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:105)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:101)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:95)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:59)
	at sun.reflect.GeneratedMethodAccessor154.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:355)
	... 24 more
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:12:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2147
参数2:1840
参数3:5
参数4:7.0
参数5:B621278b81604366
 
[INFO][2017-06-21 10:12:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:12:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:12:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:12:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:12:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:12:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:12:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:12:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:12:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:12:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B621278c82072781
参数2:9
参数3:B621278b81604366
参数4:1
参数5:132
参数6:鲜菇炒肉丝
参数7:鲜菇炒肉丝
参数8:0
参数9:null
参数10:2017-06-21 10:12:04
参数11:16.958334
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621278c88460383
参数17:9
参数18:B621278b81604366
参数19:1
参数20:24
参数21:小炒土豆片
参数22:小炒土豆片
参数23:0
参数24:null
参数25:2017-06-21 10:12:04
参数26:13.712719
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621278c49223858
参数32:9
参数33:B621278b81604366
参数34:2
参数35:46
参数36:绿豆汤
参数37:绿豆汤
参数38:0
参数39:null
参数40:2017-06-21 10:12:04
参数41:3.1644738
参数42:2
参数43:0
参数44:0
参数45:1
参数46:B621278c44151134
参数47:9
参数48:B621278b81604366
参数49:0
参数50:0
参数51:满18.0元赠哈尔滨冰纯白啤330ml*1
参数52:null
参数53:0
参数54:null
参数55:2017-06-21 10:12:04
参数56:0.0
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-21 10:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:12:08
参数4:
参数5:B621278b49105805
参数6:B621278b81604366
 
[INFO][2017-06-21 10:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:12:08
参数4:
参数5:B621278a56849648
参数6:B621278909565410
 
[INFO][2017-06-21 10:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621278b49105805
参数2:B621278b81604366
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:12:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621278a56849648
参数2:B621278909565410
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:12:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:14:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:16:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:16:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:16:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:16:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:16:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:16:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:16:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:16:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18907173666
参数2:1
 
[INFO][2017-06-21 10:16:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:16:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:266380
参数3:1
 
[INFO][2017-06-21 10:16:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:16:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62127b273369133
参数2:0
参数3:266380
参数4:0009-0018
参数5:饿了么
参数6:3008693174062312476
参数7:14
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:12:19
参数14:23.4
参数15:0.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:12:32
参数31:张正
参数32:18907173666
参数33:中南财经政法大学南湖校区-文治楼中南财经政法大学南湖校区内
参数34:114.38855996
参数35:30.47445995
参数36:114.39504754547046
参数37:30.480484327643385
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:1人用餐, 不要辣
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:16:02
参数66:2017-06-21 10:16:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:16:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:16:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62127b200514463
参数2:B62127b273369133
参数3:用户
参数4:0
参数5:商家待接单
参数6:张正支付成功
参数7:张正
参数8:2017-06-21 10:12:32
参数9:0
 
[INFO][2017-06-21 10:16:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:16:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:12:19
参数2:2017-06-21 10:12:19
参数3:266380
 
[INFO][2017-06-21 10:16:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62127b273369133,0009-0018 
[INFO][2017-06-21 10:16:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:16:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:12:19
参数2:2017-06-21 10:12:19
参数3:266380
 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18907173666
 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:荷包蛋
 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62127b273369133
 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62127b388043636
参数2:B62127b273369133
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:16:03
参数9:0
 
[WARN][2017-06-21 10:16:03] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-2 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderPrintReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 该连接已关闭。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\baseSqlMap.xml]
### The error may involve baseSqlMap.getRecord
### The error occurred while executing a query
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 该连接已关闭。
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; 该连接已关闭。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 该连接已关闭。
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 该连接已关闭。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\baseSqlMap.xml]
### The error may involve baseSqlMap.getRecord
### The error occurred while executing a query
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 该连接已关闭。
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; 该连接已关闭。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 该连接已关闭。
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:84)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:71)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:365)
	at com.sun.proxy.$Proxy9.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at com.framework.dao.SqlDaoImpl.getRecord(SqlDaoImpl.java:168)
	at com.framework.dao.SqlDaoImpl.getRecord(SqlDaoImpl.java:28)
	at com.service.PrintService.getWeixinUrl(PrintService.java:555)
	at com.service.PrintService.printClient(PrintService.java:69)
	at com.service.PrintService.printClient(PrintService.java:41)
	at com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:47)
	at sun.reflect.GeneratedMethodAccessor337.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: 该连接已关闭。
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:190)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:388)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.getAutoCommit(SQLServerConnection.java:1909)
	at org.apache.tomcat.dbcp.dbcp2.DelegatingConnection.getAutoCommit(DelegatingConnection.java:396)
	at org.apache.tomcat.dbcp.dbcp2.DelegatingConnection.getAutoCommit(DelegatingConnection.java:396)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:81)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:66)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:279)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:69)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:56)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:267)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:141)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:105)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:101)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:95)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:59)
	at sun.reflect.GeneratedMethodAccessor154.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:355)
	... 24 more
[WARN][2017-06-21 10:16:03] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-2 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendDistanceReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Cannot get a connection, pool error Unable to validate object
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Cannot get a connection, pool error Unable to validate object
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Cannot get a connection, pool error Unable to validate object
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Cannot get a connection, pool error Unable to validate object
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:365)
	at com.sun.proxy.$Proxy9.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:251)
	at com.framework.dao.SqlDaoImpl.updateRecord(SqlDaoImpl.java:293)
	at com.jms.OrderSendDistanceReceiver.onMessage(OrderSendDistanceReceiver.java:95)
	at sun.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Cannot get a connection, pool error Unable to validate object
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Cannot get a connection, pool error Unable to validate object
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:23)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:147)
	at sun.reflect.GeneratedMethodAccessor252.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:355)
	... 20 more
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Cannot get a connection, pool error Unable to validate object
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:66)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:279)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:69)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:44)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:108)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:75)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:145)
	... 24 more
Caused by: java.sql.SQLException: Cannot get a connection, pool error Unable to validate object
	at org.apache.tomcat.dbcp.dbcp2.PoolingDataSource.getConnection(PoolingDataSource.java:142)
	at org.apache.tomcat.dbcp.dbcp2.BasicDataSource.getConnection(BasicDataSource.java:1543)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 32 more
Caused by: java.util.NoSuchElementException: Unable to validate object
	at org.apache.tomcat.dbcp.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:492)
	at org.apache.tomcat.dbcp.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:359)
	at org.apache.tomcat.dbcp.dbcp2.PoolingDataSource.getConnection(PoolingDataSource.java:134)
	... 35 more
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:农家小炒肉-份
 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62127b344135753
参数2:9
参数3:B62127b273369133
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-21 10:16:03
参数11:1.7873931
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62127b332039107
参数17:9
参数18:B62127b273369133
参数19:1
参数20:3
参数21:农家小炒肉-份
参数22:农家小炒肉
参数23:0
参数24:null
参数25:2017-06-21 10:16:03
参数26:14.942606
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:16:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:16:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:16:09
参数4:
参数5:B62127b248075585
参数6:B62127b273369133
 
[INFO][2017-06-21 10:16:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:16:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62127b248075585
参数2:B62127b273369133
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:16:09
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 10:19:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 10:19:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:19:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:19:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 10:19:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:25
 
[INFO][2017-06-21 10:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:22:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:22:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:22:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:22:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:23:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:23:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:26:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13476116227
参数2:1
 
[INFO][2017-06-21 10:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:59321
参数3:1
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621281f79395004
参数2:0
参数3:59321
参数4:0009-0019
参数5:饿了么
参数6:3008693187651862556
参数7:15
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:20:19
参数14:48.8
参数15:-8.0
参数16:1.89
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:27.8
参数22:39.91
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:20:22
参数31:陈川(先生)
参数32:13476116227
参数33:清江山水2.2期50栋2404
参数34:114.39997109
参数35:30.47097995
参数36:114.40650788446742
参数37:30.476806458340835
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:27:01
参数66:2017-06-21 10:27:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"花菜炒豆腐-大份","price":20.9,"quantity":1,"id":143649298,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282032075365
参数2:B621281f79395004
参数3:用户
参数4:0
参数5:商家待接单
参数6:陈川(先生)支付成功
参数7:陈川(先生)
参数8:2017-06-21 10:20:22
参数9:0
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:20:19
参数2:2017-06-21 10:20:19
参数3:59321
 
[INFO][2017-06-21 10:27:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621281f79395004,0009-0019 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:20:19
参数2:2017-06-21 10:20:19
参数3:59321
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13476116227
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:花菜炒豆腐-大份
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621281f79395004
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2371
参数2:2032
参数3:5
参数4:7.0
参数5:B621281f79395004
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282024653604
参数2:B621281f79395004
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:27:02
参数9:0
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_prints
             


         WHERE stores_id = ? 
         
            ORDER BY print_id 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18827404873
参数2:1
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:香滑蒸鸡蛋
 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:37140
参数3:1
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:新派手撕鸡
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282065309125
参数2:0
参数3:37140
参数4:0009-0020
参数5:饿了么
参数6:3008693153485126684
参数7:16
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:21:04
参数14:37.8
参数15:0.0
参数16:1.34
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:24.8
参数22:29.46
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:21:17
参数31:尹(女士)
参数32:18827404873
参数33:紫菘・枫林上城雄楚大街968号6栋2单元
参数34:114.40264089
参数35:30.49651894
参数36:114.40921182645587
参数37:30.502311925814706
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:27:02
参数66:2017-06-21 10:27:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282109948762
参数2:B621282065309125
参数3:用户
参数4:0
参数5:商家待接单
参数6:尹(女士)支付成功
参数7:尹(女士)
参数8:2017-06-21 10:21:17
参数9:0
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282005946711
参数2:9
参数3:B621281f79395004
参数4:1
参数5:10
参数6:花菜炒豆腐-大份
参数7:花菜炒豆腐
参数8:0
参数9:null
参数10:2017-06-21 10:27:02
参数11:17.092602
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621282098886384
参数17:9
参数18:B621281f79395004
参数19:2
参数20:123
参数21:香滑蒸鸡蛋
参数22:香滑蒸鸡蛋
参数23:0
参数24:null
参数25:2017-06-21 10:27:02
参数26:4.0891395
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621282100622183
参数32:9
参数33:B621281f79395004
参数34:1
参数35:129
参数36:新派手撕鸡
参数37:新派手撕鸡
参数38:0
参数39:null
参数40:2017-06-21 10:27:03
参数41:18.728258
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:21:04
参数2:2017-06-21 10:21:04
参数3:37140
 
[INFO][2017-06-21 10:27:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621282065309125,0009-0020 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:21:04
参数2:2017-06-21 10:21:04
参数3:37140
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18827404873
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:农家小炒肉-份
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621282065309125
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621282127945262
参数2:B621282065309125
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:27:03
参数9:0
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1549
参数2:1327
参数3:4
参数4:6.0
参数5:B621282065309125
 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17786039612
参数2:1
 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:小炒土豆片
 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:138317
参数3:1
 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B621282178785202
参数2:9
参数3:B621282065309125
参数4:1
参数5:3
参数6:农家小炒肉-份
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-21 10:27:03
参数11:16.288729
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621282217669265
参数17:9
参数18:B621282065309125
参数19:1
参数20:24
参数21:小炒土豆片
参数22:小炒土豆片
参数23:0
参数24:null
参数25:2017-06-21 10:27:04
参数26:13.171269
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282265191053
参数2:0
参数3:138317
参数4:0009-0021
参数5:饿了么
参数6:3008693126935341084
参数7:17
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:24:43
参数14:59.699997
参数15:0.0
参数16:2.28
参数17:4.0
参数18:6.0
参数19:29.0
参数20:0.0
参数21:40.7
参数22:47.42
参数23:20.0
参数24:9.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:24:50
参数31:王真(女士)
参数32:17786039612
参数33:现代光谷世贸中心光谷大道70号 D座10楼
参数34:114.42093037
参数35:30.47338061
参数36:114.42751511615221
参数37:30.47903600586095
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:27:04
参数66:2017-06-21 10:27:04
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282228637073
参数2:B621282265191053
参数3:用户
参数4:0
参数5:商家待接单
参数6:王真(女士)支付成功
参数7:王真(女士)
参数8:2017-06-21 10:24:50
参数9:0
 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:24:43
参数2:2017-06-21 10:24:43
参数3:138317
 
[INFO][2017-06-21 10:27:04] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621282265191053,0009-0021 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:24:43
参数2:2017-06-21 10:24:43
参数3:138317
 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621282265191053
 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:3443
参数2:2951
参数3:7
参数4:9.0
参数5:B621282265191053
 
[INFO][2017-06-21 10:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282293959880
参数2:B621282265191053
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:27:04
参数9:0
 
[INFO][2017-06-21 10:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:青豆米鸡丁
 
[INFO][2017-06-21 10:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621282271449815
参数2:9
参数3:B621282265191053
参数4:1
参数5:24
参数6:小炒土豆片
参数7:小炒土豆片
参数8:0
参数9:null
参数10:2017-06-21 10:27:04
参数11:13.423752
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621282369466576
参数17:9
参数18:B621282265191053
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-21 10:27:05
参数26:18.18958
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621282343370210
参数32:9
参数33:B621282265191053
参数34:1
参数35:117
参数36:青豆米鸡丁
参数37:青豆米鸡丁
参数38:0
参数39:null
参数40:2017-06-21 10:27:05
参数41:15.806666
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15171501394
参数2:1
 
[INFO][2017-06-21 10:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:301961
参数3:1
 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282432760482
参数2:0
参数3:301961
参数4:0009-0022
参数5:饿了么
参数6:3008693241733323804
参数7:18
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:24:56
参数14:42.8
参数15:0.0
参数16:1.59
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:29.8
参数22:34.21
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:25:14
参数31:陈正(先生)
参数32:15171501394
参数33:长江职业学院南区6号学生公寓长江职业学院南校区雄楚大道918号
参数34:114.39581014
参数35:30.4960198
参数36:114.40235191971205
参数37:30.501920831145842
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:27:06
参数66:2017-06-21 10:27:06
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282480380512
参数2:B621282432760482
参数3:用户
参数4:0
参数5:商家待接单
参数6:陈正(先生)支付成功
参数7:陈正(先生)
参数8:2017-06-21 10:25:14
参数9:0
 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:24:56
参数2:2017-06-21 10:24:56
参数3:301961
 
[INFO][2017-06-21 10:27:06] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621282432760482,0009-0022 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:24:56
参数2:2017-06-21 10:24:56
参数3:301961
 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2041
参数2:1749
参数3:5
参数4:7.0
参数5:B621282432760482
 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621282432760482
 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621282460385278
参数2:B621282432760482
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:27:06
参数9:0
 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:27:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282400174810
参数2:9
参数3:B621282432760482
参数4:1
参数5:117
参数6:青豆米鸡丁
参数7:青豆米鸡丁
参数8:0
参数9:null
参数10:2017-06-21 10:27:06
参数11:15.906051
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621282401019535
参数17:9
参数18:B621282432760482
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-21 10:27:06
参数26:18.303947
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15071399252
参数2:1
 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:272977
参数3:1
 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282522176476
参数2:0
参数3:272977
参数4:0009-0023
参数5:饿了么
参数6:3008693129107995676
参数7:19
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:25:27
参数14:24.9
参数15:0.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:25:43
参数31:高月(女士)
参数32:15071399252
参数33:中南财经政法大学(南湖校区)东湖高新技术开发区南湖大道182号      财大临湖公寓3栋
参数34:114.38967107
参数35:30.47608905
参数36:114.39616556554293
参数37:30.48209391300158
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:27:07
参数66:2017-06-21 10:27:07
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"小炒井岗笋肉丝","price":24.9,"quantity":1,"id":579331328,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282593925407
参数2:B621282522176476
参数3:用户
参数4:0
参数5:商家待接单
参数6:高月(女士)支付成功
参数7:高月(女士)
参数8:2017-06-21 10:25:43
参数9:0
 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:25:27
参数2:2017-06-21 10:25:27
参数3:272977
 
[INFO][2017-06-21 10:27:07] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621282522176476,0009-0023 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:25:27
参数2:2017-06-21 10:25:27
参数3:272977
 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:小炒井岗笋肉丝
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621282522176476
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2495
参数2:2138
参数3:5
参数4:7.0
参数5:B621282522176476
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282607064205
参数2:B621282522176476
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:27:08
参数9:0
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:27:08
参数4:
参数5:B621282155836751
参数6:B621282065309125
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:27:08
参数4:
参数5:B621282093341780
参数6:B621281f79395004
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621282155836751
参数2:B621282065309125
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:27:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282093341780
参数2:B621281f79395004
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:27:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15307103966
参数2:1
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B621282638692166
参数2:9
参数3:B621282522176476
参数4:1
参数5:120
参数6:小炒井岗笋肉丝
参数7:小炒井岗笋肉丝
参数8:0
参数9:null
参数10:2017-06-21 10:27:08
参数11:18.16
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15171501394
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:17786039612
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:25098
参数3:1
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:27:08
参数4:
参数5:B621282697839438
参数6:B621282432760482
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:27:08
参数4:
参数5:B621282634271844
参数6:B621282265191053
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621282697839438
参数2:B621282432760482
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:27:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282634271844
参数2:B621282265191053
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:27:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282625111080
参数2:0
参数3:25098
参数4:0009-0024
参数5:饿了么
参数6:3008693202130582556
参数7:20
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:25:59
参数14:25.4
参数15:0.0
参数16:0.77
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:15.4
参数22:18.63
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:26:11
参数31:杨超(先生)
参数32:15307103966
参数33:中南财经政法大学(南湖校区)滨湖7栋
参数34:114.39298192
参数35:30.47874997
参数36:114.39949487427022
参数37:30.484696269104507
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:27:08
参数66:2017-06-21 10:27:08
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":108171986,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282691428117
参数2:B621282625111080
参数3:用户
参数4:0
参数5:商家待接单
参数6:杨超(先生)支付成功
参数7:杨超(先生)
参数8:2017-06-21 10:26:11
参数9:0
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15071399252
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:25:59
参数2:2017-06-21 10:25:59
参数3:25098
 
[INFO][2017-06-21 10:27:09] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621282625111080,0009-0024 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15307103966
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:25:59
参数2:2017-06-21 10:25:59
参数3:25098
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:雪花蛋酒
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1952
参数2:1673
参数3:4
参数4:6.0
参数5:B621282625111080
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621282625111080
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621282739041513
参数2:B621282625111080
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:27:09
参数9:0
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17786039612
参数2:1
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:138317
参数3:1
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-21 10:27:09
参数4:服务不可用
参数5:B621282686857626
参数6:B621282522176476
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:27:09
参数4:
参数5:B621282743600310
参数6:B621282625111080
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282686857626
参数2:B621282522176476
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-21 10:27:09
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621282767982720
参数2:9
参数3:B621282625111080
参数4:2
参数5:47
参数6:雪花蛋酒
参数7:雪花蛋酒
参数8:0
参数9:null
参数10:2017-06-21 10:27:09
参数11:2.5671258
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621282754059436
参数17:9
参数18:B621282625111080
参数19:2
参数20:123
参数21:香滑蒸鸡蛋
参数22:香滑蒸鸡蛋
参数23:0
参数24:null
参数25:2017-06-21 10:27:09
参数26:3.6673226
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621282769263136
参数32:9
参数33:B621282625111080
参数34:1
参数35:24
参数36:小炒土豆片
参数37:小炒土豆片
参数38:0
参数39:null
参数40:2017-06-21 10:27:09
参数41:12.395551
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621282743600310
参数2:B621282625111080
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:27:09
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621282723250223
参数2:0
参数3:138317
参数4:0009-0025
参数5:饿了么
参数6:3008693165623601180
参数7:21
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:26:12
参数14:40.8
参数15:-5.0
参数16:1.29
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:18.8
参数22:28.51
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:26:19
参数31:王真(女士)
参数32:17786039612
参数33:现代光谷世贸中心光谷大道70号 D座10楼
参数34:114.42093037
参数35:30.47338061
参数36:114.42751511615221
参数37:30.47903600586095
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:27:09
参数66:2017-06-21 10:27:09
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"番茄炒鸡蛋-大份","price":19.9,"quantity":1,"id":560271173,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913628248454
参数2:B621282723250223
参数3:用户
参数4:0
参数5:商家待接单
参数6:王真(女士)支付成功
参数7:王真(女士)
参数8:2017-06-21 10:26:19
参数9:0
 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:26:12
参数2:2017-06-21 10:26:12
参数3:138317
 
[INFO][2017-06-21 10:27:10] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621282723250223,0009-0025 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:26:12
参数2:2017-06-21 10:26:12
参数3:138317
 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:17786039612
 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:3443
参数2:2951
参数3:7
参数4:9.0
参数5:B621282723250223
 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621282723250223
 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913695707363
参数2:B621282723250223
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:27:10
参数9:0
 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:番茄炒鸡蛋-大份
 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:27:10
参数4:
参数5:B6211913602240250
参数6:B621282723250223
 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13545399733
参数2:1
 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913699701843
参数2:9
参数3:B621282723250223
参数4:1
参数5:3
参数6:农家小炒肉-份
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-21 10:27:10
参数11:14.604387
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211913638624065
参数17:9
参数18:B621282723250223
参数19:1
参数20:7
参数21:番茄炒鸡蛋-大份
参数22:番茄炒鸡蛋
参数23:0
参数24:null
参数25:2017-06-21 10:27:10
参数26:13.905613
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913602240250
参数2:B621282723250223
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:27:10
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:100752
参数3:1
 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913742170834
参数2:0
参数3:100752
参数4:0009-0026
参数5:饿了么
参数6:3008693166722329628
参数7:22
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:26:33
参数14:24.8
参数15:0.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.8
参数22:18.06
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:26:55
参数31:胡泊俊(先生)
参数32:13545399733
参数33:光谷E城E5光谷软件园6期E5栋（玉树临风酒店对面）3F
参数34:114.40203102
参数35:30.47724894
参数36:114.4085821079296
参数37:30.483046018709448
参数38:null
参数39:2017-06-21 12:00:32
参数40:12:00
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:27:11
参数66:2017-06-21 10:27:11
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"绿豆汤","price":3.9,"quantity":1,"id":126727061,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913791493678
参数2:B6211913742170834
参数3:用户
参数4:0
参数5:商家待接单
参数6:胡泊俊(先生)支付成功
参数7:胡泊俊(先生)
参数8:2017-06-21 10:26:55
参数9:0
 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:26:33
参数2:2017-06-21 10:26:33
参数3:100752
 
[INFO][2017-06-21 10:27:11] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6211913742170834,0009-0026 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:26:33
参数2:2017-06-21 10:26:33
参数3:100752
 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13545399733
 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:绿豆汤
 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1505
参数2:1290
参数3:4
参数4:6.0
参数5:B6211913742170834
 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:27:12
参数4:
参数5:B6211913730706243
参数6:B6211913742170834
 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211913730706243
参数2:B6211913742170834
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:27:12
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13872761640
参数2:1
 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6211913881590716
参数2:9
参数3:B6211913742170834
参数4:2
参数5:46
参数6:绿豆汤
参数7:绿豆汤
参数8:0
参数9:null
参数10:2017-06-21 10:27:12
参数11:2.8400807
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211913874021843
参数17:9
参数18:B6211913742170834
参数19:1
参数20:3
参数21:农家小炒肉-份
参数22:农家小炒肉
参数23:0
参数24:null
参数25:2017-06-21 10:27:12
参数26:15.219919
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:234481
参数3:1
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913860430023
参数2:0
参数3:234481
参数4:0009-0027
参数5:美团
参数6:10274160012406695
参数7:5
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:24:57
参数14:27.5
参数15:2.0
参数16:1.0
参数17:4.0
参数18:3.0
参数19:12.0
参数20:0.0
参数21:20.5
参数22:22.0
参数23:11.0
参数24:1.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:24:57
参数31:余(女士)
参数32:13872761640
参数33:光谷软件园 (E2栋3楼（南湖大道）)
参数34:114.406728
参数35:30.47714
参数36:114.41329534534972
参数37:30.48287560279724
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:27:12
参数66:2017-06-21 10:27:12
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"米饭","price":1.0,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"农家小炒肉+荷包蛋+雪花蛋酒","price":26.5,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913959340602
参数2:B6211913860430023
参数3:用户
参数4:0
参数5:商家待接单
参数6:余(女士)支付成功
参数7:余(女士)
参数8:2017-06-21 10:24:57
参数9:0
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:24:57
参数2:2017-06-21 10:24:57
参数3:234481
 
[INFO][2017-06-21 10:27:13] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6211913860430023,0009-0027 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6211913860430023
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:24:57
参数2:2017-06-21 10:24:57
参数3:234481
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13872761640
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913959782823
参数2:B6211913860430023
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:27:13
参数9:0
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:米饭
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1794
参数2:1537
参数3:4
参数4:6.0
参数5:B6211913860430023
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13100713601
参数2:1
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:275705
参数3:1
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:27:13
参数4:
参数5:B6211913937446512
参数6:B6211913860430023
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:农家小炒肉
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913937446512
参数2:B6211913860430023
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:27:13
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:荷包蛋
 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913989158073
参数2:0
参数3:275705
参数4:0009-0028
参数5:美团
参数6:10274160181152067
参数7:6
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:26:44
参数14:28.5
参数15:0.0
参数16:1.0
参数17:4.0
参数18:2.0
参数19:12.0
参数20:0.0
参数21:22.5
参数22:22.0
参数23:11.0
参数24:1.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:26:44
参数31:李相悦(女士)
参数32:13100713601
参数33:中南财经政法大学南湖校区环湖公寓17号楼 (522)
参数34:114.3782
参数35:30.47381
参数36:114.38464088655302
参数37:30.48000713159476
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:27:13
参数66:2017-06-21 10:27:13
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"手撕鸡+雪花蛋酒+爱心荷包蛋","price":28.5,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913a59832355
参数2:B6211913989158073
参数3:用户
参数4:0
参数5:商家待接单
参数6:李相悦(女士)支付成功
参数7:李相悦(女士)
参数8:2017-06-21 10:26:44
参数9:0
 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:26:44
参数2:2017-06-21 10:26:44
参数3:275705
 
[INFO][2017-06-21 10:27:14] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6211913989158073,0009-0028 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:26:44
参数2:2017-06-21 10:26:44
参数3:275705
 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13100713601
 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:手撕鸡
 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:3645
参数2:3124
参数3:8
参数4:10.0
参数5:B6211913989158073
 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:27:14
参数4:
参数5:B6211913a98237628
参数6:B6211913989158073
 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:爱心荷包蛋
 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211913a98237628
参数2:B6211913989158073
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:27:14
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211913915643623
参数2:9
参数3:B6211913860430023
参数4:3
参数5:50
参数6:米饭
参数7:金枪鱼沙拉
参数8:0
参数9:null
参数10:2017-06-21 10:27:13
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211913a95223242
参数17:9
参数18:B6211913860430023
参数19:1
参数20:3
参数21:农家小炒肉
参数22:农家小炒肉
参数23:0
参数24:null
参数25:2017-06-21 10:27:14
参数26:16.091566
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6211913a56623680
参数32:9
参数33:B6211913860430023
参数34:5
参数35:38
参数36:荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-21 10:27:14
参数41:2.1285143
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B6211913a18157727
参数47:9
参数48:B6211913860430023
参数49:2
参数50:47
参数51:雪花蛋酒
参数52:雪花蛋酒
参数53:0
参数54:null
参数55:2017-06-21 10:27:14
参数56:2.97992
参数57:1
参数58:0
参数59:0
参数60:1
参数61:B6211913a81928677
参数62:9
参数63:B6211913860430023
参数64:0
参数65:0
参数66:满18.0元赠哈尔滨冰纯白啤330ml*1
参数67:null
参数68:0
参数69:null
参数70:2017-06-21 10:27:14
参数71:0.0
参数72:1
参数73:0
参数74:0
参数75:1
 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211913b11825883
参数2:9
参数3:B6211913989158073
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:27:15
参数11:16.903475
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211913b02385856
参数17:9
参数18:B6211913989158073
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-21 10:27:15
参数26:2.972973
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6211913b65987040
参数32:9
参数33:B6211913989158073
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-21 10:27:15
参数41:2.123552
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B6211913b39101147
参数47:9
参数48:B6211913989158073
参数49:0
参数50:0
参数51:满18.0元赠哈尔滨冰纯白啤330ml*1
参数52:null
参数53:0
参数54:null
参数55:2017-06-21 10:27:15
参数56:0.0
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-21 10:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6211913742170834
 
[INFO][2017-06-21 10:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211913c63703836
参数2:B6211913742170834
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:27:16
参数9:0
 
[INFO][2017-06-21 10:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6211913989158073
 
[INFO][2017-06-21 10:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211913c95052255
参数2:B6211913989158073
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:27:16
参数9:0
 
[INFO][2017-06-21 10:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:28:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 10:28:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-06-21 10:28:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 10:28:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-06-21 10:28:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select * ,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-06-21 10:28:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-06-21 10:28:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-06-21 10:28:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-06-21 10:28:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-06-21 10:28:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:
 
[INFO][2017-06-21 10:28:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * ,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-06-21 10:28:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-06-21 10:28:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-06-21 10:28:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-06-21 10:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-06-21 10:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:73
 
[INFO][2017-06-21 10:28:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class)  tmp_count 
[INFO][2017-06-21 10:28:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-06-21 10:28:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-06-21 10:28:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-06-21 10:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 10:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-06-21 10:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 10:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-06-21 10:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select * ,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-06-21 10:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-06-21 10:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-06-21 10:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-06-21 10:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-06-21 10:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:
 
[INFO][2017-06-21 10:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * ,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-06-21 10:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-06-21 10:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-06-21 10:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-06-21 10:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 10:30:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 10:30:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:30:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:30:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:30:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13667184452
参数2:1
 
[INFO][2017-06-21 10:30:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:30:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13667184452
参数2:菜大师用户
参数3:2017-06-21 10:28:14
参数4:2017-06-21 10:28:14
参数5:1
参数6:1
参数7:0.0
参数8:30.47299035,114.42130052
参数9:2017-06-21 10:28:14
参数10:2017-06-21 10:28:14
参数11:0
参数12:2017-06-21 10:28:14
参数13:2017-06-21 10:28:14
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:30:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:30:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13667184452
参数2:1
 
[INFO][2017-06-21 10:30:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:30:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:28:14
参数2:null
参数3:0
参数4:2017-06-21 10:28:14
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303430
参数18:1
 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621283d02644527
参数2:0
参数3:303430
参数4:0009-0029
参数5:饿了么
参数6:3008693171118125084
参数7:23
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:28:01
参数14:40.8
参数15:-8.0
参数16:1.49
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:19.8
参数22:32.31
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:28:14
参数31:姚(女士)
参数32:13667184452
参数33:现代光谷世贸中心光谷大道70号 D栋11楼
参数34:114.42130052
参数35:30.47299035
参数36:114.4278847915218
参数37:30.47864603455778
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:30:01
参数66:2017-06-21 10:30:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"番茄炒鸡蛋-大份","price":19.9,"quantity":1,"id":560271173,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621283e94326060
参数2:B621283d02644527
参数3:用户
参数4:0
参数5:商家待接单
参数6:姚(女士)支付成功
参数7:姚(女士)
参数8:2017-06-21 10:28:14
参数9:0
 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:28:01
参数2:2017-06-21 10:28:01
参数3:303430
 
[INFO][2017-06-21 10:30:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621283d02644527,0009-0029 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:28:01
参数2:2017-06-21 10:28:01
参数3:303430
 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13667184452
 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:3515
参数2:3012
参数3:8
参数4:10.0
参数5:B621283d02644527
 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621283d02644527
 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621283e65761458
参数2:B621283d02644527
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:30:02
参数9:0
 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:30:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B621283e25173385
参数2:9
参数3:B621283d02644527
参数4:1
参数5:3
参数6:农家小炒肉-份
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-21 10:30:02
参数11:16.550957
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621283e64053457
参数17:9
参数18:B621283d02644527
参数19:1
参数20:7
参数21:番茄炒鸡蛋-大份
参数22:番茄炒鸡蛋
参数23:0
参数24:null
参数25:2017-06-21 10:30:02
参数26:15.759046
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13237122536
参数2:1
 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13237122536
参数2:菜大师用户
参数3:2017-06-21 10:29:36
参数4:2017-06-21 10:29:36
参数5:1
参数6:1
参数7:0.0
参数8:30.48975608,114.42472788
参数9:2017-06-21 10:29:36
参数10:2017-06-21 10:29:36
参数11:0
参数12:2017-06-21 10:29:36
参数13:2017-06-21 10:29:36
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13237122536
参数2:1
 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:29:36
参数2:null
参数3:0
参数4:2017-06-21 10:29:36
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303431
参数18:1
 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621283f53576775
参数2:0
参数3:303431
参数4:0009-0030
参数5:饿了么
参数6:3008693266295169052
参数7:24
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:29:29
参数14:39.8
参数15:0.0
参数16:1.44
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:26.8
参数22:31.36
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:29:36
参数31:肖晓华(女士)
参数32:13237122536
参数33:宇峰家园14栋1单元501室
参数34:114.42472788
参数35:30.48975608
参数36:114.4313260086918
参数37:30.495425787859823
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:30:03
参数66:2017-06-21 10:30:03
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621283f38335211
参数2:B621283f53576775
参数3:用户
参数4:0
参数5:商家待接单
参数6:肖晓华(女士)支付成功
参数7:肖晓华(女士)
参数8:2017-06-21 10:29:36
参数9:0
 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:29:29
参数2:2017-06-21 10:29:29
参数3:303431
 
[INFO][2017-06-21 10:30:04] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621283f53576775,0009-0030 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13237122536
 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:29:29
参数2:2017-06-21 10:29:29
参数3:303431
 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621283f53576775
 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2950
参数2:2528
参数3:6
参数4:8.0
参数5:B621283f53576775
 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:25
 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621284026631045
参数2:B621283f53576775
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:30:04
参数9:0
 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621284012336473
参数2:9
参数3:B621283f53576775
参数4:1
参数5:24
参数6:小炒土豆片
参数7:小炒土豆片
参数8:0
参数9:null
参数10:2017-06-21 10:30:04
参数11:13.316181
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621284099216732
参数17:9
参数18:B621283f53576775
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-21 10:30:04
参数26:18.04382
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:30:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:30:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:30:08
参数4:
参数5:B621283e06105100
参数6:B621283d02644527
 
[INFO][2017-06-21 10:30:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:30:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:30:08
参数4:
参数5:B621284041978706
参数6:B621283f53576775
 
[INFO][2017-06-21 10:30:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:30:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621283e06105100
参数2:B621283d02644527
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:30:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:30:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:30:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621284041978706
参数2:B621283f53576775
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:30:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:30:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-06-21 10:30:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:82
 
[INFO][2017-06-21 10:30:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select * ,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-06-21 10:30:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:ce
参数3:ce
 
[INFO][2017-06-21 10:30:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select * ,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-06-21 10:30:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:ce
参数3:ce
 
[INFO][2017-06-21 10:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13437288765
参数2:1
 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:46620
参数3:1
 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621284755531700
参数2:0
参数3:46620
参数4:0009-0031
参数5:美团
参数6:10274161678039130
参数7:7
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:28:22
参数14:39.8
参数15:4.0
参数16:2.0
参数17:4.0
参数18:4.0
参数19:16.0
参数20:0.0
参数21:27.8
参数22:31.0
参数23:14.0
参数24:2.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:28:22
参数31:刘静(女士)
参数32:13437288765
参数33:金地・雄楚1号 (雄楚一号A3 1605)
参数34:114.390401
参数35:30.496435
参数36:114.39691757285873
参数37:30.502431701432975
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:31:01
参数66:2017-06-21 10:31:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621284733063731
参数2:B621284755531700
参数3:用户
参数4:0
参数5:商家待接单
参数6:刘静(女士)支付成功
参数7:刘静(女士)
参数8:2017-06-21 10:28:22
参数9:0
 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:28:22
参数2:2017-06-21 10:28:22
参数3:46620
 
[INFO][2017-06-21 10:31:01] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621284755531700,0009-0031 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621284755531700
 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:28:22
参数2:2017-06-21 10:28:22
参数3:46620
 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13437288765
 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621284767652536
参数2:B621284755531700
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:31:01
参数9:0
 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2271
参数2:1946
参数3:5
参数4:7.0
参数5:B621284755531700
 
[INFO][2017-06-21 10:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:31:02
参数4:
参数5:B621284715955473
参数6:B621284755531700
 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621284715955473
参数2:B621284755531700
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:31:02
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621284798091320
参数2:9
参数3:B621284755531700
参数4:1
参数5:24
参数6:小炒土豆片
参数7:小炒土豆片
参数8:0
参数9:null
参数10:2017-06-21 10:31:01
参数11:13.163317
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621284848156617
参数17:9
参数18:B621284755531700
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-21 10:31:02
参数26:17.836683
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621284888064508
参数32:9
参数33:B621284755531700
参数34:0
参数35:0
参数36:满18.0元赠哈尔滨冰纯白啤330ml*1
参数37:null
参数38:0
参数39:null
参数40:2017-06-21 10:31:02
参数41:0.0
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:32:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:32:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:32:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:32:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17671655017
参数2:1
 
[INFO][2017-06-21 10:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17671655017
参数2:菜大师用户
参数3:2017-06-21 10:31:35
参数4:2017-06-21 10:31:35
参数5:1
参数6:1
参数7:0.0
参数8:30.48247003,114.39484002
参数9:2017-06-21 10:31:35
参数10:2017-06-21 10:31:35
参数11:0
参数12:2017-06-21 10:31:35
参数13:2017-06-21 10:31:35
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17671655017
参数2:1
 
[INFO][2017-06-21 10:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:31:35
参数2:null
参数3:0
参数4:2017-06-21 10:31:35
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303432
参数18:1
 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286532751187
参数2:0
参数3:303432
参数4:0009-0032
参数5:饿了么
参数6:3008693383735670812
参数7:26
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:30:58
参数14:28.5
参数15:-8.0
参数16:0.92
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.5
参数22:21.58
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:31:35
参数31:田志刚(先生)
参数32:17671655017
参数33:中南民族大学民族大道182号 南区4栋502
参数34:114.39484002
参数35:30.48247003
参数36:114.4013654400014
参数37:30.488384651279066
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:34:01
参数66:2017-06-21 10:34:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"手撕鸡+雪花蛋酒+爱心荷包蛋","price":28.5,"quantity":1,"id":123877083,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286618233284
参数2:B621286532751187
参数3:用户
参数4:0
参数5:商家待接单
参数6:田志刚(先生)支付成功
参数7:田志刚(先生)
参数8:2017-06-21 10:31:35
参数9:0
 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:30:58
参数2:2017-06-21 10:30:58
参数3:303432
 
[INFO][2017-06-21 10:34:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621286532751187,0009-0032 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:30:58
参数2:2017-06-21 10:30:58
参数3:303432
 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:17671655017
 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621286532751187
 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1409
参数2:1207
参数3:3
参数4:5.0
参数5:B621286532751187
 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621286693289436
参数2:B621286532751187
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:34:02
参数9:0
 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15072043134
参数2:1
 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B621286611979514
参数2:9
参数3:B621286532751187
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:34:02
参数11:16.580772
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621286673078708
参数17:9
参数18:B621286532751187
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-21 10:34:02
参数26:2.9162164
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621286684503046
参数32:9
参数33:B621286532751187
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-21 10:34:02
参数41:2.0830116
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:34:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:280912
参数3:1
 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286736088061
参数2:0
参数3:280912
参数4:0009-0033
参数5:饿了么
参数6:3008693273291180060
参数7:25
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:31:30
参数14:45.8
参数15:0.0
参数16:1.74
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:32.8
参数22:37.06
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:31:32
参数31:郑涵(先生)
参数32:15072043134
参数33:清江山水湖北省武汉市洪山区软件园中路41栋1单元502室
参数34:114.40133013
参数35:30.47371052
参数36:114.40787498918357
参数37:30.479516985613838
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:1人用餐, 不要洋葱，少点辣
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:34:03
参数66:2017-06-21 10:34:03
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286711325115
参数2:B621286736088061
参数3:用户
参数4:0
参数5:商家待接单
参数6:郑涵(先生)支付成功
参数7:郑涵(先生)
参数8:2017-06-21 10:31:32
参数9:0
 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:31:30
参数2:2017-06-21 10:31:30
参数3:280912
 
[INFO][2017-06-21 10:34:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621286736088061,0009-0033 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15072043134
 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:31:30
参数2:2017-06-21 10:31:30
参数3:280912
 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1993
参数2:1708
参数3:4
参数4:6.0
参数5:B621286736088061
 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621286736088061
 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286724658452
参数2:B621286736088061
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:34:03
参数9:0
 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15994292251
参数2:1
 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621286718539158
参数2:9
参数3:B621286736088061
参数4:1
参数5:117
参数6:青豆米鸡丁
参数7:青豆米鸡丁
参数8:0
参数9:null
参数10:2017-06-21 10:34:03
参数11:16.10249
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621286789171224
参数17:9
参数18:B621286736088061
参数19:2
参数20:123
参数21:香滑蒸鸡蛋
参数22:香滑蒸鸡蛋
参数23:0
参数24:null
参数25:2017-06-21 10:34:03
参数26:4.0458517
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621286769203445
参数32:9
参数33:B621286736088061
参数34:1
参数35:3
参数36:农家小炒肉-份
参数37:农家小炒肉
参数38:0
参数39:null
参数40:2017-06-21 10:34:03
参数41:16.911661
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15994292251
参数2:菜大师用户
参数3:2017-06-21 10:33:49
参数4:2017-06-21 10:33:49
参数5:1
参数6:1
参数7:0.0
参数8:30.49149,114.43
参数9:2017-06-21 10:33:49
参数10:2017-06-21 10:33:49
参数11:0
参数12:2017-06-21 10:33:49
参数13:2017-06-21 10:33:49
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15994292251
参数2:1
 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:33:49
参数2:null
参数3:0
参数4:2017-06-21 10:33:49
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303433
参数18:1
 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286836151078
参数2:0
参数3:303433
参数4:0009-0034
参数5:饿了么
参数6:3008693314756177948
参数7:27
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:33:25
参数14:40.8
参数15:-3.3
参数16:1.49
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:24.5
参数22:32.31
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:33:49
参数31:孙冰清 女士
参数32:15994292251
参数33:梓洲花苑高新大道412号梓洲花苑1栋1楼湖北光谷律师事务所
参数34:114.43
参数35:30.49149
参数36:114.43659015667714
参数37:30.49719561655004
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:2人用餐
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:34:04
参数66:2017-06-21 10:34:04
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"鲜菇炒肉丝","price":20.9,"quantity":1,"id":638014838,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286857670850
参数2:B621286836151078
参数3:用户
参数4:0
参数5:商家待接单
参数6:孙冰清 女士支付成功
参数7:孙冰清 女士
参数8:2017-06-21 10:33:49
参数9:0
 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:33:25
参数2:2017-06-21 10:33:25
参数3:303433
 
[INFO][2017-06-21 10:34:05] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621286836151078,0009-0034 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:33:25
参数2:2017-06-21 10:33:25
参数3:303433
 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:肉末鱼香茄条
 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:3798
参数2:3255
参数3:8
参数4:10.0
参数5:B621286836151078
 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621286836151078
 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621286975685366
参数2:B621286836151078
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:34:05
参数9:0
 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:鲜菇炒肉丝
 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18627181885
参数2:1
 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:34:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:95130
参数3:1
 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286982673136
参数2:9
参数3:B621286836151078
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-21 10:34:05
参数11:15.759046
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621286995547437
参数17:9
参数18:B621286836151078
参数19:1
参数20:132
参数21:鲜菇炒肉丝
参数22:鲜菇炒肉丝
参数23:0
参数24:null
参数25:2017-06-21 10:34:05
参数26:16.550957
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286a70497370
参数2:0
参数3:95130
参数4:0009-0035
参数5:美团
参数6:10274160320728388
参数7:8
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:31:13
参数14:41.8
参数15:0.0
参数16:2.0
参数17:4.0
参数18:4.0
参数19:16.0
参数20:0.0
参数21:33.8
参数22:33.0
参数23:14.0
参数24:2.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:31:13
参数31:周(女士)
参数32:18627181885
参数33:鼎业楼B座 (4层416)
参数34:114.423576
参数35:30.486904
参数36:114.43017269663305
参数37:30.492568549926048
参数38:null
参数39:2017-06-21 11:40:00
参数40:11:40
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:34:06
参数66:2017-06-21 10:34:06
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"香酥鸡柳","price":20.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"鲜菇炒肉丝","price":20.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286a06659451
参数2:B621286a70497370
参数3:用户
参数4:0
参数5:商家待接单
参数6:周(女士)支付成功
参数7:周(女士)
参数8:2017-06-21 10:31:13
参数9:0
 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:31:13
参数2:2017-06-21 10:31:13
参数3:95130
 
[INFO][2017-06-21 10:34:06] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621286a70497370,0009-0035 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621286a70497370
 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:31:13
参数2:2017-06-21 10:31:13
参数3:95130
 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286a93136437
参数2:B621286a70497370
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:34:06
参数9:0
 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:香酥鸡柳
 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:34:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2521
参数2:2160
参数3:6
参数4:8.0
参数5:B621286a70497370
 
[INFO][2017-06-21 10:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:34:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B621286a47587262
参数2:9
参数3:B621286a70497370
参数4:1
参数5:127
参数6:香酥鸡柳
参数7:香酥鸡柳
参数8:0
参数9:null
参数10:2017-06-21 10:34:06
参数11:16.5
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621286b87516636
参数17:9
参数18:B621286a70497370
参数19:1
参数20:132
参数21:鲜菇炒肉丝
参数22:鲜菇炒肉丝
参数23:0
参数24:null
参数25:2017-06-21 10:34:07
参数26:16.5
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621286b70511304
参数32:9
参数33:B621286a70497370
参数34:0
参数35:0
参数36:满18.0元赠哈尔滨冰纯白啤330ml*1
参数37:null
参数38:0
参数39:null
参数40:2017-06-21 10:34:07
参数41:0.0
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:34:08
参数4:
参数5:B621286796125244
参数6:B621286736088061
 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-21 10:34:08
参数4:服务不可用
参数5:B621286631286208
参数6:B621286532751187
 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286796125244
参数2:B621286736088061
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:34:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621286631286208
参数2:B621286532751187
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-21 10:34:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18627181885
 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15994292251
 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:34:08
参数4:
参数5:B621286c91765758
参数6:B621286a70497370
 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:34:08
参数4:
参数5:B621286c27170205
参数6:B621286836151078
 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621286c91765758
参数2:B621286a70497370
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:34:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:34:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621286c27170205
参数2:B621286836151078
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:34:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18062797505
参数2:1
 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:17960
参数3:1
 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621289710651062
参数2:0
参数3:17960
参数4:0009-0036
参数5:美团
参数6:10274162944624279
参数7:9
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:38:11
参数14:28.5
参数15:2.0
参数16:1.0
参数17:4.0
参数18:2.0
参数19:12.0
参数20:0.0
参数21:20.5
参数22:22.0
参数23:11.0
参数24:1.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:38:11
参数31:汪(先生)
参数32:18062797505
参数33:光谷坐标城9期 (73栋 2801)
参数34:114.415712
参数35:30.47568
参数36:114.42229679754857
参数37:30.481344213332335
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:39:01
参数66:2017-06-21 10:39:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"手撕鸡+绿豆汤+荷包蛋","price":28.5,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621289789213135
参数2:B621289710651062
参数3:用户
参数4:0
参数5:商家待接单
参数6:汪(先生)支付成功
参数7:汪(先生)
参数8:2017-06-21 10:38:11
参数9:0
 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:38:11
参数2:2017-06-21 10:38:11
参数3:17960
 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621289710651062
 
[INFO][2017-06-21 10:39:01] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621289710651062,0009-0036 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:38:11
参数2:2017-06-21 10:38:11
参数3:17960
 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18062797505
 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621289711542831
参数2:B621289710651062
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:39:01
参数9:0
 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:手撕鸡
 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_prints
             


         WHERE stores_id = ? 
         
            ORDER BY print_id 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2770
参数2:2374
参数3:6
参数4:8.0
参数5:B621289710651062
 
[INFO][2017-06-21 10:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:绿豆汤
 
[INFO][2017-06-21 10:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:荷包蛋
 
[INFO][2017-06-21 10:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621289829304637
参数2:9
参数3:B621289710651062
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:39:02
参数11:16.646389
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621289815862247
参数17:9
参数18:B621289710651062
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 10:39:02
参数26:3.2623575
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621289892104845
参数32:9
参数33:B621289710651062
参数34:5
参数35:38
参数36:荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-21 10:39:02
参数41:2.091255
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B621289974339310
参数47:9
参数48:B621289710651062
参数49:0
参数50:0
参数51:满18.0元赠哈尔滨冰纯白啤330ml*1
参数52:null
参数53:0
参数54:null
参数55:2017-06-21 10:39:03
参数56:0.0
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-21 10:39:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:39:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:39:07
参数4:
参数5:B621289732892725
参数6:B621289710651062
 
[INFO][2017-06-21 10:39:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:39:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621289732892725
参数2:B621289710651062
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:39:07
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:40:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:40:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:40:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:40:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 10:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 10:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18239681673
参数2:1
 
[INFO][2017-06-21 10:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:78683
参数3:1
 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ab68026545
参数2:0
参数3:78683
参数4:0009-0037
参数5:饿了么
参数6:3008693318598234140
参数7:28
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:34:31
参数14:27.9
参数15:-8.0
参数16:0.94
参数17:4.0
参数18:3.0
参数19:16.0
参数20:0.0
参数21:10.9
参数22:21.96
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:34:48
参数31:韩旭(先生)
参数32:18239681673
参数33:武汉职业技术学院(东区)东十A713
参数34:114.41739706
参数35:30.48228999
参数36:114.42398997007247
参数37:30.487950536533248
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:41:01
参数66:2017-06-21 10:41:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"米饭","price":1.0,"quantity":1,"id":92440355,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"鹌鹑蛋烧香菇","price":21.9,"quantity":1,"id":1228943975,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ac03188241
参数2:B62128ab68026545
参数3:用户
参数4:0
参数5:商家待接单
参数6:韩旭(先生)支付成功
参数7:韩旭(先生)
参数8:2017-06-21 10:34:48
参数9:0
 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:34:31
参数2:2017-06-21 10:34:31
参数3:78683
 
[INFO][2017-06-21 10:41:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62128ab68026545,0009-0037 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:34:31
参数2:2017-06-21 10:34:31
参数3:78683
 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18239681673
 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:米饭
 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2306
参数2:1976
参数3:5
参数4:7.0
参数5:B62128ab68026545
 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62128ab68026545
 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ac15832005
参数2:B62128ab68026545
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:41:02
参数9:0
 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15307179713
参数2:1
 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:香滑蒸鸡蛋
 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15307179713
参数2:菜大师用户
参数3:2017-06-21 10:35:44
参数4:2017-06-21 10:35:44
参数5:1
参数6:1
参数7:0.0
参数8:30.48797007,114.42270717
参数9:2017-06-21 10:35:44
参数10:2017-06-21 10:35:44
参数11:0
参数12:2017-06-21 10:35:44
参数13:2017-06-21 10:35:44
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15307179713
参数2:1
 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:35:44
参数2:null
参数3:0
参数4:2017-06-21 10:35:44
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303434
参数18:1
 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:鹌鹑蛋烧香菇
 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ad05318743
参数2:0
参数3:303434
参数4:0009-0038
参数5:饿了么
参数6:3008693359433809948
参数7:29
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:35:21
参数14:30.699999
参数15:-8.0
参数16:1.03
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:12.7
参数22:23.67
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:35:44
参数31:杏子(女士)
参数32:15307179713
参数33:国际企业中心三期锦丰楼-B座106室
参数34:114.42270717
参数35:30.48797007
参数36:114.42930554890098
参数37:30.493632331517606
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:41:03
参数66:2017-06-21 10:41:03
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"阳干鲫鱼","price":26.9,"quantity":1,"id":1228652604,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"百事可乐（听装）","price":3.8,"quantity":1,"id":157948150,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ac58278328
参数2:9
参数3:B62128ab68026545
参数4:3
参数5:50
参数6:米饭
参数7:金枪鱼沙拉
参数8:0
参数9:null
参数10:2017-06-21 10:41:02
参数11:0.0
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128ad91858184
参数17:9
参数18:B62128ab68026545
参数19:2
参数20:123
参数21:香滑蒸鸡蛋
参数22:香滑蒸鸡蛋
参数23:0
参数24:null
参数25:2017-06-21 10:41:03
参数26:3.9354837
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128ad43538270
参数32:9
参数33:B62128ab68026545
参数34:1
参数35:147
参数36:鹌鹑蛋烧香菇
参数37:鹌鹑蛋烧香菇
参数38:0
参数39:null
参数40:2017-06-21 10:41:03
参数41:17.23742
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ad82153231
参数2:B62128ad05318743
参数3:用户
参数4:0
参数5:商家待接单
参数6:杏子(女士)支付成功
参数7:杏子(女士)
参数8:2017-06-21 10:35:44
参数9:0
 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:35:21
参数2:2017-06-21 10:35:21
参数3:303434
 
[INFO][2017-06-21 10:41:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62128ad05318743,0009-0038 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:35:21
参数2:2017-06-21 10:35:21
参数3:303434
 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15307179713
 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:阳干鲫鱼
 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62128ad05318743
 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128ae53140151
参数2:B62128ad05318743
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:41:04
参数9:0
 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2547
参数2:2183
参数3:6
参数4:8.0
参数5:B62128ad05318743
 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:百事可乐（听装）
 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B62128ae23380638
参数2:9
参数3:B62128ad05318743
参数4:1
参数5:136
参数6:阳干鲫鱼
参数7:阳干鲫鱼
参数8:0
参数9:null
参数10:2017-06-21 10:41:04
参数11:20.740164
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128ae82703842
参数17:9
参数18:B62128ad05318743
参数19:6
参数20:73
参数21:百事可乐（听装）
参数22:百事可乐（听装）
参数23:0
参数24:null
参数25:2017-06-21 10:41:04
参数26:2.9298372
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15629184057
参数2:1
 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:126363
参数3:1
 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128af76267236
参数2:0
参数3:126363
参数4:0009-0039
参数5:饿了么
参数6:3008693324704981020
参数7:30
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:36:14
参数14:23.4
参数15:-1.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:12.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:36:30
参数31:林(先生)
参数32:15629184057
参数33:清江山水软件园中路4栋3单元
参数34:114.40236999
参数35:30.47382007
参数36:114.40891900366222
参数37:30.479611360195776
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:41:05
参数66:2017-06-21 10:41:05
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"鲜菇炒肉丝","price":20.9,"quantity":1,"id":638014838,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128af82233550
参数2:B62128af76267236
参数3:用户
参数4:0
参数5:商家待接单
参数6:林(先生)支付成功
参数7:林(先生)
参数8:2017-06-21 10:36:30
参数9:0
 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:36:14
参数2:2017-06-21 10:36:14
参数3:126363
 
[INFO][2017-06-21 10:41:05] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62128af76267236,0009-0039 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:36:14
参数2:2017-06-21 10:36:14
参数3:126363
 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62128af76267236
 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1879
参数2:1610
参数3:4
参数4:6.0
参数5:B62128af76267236
 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128af31183037
参数2:B62128af76267236
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:41:05
参数9:0
 
[INFO][2017-06-21 10:41:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:41:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128af14264285
参数2:9
参数3:B62128af76267236
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-21 10:41:05
参数11:1.7873931
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128af32953032
参数17:9
参数18:B62128af76267236
参数19:1
参数20:132
参数21:鲜菇炒肉丝
参数22:鲜菇炒肉丝
参数23:0
参数24:null
参数25:2017-06-21 10:41:05
参数26:14.942606
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:41:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:41:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:41:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:41:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15387148039
参数2:1
 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:68807
参数3:1
 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128b181881580
参数2:0
参数3:68807
参数4:0009-0040
参数5:饿了么
参数6:3008693411535546396
参数7:31
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:38:15
参数14:24.9
参数15:0.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:38:27
参数31:陆建斌 先生
参数32:15387148039
参数33:光谷坐标城关山大道519号坐标城78栋402
参数34:114.41105
参数35:30.47739
参数36:114.41762894176868
参数37:30.48308306866506
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:41:07
参数66:2017-06-21 10:41:07
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128b103017065
参数2:B62128b181881580
参数3:用户
参数4:0
参数5:商家待接单
参数6:陆建斌 先生支付成功
参数7:陆建斌 先生
参数8:2017-06-21 10:38:27
参数9:0
 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:38:15
参数2:2017-06-21 10:38:15
参数3:68807
 
[INFO][2017-06-21 10:41:07] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62128b181881580,0009-0040 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:38:15
参数2:2017-06-21 10:38:15
参数3:68807
 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62128b181881580
 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2179
参数2:1867
参数3:5
参数4:7.0
参数5:B62128b181881580
 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128b176858850
参数2:B62128b181881580
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:41:07
参数9:0
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:41:08
参数4:
参数5:B62128ac30529817
参数6:B62128ab68026545
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:41:08
参数4:
参数5:B62128ad44430463
参数6:B62128ad05318743
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128b176965754
参数2:9
参数3:B62128b181881580
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-21 10:41:07
参数11:14.513413
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128b228443834
参数17:9
参数18:B62128b181881580
参数19:2
参数20:123
参数21:香滑蒸鸡蛋
参数22:香滑蒸鸡蛋
参数23:0
参数24:null
参数25:2017-06-21 10:41:08
参数26:3.6465862
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ac30529817
参数2:B62128ab68026545
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:41:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15071402923
参数2:1
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128ad44430463
参数2:B62128ad05318743
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:41:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15387148039
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15629184057
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:263898
参数3:1
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:41:08
参数4:
参数5:B62128b279479420
参数6:B62128b181881580
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:41:08
参数4:
参数5:B62128b245805083
参数6:B62128af76267236
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128b281937561
参数2:0
参数3:263898
参数4:0009-0041
参数5:饿了么
参数6:3008693376412340252
参数7:32
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:39:27
参数14:26.9
参数15:0.0
参数16:0.84
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:16.9
参数22:20.06
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:39:34
参数31:潘(女士)
参数32:15071402923
参数33:光谷软件园F1-3楼 A308
参数34:114.40683939
参数35:30.47840975
参数36:114.41340835448025
参数37:30.4841444151156
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:41:08
参数66:2017-06-21 10:41:08
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"阳干鲫鱼","price":26.9,"quantity":1,"id":1228652604,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128b296846881
参数2:B62128b281937561
参数3:用户
参数4:0
参数5:商家待接单
参数6:潘(女士)支付成功
参数7:潘(女士)
参数8:2017-06-21 10:39:34
参数9:0
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128b279479420
参数2:B62128b181881580
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:41:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128b245805083
参数2:B62128af76267236
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:41:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:39:27
参数2:2017-06-21 10:39:27
参数3:263898
 
[INFO][2017-06-21 10:41:09] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62128b281937561,0009-0041 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:39:27
参数2:2017-06-21 10:39:27
参数3:263898
 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15071402923
 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62128b281937561
 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1655
参数2:1418
参数3:4
参数4:6.0
参数5:B62128b281937561
 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128b323421485
参数2:B62128b281937561
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:41:09
参数9:0
 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B62128b304731646
参数2:9
参数3:B62128b281937561
参数4:1
参数5:136
参数6:阳干鲫鱼
参数7:阳干鲫鱼
参数8:0
参数9:null
参数10:2017-06-21 10:41:09
参数11:20.06
参数12:1
参数13:0
参数14:0
参数15:1
 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:25
 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-21 10:41:09
参数4:服务不可用
参数5:B62128b358267453
参数6:B62128b281937561
 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128b358267453
参数2:B62128b281937561
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-21 10:41:09
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15623989731
参数2:1
 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:101517
参数3:1
 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128bf85984672
参数2:0
参数3:101517
参数4:0009-0042
参数5:美团
参数6:10274161872982210
参数7:10
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:40:03
参数14:41.8
参数15:4.0
参数16:2.0
参数17:4.0
参数18:4.0
参数19:16.0
参数20:0.0
参数21:29.8
参数22:33.0
参数23:14.0
参数24:2.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:40:03
参数31:付玉花(女士)
参数32:15623989731
参数33:光谷总部国际 (总部国际9栋1206)
参数34:114.420808
参数35:30.480474
参数36:114.42739983868226
参数37:30.486131172347406
参数38:null
参数39:2017-06-21 11:50:00
参数40:11:50
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:43:01
参数66:2017-06-21 10:43:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"小炒井岗笋肉丝","price":24.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128bf91535050
参数2:B62128bf85984672
参数3:用户
参数4:0
参数5:商家待接单
参数6:付玉花(女士)支付成功
参数7:付玉花(女士)
参数8:2017-06-21 10:40:03
参数9:0
 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:40:03
参数2:2017-06-21 10:40:03
参数3:101517
 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62128bf85984672
 
[INFO][2017-06-21 10:43:01] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62128bf85984672,0009-0042 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15623989731
 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:40:03
参数2:2017-06-21 10:40:03
参数3:101517
 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128bf62299410
参数2:B62128bf85984672
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:43:01
参数9:0
 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:小炒井岗笋肉丝
 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2950
参数2:2528
参数3:6
参数4:8.0
参数5:B62128bf85984672
 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13147170539
参数2:1
 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:272250
参数3:1
 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:小炒土豆片
 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128c056250417
参数2:0
参数3:272250
参数4:0009-0043
参数5:美团
参数6:10274160737095779
参数7:11
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:42:25
参数14:46.8
参数15:0.0
参数16:2.0
参数17:4.0
参数18:4.0
参数19:19.0
参数20:0.0
参数21:35.8
参数22:35.0
参数23:17.0
参数24:2.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:42:25
参数31:张菊芳(女士)
参数32:13147170539
参数33:洪福添美 (洪福添美广场17楼 1702)
参数34:114.39904
参数35:30.497086
参数36:114.40559677973019
参数37:30.50293356985949
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:43:02
参数66:2017-06-21 10:43:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"橄榄菜豆角肉末","price":23.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128c081038640
参数2:B62128c056250417
参数3:用户
参数4:0
参数5:商家待接单
参数6:张菊芳(女士)支付成功
参数7:张菊芳(女士)
参数8:2017-06-21 10:42:25
参数9:0
 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:42:25
参数2:2017-06-21 10:42:25
参数3:272250
 
[INFO][2017-06-21 10:43:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62128c056250417,0009-0043 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62128c056250417
 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:42:25
参数2:2017-06-21 10:42:25
参数3:272250
 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13147170539
 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128c182448052
参数2:B62128c056250417
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:43:03
参数9:0
 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:新派手撕鸡
 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128c035956870
参数2:9
参数3:B62128bf85984672
参数4:1
参数5:120
参数6:小炒井岗笋肉丝
参数7:小炒井岗笋肉丝
参数8:0
参数9:null
参数10:2017-06-21 10:43:02
参数11:19.657896
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128c088291507
参数17:9
参数18:B62128bf85984672
参数19:1
参数20:24
参数21:小炒土豆片
参数22:小炒土豆片
参数23:0
参数24:null
参数25:2017-06-21 10:43:02
参数26:13.342106
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128c028379142
参数32:9
参数33:B62128bf85984672
参数34:0
参数35:0
参数36:满18.0元赠哈尔滨冰纯白啤330ml*1
参数37:null
参数38:0
参数39:null
参数40:2017-06-21 10:43:02
参数41:0.0
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1877
参数2:1608
参数3:4
参数4:6.0
参数5:B62128c056250417
 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:橄榄菜豆角肉末
 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:43:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:43:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:43:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:43:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128c119335361
参数2:9
参数3:B62128c056250417
参数4:1
参数5:129
参数6:新派手撕鸡
参数7:新派手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:43:03
参数11:17.126068
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128c121975366
参数17:9
参数18:B62128c056250417
参数19:1
参数20:17
参数21:橄榄菜豆角肉末
参数22:橄榄菜豆角肉末
参数23:0
参数24:null
参数25:2017-06-21 10:43:03
参数26:17.873932
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128c217652315
参数32:9
参数33:B62128c056250417
参数34:0
参数35:0
参数36:满18.0元赠哈尔滨冰纯白啤330ml*1
参数37:null
参数38:0
参数39:null
参数40:2017-06-21 10:43:04
参数41:0.0
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:43:07
参数4:
参数5:B62128c023458208
参数6:B62128c056250417
 
[INFO][2017-06-21 10:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:43:07
参数4:
参数5:B62128bf73368686
参数6:B62128bf85984672
 
[INFO][2017-06-21 10:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128c023458208
参数2:B62128c056250417
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:43:07
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128bf73368686
参数2:B62128bf85984672
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:43:07
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:44:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:45:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15629002910
参数2:1
 
[INFO][2017-06-21 10:45:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:242734
参数3:1
 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d384242442
参数2:0
参数3:242734
参数4:0009-0044
参数5:饿了么
参数6:3008693510336437276
参数7:33
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:41:10
参数14:28.5
参数15:-8.0
参数16:0.92
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.5
参数22:21.58
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:41:13
参数31:李宪军(女士)
参数32:15629002910
参数33:当代学生公寓5A
参数34:114.3954695
参数35:30.49472965
参数36:114.40200881290859
参数37:30.500636296162984
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:45:01
参数66:2017-06-21 10:45:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"手撕鸡+绿豆汤+荷包蛋","price":28.5,"quantity":1,"id":126723271,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d474435664
参数2:B62128d384242442
参数3:用户
参数4:0
参数5:商家待接单
参数6:李宪军(女士)支付成功
参数7:李宪军(女士)
参数8:2017-06-21 10:41:13
参数9:0
 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:41:10
参数2:2017-06-21 10:41:10
参数3:242734
 
[INFO][2017-06-21 10:45:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62128d384242442,0009-0044 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:41:10
参数2:2017-06-21 10:41:10
参数3:242734
 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15629002910
 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62128d384242442
 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1763
参数2:1511
参数3:4
参数4:6.0
参数5:B62128d384242442
 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128d403576224
参数2:B62128d384242442
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:45:02
参数9:0
 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18566201875
参数2:1
 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B62128d430654854
参数2:9
参数3:B62128d384242442
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:45:02
参数11:16.328594
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128d416146808
参数17:9
参数18:B62128d384242442
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 10:45:02
参数26:3.200076
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128d473935268
参数32:9
参数33:B62128d384242442
参数34:5
参数35:38
参数36:荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-21 10:45:02
参数41:2.051331
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18566201875
参数2:菜大师用户
参数3:2017-06-21 10:41:20
参数4:2017-06-21 10:41:20
参数5:1
参数6:1
参数7:0.0
参数8:30.47778002,114.40868994
参数9:2017-06-21 10:41:20
参数10:2017-06-21 10:41:20
参数11:0
参数12:2017-06-21 10:41:20
参数13:2017-06-21 10:41:20
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18566201875
参数2:1
 
[INFO][2017-06-21 10:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:41:20
参数2:null
参数3:0
参数4:2017-06-21 10:41:20
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303435
参数18:1
 
[INFO][2017-06-21 10:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d555424155
参数2:0
参数3:303435
参数4:0009-0045
参数5:饿了么
参数6:3008693423095023644
参数7:34
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:41:11
参数14:28.5
参数15:0.0
参数16:0.92
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:18.5
参数22:21.58
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:41:20
参数31:胡(女士)
参数32:18566201875
参数33:光谷软件园关山一路1号 软件园f4栋15楼 卷皮网
参数34:114.40868994
参数35:30.47778002
参数36:114.4152635622079
参数37:30.48349464184699
参数38:null
参数39:2017-06-21 12:15:11
参数40:12:15
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:45:03
参数66:2017-06-21 10:45:03
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"手撕鸡+雪花蛋酒+爱心荷包蛋","price":28.5,"quantity":1,"id":123877083,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d518110806
参数2:B62128d555424155
参数3:用户
参数4:0
参数5:商家待接单
参数6:胡(女士)支付成功
参数7:胡(女士)
参数8:2017-06-21 10:41:20
参数9:0
 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:41:11
参数2:2017-06-21 10:41:11
参数3:303435
 
[INFO][2017-06-21 10:45:04] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62128d555424155,0009-0045 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18566201875
 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:41:11
参数2:2017-06-21 10:41:11
参数3:303435
 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62128d555424155
 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1895
参数2:1624
参数3:4
参数4:6.0
参数5:B62128d555424155
 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d680642116
参数2:B62128d555424155
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:45:04
参数9:0
 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:雪花蛋酒
 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15641152983
参数2:1
 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:爱心荷包蛋
 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:302044
参数3:1
 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128d657730032
参数2:9
参数3:B62128d555424155
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:45:04
参数11:16.580772
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128d680288432
参数17:9
参数18:B62128d555424155
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-21 10:45:04
参数26:2.9162164
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128d602711434
参数32:9
参数33:B62128d555424155
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-21 10:45:04
参数41:2.0830116
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d691976154
参数2:0
参数3:302044
参数4:0009-0046
参数5:饿了么
参数6:3008693511452267548
参数7:35
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:41:23
参数14:24.4
参数15:-3.0
参数16:0.72
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:11.4
参数22:17.68
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:41:48
参数31:陈(先生)
参数32:15641152983
参数33:光谷总部国际9栋关谷大道62号光谷总部国际 9栋605
参数34:114.41983016
参数35:30.48071
参数36:114.42642231628898
参数37:30.4863669452905
参数38:null
参数39:2017-06-21 11:45:22
参数40:11:45
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:45:04
参数66:2017-06-21 10:45:04
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":108171986,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d752069010
参数2:B62128d691976154
参数3:用户
参数4:0
参数5:商家待接单
参数6:陈(先生)支付成功
参数7:陈(先生)
参数8:2017-06-21 10:41:48
参数9:0
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:41:23
参数2:2017-06-21 10:41:23
参数3:302044
 
[INFO][2017-06-21 10:45:05] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62128d691976154,0009-0046 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:41:23
参数2:2017-06-21 10:41:23
参数3:302044
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2983
参数2:2556
参数3:6
参数4:8.0
参数5:B62128d691976154
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62128d691976154
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128d739618307
参数2:B62128d691976154
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:45:05
参数9:0
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:农家小炒肉-份
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17771727870
参数2:1
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17771727870
参数2:菜大师用户
参数3:2017-06-21 10:42:14
参数4:2017-06-21 10:42:14
参数5:1
参数6:1
参数7:0.0
参数8:30.48239015,114.41749044
参数9:2017-06-21 10:42:14
参数10:2017-06-21 10:42:14
参数11:0
参数12:2017-06-21 10:42:14
参数13:2017-06-21 10:42:14
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d710019710
参数2:9
参数3:B62128d691976154
参数4:2
参数5:47
参数6:雪花蛋酒
参数7:雪花蛋酒
参数8:0
参数9:null
参数10:2017-06-21 10:45:05
参数11:2.5360656
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128d708107261
参数17:9
参数18:B62128d691976154
参数19:1
参数20:3
参数21:农家小炒肉-份
参数22:农家小炒肉
参数23:0
参数24:null
参数25:2017-06-21 10:45:05
参数26:15.143934
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17771727870
参数2:1
 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:42:14
参数2:null
参数3:0
参数4:2017-06-21 10:42:14
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303436
参数18:1
 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d878639514
参数2:0
参数3:303436
参数4:0009-0047
参数5:饿了么
参数6:3008693472587717660
参数7:36
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:41:58
参数14:39.9
参数15:-20.0
参数16:1.14
参数17:4.0
参数18:2.0
参数19:21.0
参数20:0.0
参数21:0.9
参数22:25.76
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:42:14
参数31:黎明(先生)
参数32:17771727870
参数33:武汉职业技术学院(东区)关山大道463号 东10A
参数34:114.41749044
参数35:30.48239015
参数36:114.42408351062741
参数37:30.48805049909593
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:45:06
参数66:2017-06-21 10:45:06
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪碧（听装）","price":3.8,"quantity":3,"id":157948394,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"手撕鸡+绿豆汤+荷包蛋","price":28.5,"quantity":1,"id":126723271,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d893580418
参数2:B62128d878639514
参数3:用户
参数4:0
参数5:商家待接单
参数6:黎明(先生)支付成功
参数7:黎明(先生)
参数8:2017-06-21 10:42:14
参数9:0
 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:41:58
参数2:2017-06-21 10:41:58
参数3:303436
 
[INFO][2017-06-21 10:45:06] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62128d878639514,0009-0047 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:41:58
参数2:2017-06-21 10:41:58
参数3:303436
 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:雪碧（听装）
 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62128d878639514
 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2314
参数2:1983
参数3:5
参数4:7.0
参数5:B62128d878639514
 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d839074270
参数2:B62128d878639514
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:45:06
参数9:0
 
[INFO][2017-06-21 10:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15271892028
参数2:1
 
[INFO][2017-06-21 10:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:303268
参数3:1
 
[INFO][2017-06-21 10:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B62128d866105873
参数2:9
参数3:B62128d878639514
参数4:6
参数5:74
参数6:雪碧（听装）
参数7:雪碧（听装）
参数8:0
参数9:null
参数10:2017-06-21 10:45:06
参数11:2.4533334
参数12:3
参数13:0
参数14:0
参数15:1
参数16:B62128d976919558
参数17:9
参数18:B62128d878639514
参数19:1
参数20:4
参数21:手撕鸡
参数22:手撕鸡
参数23:0
参数24:null
参数25:2017-06-21 10:45:07
参数26:13.922434
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128d914837836
参数32:9
参数33:B62128d878639514
参数34:2
参数35:46
参数36:绿豆汤
参数37:绿豆汤
参数38:0
参数39:null
参数40:2017-06-21 10:45:07
参数41:2.7285173
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B62128d995258428
参数47:9
参数48:B62128d878639514
参数49:5
参数50:38
参数51:荷包蛋
参数52:荷包蛋
参数53:0
参数54:null
参数55:2017-06-21 10:45:07
参数56:1.7490495
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-21 10:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d991848780
参数2:0
参数3:303268
参数4:0009-0048
参数5:饿了么
参数6:3008693475590990876
参数7:37
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:42:37
参数14:22.9
参数15:0.0
参数16:0.74
参数17:4.0
参数18:4.0
参数19:16.0
参数20:0.0
参数21:14.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:43:00
参数31:祝婷(女士)
参数32:15271892028
参数33:光谷软件园C3栋玉树临风边上 12楼
参数34:114.40336006
参数35:30.47684996
参数36:114.40991575505285
参数37:30.482628135743255
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:45:07
参数66:2017-06-21 10:45:07
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"米饭","price":1.0,"quantity":2,"id":92440355,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"鲜菇炒肉丝","price":20.9,"quantity":1,"id":638014838,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d948476015
参数2:B62128d991848780
参数3:用户
参数4:0
参数5:商家待接单
参数6:祝婷(女士)支付成功
参数7:祝婷(女士)
参数8:2017-06-21 10:43:00
参数9:0
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:42:37
参数2:2017-06-21 10:42:37
参数3:303268
 
[INFO][2017-06-21 10:45:08] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62128d991848780,0009-0048 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:42:37
参数2:2017-06-21 10:42:37
参数3:303268
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62128d991848780
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1589
参数2:1362
参数3:4
参数4:6.0
参数5:B62128d991848780
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:点我达
参数3:2017-06-21 10:45:08
参数4:服务不可用
参数5:B62128d456254388
参数6:B62128d384242442
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128da60447288
参数2:B62128d991848780
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:45:08
参数9:0
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:点我达
参数3:2017-06-21 10:45:08
参数4:服务不可用
参数5:B62128d560448531
参数6:B62128d555424155
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:鲜菇炒肉丝
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128d456254388
参数2:B62128d384242442
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-21 10:45:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128d560448531
参数2:B62128d555424155
参数3:点我达
参数4:9
参数5:服务不可用
参数6:系统操作
参数7:2017-06-21 10:45:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18604769991
参数2:1
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15641152983
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:17771727870
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:167276
参数3:1
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128da80754860
参数2:9
参数3:B62128d991848780
参数4:3
参数5:50
参数6:米饭
参数7:金枪鱼沙拉
参数8:0
参数9:null
参数10:2017-06-21 10:45:08
参数11:0.0
参数12:2
参数13:0
参数14:0
参数15:1
参数16:B62128da65601026
参数17:9
参数18:B62128d991848780
参数19:1
参数20:132
参数21:鲜菇炒肉丝
参数22:鲜菇炒肉丝
参数23:0
参数24:null
参数25:2017-06-21 10:45:08
参数26:16.573973
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:45:08
参数4:
参数5:B62128da40439850
参数6:B62128d691976154
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:45:08
参数4:
参数5:B62128da58095432
参数6:B62128d878639514
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128da40439850
参数2:B62128d691976154
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:45:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128da58095432
参数2:B62128d878639514
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:45:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128da79250504
参数2:0
参数3:167276
参数4:0009-0049
参数5:饿了么
参数6:3008693479642640412
参数7:38
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:43:26
参数14:37.8
参数15:-1.0
参数16:1.34
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:23.8
参数22:29.46
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:43:34
参数31:冯允昊(先生)
参数32:18604769991
参数33:中南民族大学民族大道182号 南区4栋306
参数34:114.39513959
参数35:30.48313983
参数36:114.40166706666191
参数37:30.48904942943049
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:45:08
参数66:2017-06-21 10:45:08
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"香酥鸡柳","price":20.9,"quantity":1,"id":560222731,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128db19552641
参数2:B62128da79250504
参数3:用户
参数4:0
参数5:商家待接单
参数6:冯允昊(先生)支付成功
参数7:冯允昊(先生)
参数8:2017-06-21 10:43:34
参数9:0
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15271892028
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:43:26
参数2:2017-06-21 10:43:26
参数3:167276
 
[INFO][2017-06-21 10:45:09] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62128da79250504,0009-0049 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18604769991
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:43:26
参数2:2017-06-21 10:43:26
参数3:167276
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:香酥鸡柳
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62128da79250504
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1276
参数2:1093
参数3:3
参数4:5.0
参数5:B62128da79250504
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128db82709038
参数2:B62128da79250504
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:45:09
参数9:0
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:45:09
参数4:
参数5:B62128db97559252
参数6:B62128d991848780
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827100444
参数2:1
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128db97559252
参数2:B62128d991848780
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:45:09
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:45:09
参数4:
参数5:B62128db59155707
参数6:B62128da79250504
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128db65657440
参数2:9
参数3:B62128da79250504
参数4:1
参数5:127
参数6:香酥鸡柳
参数7:香酥鸡柳
参数8:0
参数9:null
参数10:2017-06-21 10:45:09
参数11:16.288729
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128db63888075
参数17:9
参数18:B62128da79250504
参数19:1
参数20:24
参数21:小炒土豆片
参数22:小炒土豆片
参数23:0
参数24:null
参数25:2017-06-21 10:45:09
参数26:13.171269
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128db59155707
参数2:B62128da79250504
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:45:09
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:303412
参数3:1
 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211983e02223783
参数2:0
参数3:303412
参数4:0009-0050
参数5:饿了么
参数6:3008693481379185692
参数7:39
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:43:44
参数14:29.8
参数15:-19.8
参数16:0.99
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:0.01
参数22:22.81
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:44:05
参数31:郑好(先生)
参数32:15827100444
参数33:学府佳园武汉市洪山区佳园路学府家园一区一栋6单元202
参数34:114.43015298
参数35:30.50165403
参数36:114.43674936544953
参数37:30.50736278312431
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:45:10
参数66:2017-06-21 10:45:10
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"绿豆汤","price":3.9,"quantity":1,"id":126727061,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"鲜菇炒肉丝","price":20.9,"quantity":1,"id":638014838,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211983e90307754
参数2:B6211983e02223783
参数3:用户
参数4:0
参数5:商家待接单
参数6:郑好(先生)支付成功
参数7:郑好(先生)
参数8:2017-06-21 10:44:05
参数9:0
 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:43:44
参数2:2017-06-21 10:43:44
参数3:303412
 
[INFO][2017-06-21 10:45:10] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6211983e02223783,0009-0050 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:43:44
参数2:2017-06-21 10:43:44
参数3:303412
 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15827100444
 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:4323
参数2:3705
参数3:9
参数4:11.0
参数5:B6211983e02223783
 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6211983e02223783
 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211983e53194224
参数2:B6211983e02223783
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:45:10
参数9:0
 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13971610337
参数2:1
 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6211983e53091677
参数2:9
参数3:B6211983e02223783
参数4:2
参数5:123
参数6:香滑蒸鸡蛋
参数7:香滑蒸鸡蛋
参数8:0
参数9:null
参数10:2017-06-21 10:45:10
参数11:3.827181
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211983e95712763
参数17:9
参数18:B6211983e02223783
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 10:45:10
参数26:2.9852014
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6211983f51095211
参数32:9
参数33:B6211983e02223783
参数34:1
参数35:132
参数36:鲜菇炒肉丝
参数37:鲜菇炒肉丝
参数38:0
参数39:null
参数40:2017-06-21 10:45:11
参数41:15.997617
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:45:11
参数4:
参数5:B6211983e11661750
参数6:B6211983e02223783
 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13971610337
参数2:菜大师用户
参数3:2017-06-21 10:44:44
参数4:2017-06-21 10:44:44
参数5:1
参数6:1
参数7:0.0
参数8:30.47762998,114.40282999
参数9:2017-06-21 10:44:44
参数10:2017-06-21 10:44:44
参数11:0
参数12:2017-06-21 10:44:44
参数13:2017-06-21 10:44:44
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211983e11661750
参数2:B6211983e02223783
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:45:11
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13971610337
参数2:1
 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:44:44
参数2:null
参数3:0
参数4:2017-06-21 10:44:44
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303437
参数18:1
 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211983f72469081
参数2:0
参数3:303437
参数4:0009-0051
参数5:饿了么
参数6:3008693484524891164
参数7:42
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:44:20
参数14:29.9
参数15:-8.0
参数16:0.99
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:11.9
参数22:22.91
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:44:44
参数31:张雨(先生)
参数32:13971610337
参数33:光谷E城软件园中路光谷E城旁 光谷E城E1栋
参数34:114.40282999
参数35:30.47762998
参数36:114.40938450350112
参数37:30.483415737400016
参数38:null
参数39:2017-06-21 12:00:19
参数40:12:00
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:45:11
参数66:2017-06-21 10:45:11
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"加多宝（听装）","price":5.0,"quantity":1,"id":571184455,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211983f76772255
参数2:B6211983f72469081
参数3:用户
参数4:0
参数5:商家待接单
参数6:张雨(先生)支付成功
参数7:张雨(先生)
参数8:2017-06-21 10:44:44
参数9:0
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:44:20
参数2:2017-06-21 10:44:20
参数3:303437
 
[INFO][2017-06-21 10:45:12] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6211983f72469081,0009-0051 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:44:20
参数2:2017-06-21 10:44:20
参数3:303437
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13971610337
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:肉末鱼香茄条
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6211983f72469081
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1455
参数2:1247
参数3:3
参数4:5.0
参数5:B6211983f72469081
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211984033651430
参数2:B6211983f72469081
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:45:12
参数9:0
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18672331921
参数2:1
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:45:12
参数4:
参数5:B6211984014769303
参数6:B6211983f72469081
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211984014769303
参数2:B6211983f72469081
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:45:12
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:297472
参数3:1
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:加多宝（听装）
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211984044339110
参数2:9
参数3:B6211983f72469081
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-21 10:45:12
参数11:15.247792
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211984090944871
参数17:9
参数18:B6211983f72469081
参数19:2
参数20:123
参数21:香滑蒸鸡蛋
参数22:香滑蒸鸡蛋
参数23:0
参数24:null
参数25:2017-06-21 10:45:12
参数26:3.8311038
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6211984172638461
参数32:9
参数33:B6211983f72469081
参数34:6
参数35:71
参数36:加多宝（听装）
参数37:加多宝
参数38:0
参数39:null
参数40:2017-06-21 10:45:13
参数41:3.8311038
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211984015284433
参数2:0
参数3:297472
参数4:0009-0052
参数5:饿了么
参数6:3008693452488679452
参数7:40
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:44:28
参数14:40.8
参数15:-8.0
参数16:1.49
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:19.8
参数22:32.31
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:44:30
参数31:王(女士)
参数32:18672331921
参数33:SBI创业街东湖开发区光谷创业街 3栋702室
参数34:114.42220978
参数35:30.50000958
参数36:114.42881740872734
参数37:30.505673070763663
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:45:12
参数66:2017-06-21 10:45:12
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香酥鸡柳","price":20.9,"quantity":1,"id":560222731,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211984162756455
参数2:B6211984015284433
参数3:用户
参数4:0
参数5:商家待接单
参数6:王(女士)支付成功
参数7:王(女士)
参数8:2017-06-21 10:44:30
参数9:0
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:44:28
参数2:2017-06-21 10:44:28
参数3:297472
 
[INFO][2017-06-21 10:45:13] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6211984015284433,0009-0052 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:44:28
参数2:2017-06-21 10:44:28
参数3:297472
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18672331921
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6211984015284433
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:3298
参数2:2826
参数3:7
参数4:9.0
参数5:B6211984015284433
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211984198254428
参数2:B6211984015284433
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:45:13
参数9:0
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211984130418844
参数2:9
参数3:B6211984015284433
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-21 10:45:13
参数11:15.759046
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211984134159425
参数17:9
参数18:B6211984015284433
参数19:1
参数20:127
参数21:香酥鸡柳
参数22:香酥鸡柳
参数23:0
参数24:null
参数25:2017-06-21 10:45:13
参数26:16.550957
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17137213761
参数2:1
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:45:13
参数4:
参数5:B6211984120044536
参数6:B6211984015284433
 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211984120044536
参数2:B6211984015284433
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:45:13
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:16220
参数3:1
 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211984265794455
参数2:0
参数3:16220
参数4:0009-0053
参数5:饿了么
参数6:3008693526929168412
参数7:41
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:44:39
参数14:24.9
参数15:0.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.9
参数22:18.16
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:44:41
参数31:陈亚(先生)
参数32:17137213761
参数33:中国光谷创意产业基地C座27楼云天下
参数34:114.41086002
参数35:30.48412018
参数36:114.41744533468311
参数37:30.48981660996558
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:45:14
参数66:2017-06-21 10:45:14
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"加多宝（听装）","price":5.0,"quantity":1,"id":571184455,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":638012691,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211984254793555
参数2:B6211984265794455
参数3:用户
参数4:0
参数5:商家待接单
参数6:陈亚(先生)支付成功
参数7:陈亚(先生)
参数8:2017-06-21 10:44:41
参数9:0
 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:44:39
参数2:2017-06-21 10:44:39
参数3:16220
 
[INFO][2017-06-21 10:45:14] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B6211984265794455,0009-0053 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:44:39
参数2:2017-06-21 10:44:39
参数3:16220
 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:17137213761
 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B6211984265794455
 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1472
参数2:1261
参数3:3
参数4:5.0
参数5:B6211984265794455
 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211984247069168
参数2:B6211984265794455
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:45:14
参数9:0
 
[INFO][2017-06-21 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B6211984201069138
参数2:9
参数3:B6211984265794455
参数4:6
参数5:71
参数6:加多宝（听装）
参数7:加多宝
参数8:0
参数9:null
参数10:2017-06-21 10:45:14
参数11:3.6465862
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211984267121755
参数17:9
参数18:B6211984265794455
参数19:1
参数20:130
参数21:肉末鱼香茄条
参数22:肉末鱼香茄条
参数23:0
参数24:null
参数25:2017-06-21 10:45:14
参数26:14.513413
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:45:15
参数4:
参数5:B6211984284524470
参数6:B6211984265794455
 
[INFO][2017-06-21 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211984284524470
参数2:B6211984265794455
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:45:15
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15071104964
参数2:2
 
[INFO][2017-06-21 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15071104964
参数2:菜大师用户
参数3:2017-06-21 10:43:12
参数4:2017-06-21 10:43:12
参数5:1
参数6:1
参数7:0.0
参数8:30.49188006,114.40314984
参数9:2017-06-21 10:43:12
参数10:2017-06-21 10:43:12
参数11:0
参数12:2017-06-21 10:43:12
参数13:2017-06-21 10:43:12
参数14:0
参数15:1
参数16:2
 
[INFO][2017-06-21 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15071104964
参数2:2
 
[INFO][2017-06-21 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:43:12
参数2:null
参数3:0
参数4:2017-06-21 10:43:12
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303438
参数18:2
 
[INFO][2017-06-21 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNo: 
select top 1 convert(int,substring(order_no,6,4)) as order_no
            from cds_order_info
            where create_date >?
            and create_date < ? + ' 23:59:59'
            and stores_id=?
            and brand_id=?
            order by order_no desc 
[INFO][2017-06-21 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:9
参数4:2
 
[INFO][2017-06-21 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211984465444550
参数2:0
参数3:303438
参数4:0009-2001
参数5:饿了么
参数6:3008693477805437955
参数7:1
参数8:156059492
参数9:帅小锅(光谷店)
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:43:05
参数14:54.8
参数15:-1.7
参数16:1.79
参数17:4.0
参数18:4.0
参数19:25.0
参数20:0.0
参数21:33.1
参数22:38.01
参数23:20.0
参数24:5.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:43:12
参数31:郭静(女士)
参数32:15071104964
参数33:光谷青年城新竹路 4栋2413
参数34:114.40314984
参数35:30.49188006
参数36:114.40971922399964
参数37:30.49766498660599
参数38:null
参数39:2017-06-21 12:00:05
参数40:12:00
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:45:16
参数66:2017-06-21 10:45:16
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"馋嘴牛蛙+小炒土豆片(赠特饮+蒸蛋)","price":27.9,"quantity":1,"id":1228954005,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"小米椒鸡丁+小炒土豆片(赠特饮+蒸蛋)","price":26.9,"quantity":1,"id":1228372111,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:2
 
[INFO][2017-06-21 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211984408613345
参数2:B6211984465444550
参数3:用户
参数4:0
参数5:商家待接单
参数6:郭静(女士)支付成功
参数7:郭静(女士)
参数8:2017-06-21 10:43:12
参数9:0
 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:43:05
参数2:2017-06-21 10:43:05
参数3:303438
 
[INFO][2017-06-21 10:45:17] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B6211984465444550,0009-2001 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15071104964
 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:43:05
参数2:2017-06-21 10:43:05
参数3:303438
 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B6211984465444550
 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:馋嘴牛蛙
 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211984583579765
参数2:B6211984465444550
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:45:17
参数9:0
 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:688
参数2:589
参数3:2
参数4:4.0
参数5:B6211984465444550
 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:小炒土豆片(赠特饮
 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:45:17
参数4:
参数5:B6211984560253556
参数6:B6211984465444550
 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211984560253556
参数2:B6211984465444550
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:45:17
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:45:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:蒸蛋)
 
[INFO][2017-06-21 10:45:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:45:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
 
[INFO][2017-06-21 10:45:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:45:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:小米椒鸡丁
 
[INFO][2017-06-21 10:45:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:45:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B6211984635825165
参数2:9
参数3:B6211984465444550
参数4:10
参数5:139
参数6:馋嘴牛蛙
参数7:馋嘴牛蛙+小炒土豆片(赠特饮+蒸蛋)
参数8:0
参数9:null
参数10:2017-06-21 10:45:18
参数11:6.4506016
参数12:1
参数13:0
参数14:0
参数15:2
参数16:B6211984617392718
参数17:9
参数18:B6211984465444550
参数19:10
参数20:139
参数21:小炒土豆片(赠特饮
参数22:馋嘴牛蛙+小炒土豆片(赠特饮+蒸蛋)
参数23:0
参数24:null
参数25:2017-06-21 10:45:18
参数26:6.4506016
参数27:1
参数28:0
参数29:0
参数30:2
参数31:B6211984628883047
参数32:9
参数33:B6211984465444550
参数34:10
参数35:139
参数36:蒸蛋)
参数37:馋嘴牛蛙+小炒土豆片(赠特饮+蒸蛋)
参数38:0
参数39:null
参数40:2017-06-21 10:45:18
参数41:6.4506016
参数42:1
参数43:0
参数44:0
参数45:2
参数46:B6211984662828820
参数47:9
参数48:B6211984465444550
参数49:10
参数50:137
参数51:小米椒鸡丁
参数52:小米椒鸡丁+小炒土豆片(赠特饮+蒸蛋)
参数53:0
参数54:null
参数55:2017-06-21 10:45:18
参数56:6.068989
参数57:1
参数58:0
参数59:0
参数60:2
参数61:B6211984780452350
参数62:9
参数63:B6211984465444550
参数64:10
参数65:139
参数66:小炒土豆片(赠特饮
参数67:馋嘴牛蛙+小炒土豆片(赠特饮+蒸蛋)
参数68:0
参数69:null
参数70:2017-06-21 10:45:19
参数71:6.294602
参数72:1
参数73:0
参数74:0
参数75:2
参数76:B6211984778435248
参数77:9
参数78:B6211984465444550
参数79:10
参数80:139
参数81:蒸蛋)
参数82:馋嘴牛蛙+小炒土豆片(赠特饮+蒸蛋)
参数83:0
参数84:null
参数85:2017-06-21 10:45:19
参数86:6.294602
参数87:1
参数88:0
参数89:0
参数90:2
 
[INFO][2017-06-21 10:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:46:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15172338545
参数2:1
 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:290542
参数3:1
 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128e752459727
参数2:0
参数3:290542
参数4:0009-0054
参数5:美团
参数6:10274160288975760
参数7:12
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:43:40
参数14:28.5
参数15:4.0
参数16:1.0
参数17:4.0
参数18:2.0
参数19:12.0
参数20:0.0
参数21:18.5
参数22:22.0
参数23:11.0
参数24:1.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:43:40
参数31:小梅(女士)
参数32:15172338545
参数33:马应龙医药物流有限公司 (304)
参数34:114.423497
参数35:30.476411
参数36:114.43008328991694
参数37:30.482072506029276
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:47:01
参数66:2017-06-21 10:47:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"手撕鸡+雪花蛋酒+爱心荷包蛋","price":28.5,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128e701492117
参数2:B62128e752459727
参数3:用户
参数4:0
参数5:商家待接单
参数6:小梅(女士)支付成功
参数7:小梅(女士)
参数8:2017-06-21 10:43:40
参数9:0
 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62128e752459727
 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15172338545
 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:43:40
参数2:2017-06-21 10:43:40
参数3:290542
 
[INFO][2017-06-21 10:47:01] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62128e752459727,0009-0054 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:43:40
参数2:2017-06-21 10:43:40
参数3:290542
 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128e728619208
参数2:B62128e752459727
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:47:01
参数9:0
 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:3536
参数2:3030
参数3:8
参数4:10.0
参数5:B62128e752459727
 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18871461502
参数2:1
 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18871461502
参数2:菜大师用户
参数3:2017-06-21 10:44:51
参数4:2017-06-21 10:44:51
参数5:1
参数6:1
参数7:0.0
参数8:30.501246,114.431416
参数9:2017-06-21 10:44:51
参数10:2017-06-21 10:44:51
参数11:0
参数12:2017-06-21 10:44:51
参数13:2017-06-21 10:44:51
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18871461502
参数2:1
 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:44:51
参数2:null
参数3:0
参数4:null
参数5:null
参数6:0
参数7:2017-06-21 10:44:51
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303439
参数18:1
 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128e894487800
参数2:9
参数3:B62128e752459727
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:47:02
参数11:16.903475
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128e829885675
参数17:9
参数18:B62128e752459727
参数19:2
参数20:47
参数21:雪花蛋酒
参数22:雪花蛋酒
参数23:0
参数24:null
参数25:2017-06-21 10:47:02
参数26:2.972973
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128e883409625
参数32:9
参数33:B62128e752459727
参数34:5
参数35:38
参数36:爱心荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-21 10:47:02
参数41:2.123552
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B62128e830643320
参数47:9
参数48:B62128e752459727
参数49:0
参数50:0
参数51:满18.0元赠哈尔滨冰纯白啤330ml*1
参数52:null
参数53:0
参数54:null
参数55:2017-06-21 10:47:02
参数56:0.0
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128e849690385
参数2:0
参数3:303439
参数4:0009-0055
参数5:美团
参数6:10274160842734171
参数7:13
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:44:51
参数14:67.6
参数15:4.0
参数16:3.0
参数17:4.0
参数18:8.0
参数19:23.0
参数20:0.0
参数21:52.6
参数22:56.0
参数23:19.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:44:51
参数31:熊雅莉(女士)
参数32:18871461502
参数33:佳园路11号 (武汉磁电公司)
参数34:114.431416
参数35:30.501246
参数36:114.43800896803432
参数37:30.506966848996527
参数38:null
参数39:2017-06-21 11:50:00
参数40:11:50
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:47:02
参数66:2017-06-21 10:47:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"小炒土豆片","price":16.9,"quantity":4,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128e973958300
参数2:B62128e849690385
参数3:用户
参数4:0
参数5:商家待接单
参数6:熊雅莉(女士)支付成功
参数7:熊雅莉(女士)
参数8:2017-06-21 10:44:51
参数9:0
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:44:51
参数2:2017-06-21 10:44:51
参数3:303439
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62128e849690385
 
[INFO][2017-06-21 10:47:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62128e849690385,0009-0055 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:44:51
参数2:2017-06-21 10:44:51
参数3:303439
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18871461502
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128e929710267
参数2:B62128e849690385
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:47:03
参数9:0
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:4340
参数2:3720
参数3:9
参数4:11.0
参数5:B62128e849690385
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15527452978
参数2:1
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15527452978
参数2:菜大师用户
参数3:2017-06-21 10:44:59
参数4:2017-06-21 10:44:59
参数5:1
参数6:1
参数7:0.0
参数8:30.47918,114.409304
参数9:2017-06-21 10:44:59
参数10:2017-06-21 10:44:59
参数11:0
参数12:2017-06-21 10:44:59
参数13:2017-06-21 10:44:59
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15527452978
参数2:1
 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B62128e920185646
参数2:9
参数3:B62128e849690385
参数4:1
参数5:24
参数6:小炒土豆片
参数7:小炒土豆片
参数8:0
参数9:null
参数10:2017-06-21 10:47:03
参数11:14.0
参数12:4
参数13:0
参数14:0
参数15:1
参数16:B62128e910114586
参数17:9
参数18:B62128e849690385
参数19:0
参数20:0
参数21:满18.0元赠哈尔滨冰纯白啤330ml*1
参数22:null
参数23:0
参数24:null
参数25:2017-06-21 10:47:03
参数26:0.0
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:44:59
参数2:null
参数3:0
参数4:null
参数5:null
参数6:0
参数7:2017-06-21 10:44:59
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303440
参数18:1
 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ea85867525
参数2:0
参数3:303440
参数4:0009-0056
参数5:美团
参数6:10274160876822961
参数7:14
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:44:59
参数14:45.4
参数15:0.0
参数16:2.0
参数17:4.0
参数18:4.0
参数19:16.0
参数20:0.0
参数21:37.4
参数22:37.0
参数23:14.0
参数24:2.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:44:59
参数31:张(女士)
参数32:15527452978
参数33:软件园四期E1栋1808
参数34:114.409304
参数35:30.47918
参数36:114.41588063904236
参数37:30.484888984837305
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:不要啤酒，换瓶可乐可以把
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:47:04
参数66:2017-06-21 10:47:04
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"手撕鸡+绿豆汤+荷包蛋","price":28.5,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ea72910560
参数2:B62128ea85867525
参数3:用户
参数4:0
参数5:商家待接单
参数6:张(女士)支付成功
参数7:张(女士)
参数8:2017-06-21 10:44:59
参数9:0
 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62128ea85867525
 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:44:59
参数2:2017-06-21 10:44:59
参数3:303440
 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:44:59
参数2:2017-06-21 10:44:59
参数3:303440
 
[INFO][2017-06-21 10:47:04] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62128ea85867525,0009-0056 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ea54792660
参数2:B62128ea85867525
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:47:04
参数9:0
 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1792
参数2:1536
参数3:4
参数4:6.0
参数5:B62128ea85867525
 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827086804
参数2:1
 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:245423
参数3:1
 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128eb90433414
参数2:0
参数3:245423
参数4:0009-0057
参数5:美团
参数6:10274161911424051
参数7:15
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:45:32
参数14:26.8
参数15:0.0
参数16:1.0
参数17:4.0
参数18:2.0
参数19:12.0
参数20:0.0
参数21:20.8
参数22:20.0
参数23:11.0
参数24:1.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:45:32
参数31:王亚(女士)
参数32:15827086804
参数33:中南财经政法大学南湖校区环湖公寓17号楼 (环湖17栋522)
参数34:114.378194
参数35:30.47381
参数36:114.38463486314429
参数37:30.480007219444285
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:47:05
参数66:2017-06-21 10:47:05
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"绿豆汤","price":3.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128eb60848244
参数2:B62128eb90433414
参数3:用户
参数4:0
参数5:商家待接单
参数6:王亚(女士)支付成功
参数7:王亚(女士)
参数8:2017-06-21 10:45:32
参数9:0
 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128eb16601741
参数2:9
参数3:B62128ea85867525
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:47:05
参数11:17.574705
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128eb40720343
参数17:9
参数18:B62128ea85867525
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 10:47:05
参数26:3.444289
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128eb97688414
参数32:9
参数33:B62128ea85867525
参数34:5
参数35:38
参数36:荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-21 10:47:05
参数41:2.2078776
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B62128eb90505568
参数47:9
参数48:B62128ea85867525
参数49:1
参数50:24
参数51:小炒土豆片
参数52:小炒土豆片
参数53:0
参数54:null
参数55:2017-06-21 10:47:05
参数56:13.773127
参数57:1
参数58:0
参数59:0
参数60:1
参数61:B62128eb33555831
参数62:9
参数63:B62128ea85867525
参数64:0
参数65:0
参数66:满18.0元赠哈尔滨冰纯白啤330ml*1
参数67:null
参数68:0
参数69:null
参数70:2017-06-21 10:47:05
参数71:0.0
参数72:1
参数73:0
参数74:0
参数75:1
 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:45:32
参数2:2017-06-21 10:45:32
参数3:245423
 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62128eb90433414
 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:45:32
参数2:2017-06-21 10:45:32
参数3:245423
 
[INFO][2017-06-21 10:47:06] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62128eb90433414,0009-0057 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128ec80153576
参数2:B62128eb90433414
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:47:06
参数9:0
 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:3645
参数2:3124
参数3:8
参数4:10.0
参数5:B62128eb90433414
 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15927298093
参数2:1
 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15927298093
参数2:菜大师用户
参数3:2017-06-21 10:45:35
参数4:2017-06-21 10:45:35
参数5:1
参数6:1
参数7:0.0
参数8:30.497966,114.391368
参数9:2017-06-21 10:45:35
参数10:2017-06-21 10:45:35
参数11:0
参数12:2017-06-21 10:45:35
参数13:2017-06-21 10:45:35
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15927298093
参数2:1
 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:45:35
参数2:null
参数3:0
参数4:null
参数5:null
参数6:0
参数7:2017-06-21 10:45:35
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303441
参数18:1
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ec55932364
参数2:9
参数3:B62128eb90433414
参数4:1
参数5:129
参数6:新派手撕鸡
参数7:新派手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:47:06
参数11:17.089552
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128ec94845606
参数17:9
参数18:B62128eb90433414
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 10:47:06
参数26:2.910448
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128ec91798478
参数32:9
参数33:B62128eb90433414
参数34:0
参数35:0
参数36:满18.0元赠哈尔滨冰纯白啤330ml*1
参数37:null
参数38:0
参数39:null
参数40:2017-06-21 10:47:06
参数41:0.0
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ed85992001
参数2:0
参数3:303441
参数4:0009-0058
参数5:美团
参数6:10274161985989233
参数7:16
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:45:35
参数14:72.6
参数15:0.0
参数16:3.0
参数17:4.0
参数18:7.0
参数19:23.0
参数20:0.0
参数21:60.6
参数22:60.0
参数23:19.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:45:35
参数31:占(先生)
参数32:15927298093
参数33:丽枫酒店(武汉光谷雄楚大道店) (2201)
参数34:114.391368
参数35:30.497966
参数36:114.39789016193036
参数37:30.503945602882734
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:47:07
参数66:2017-06-21 10:47:07
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"荷包蛋","price":2.5,"quantity":2,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"绿豆汤","price":3.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"农家小炒肉","price":20.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"米饭","price":1.0,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"鹌鹑蛋烧香菇","price":21.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ed07155610
参数2:B62128ed85992001
参数3:用户
参数4:0
参数5:商家待接单
参数6:占(先生)支付成功
参数7:占(先生)
参数8:2017-06-21 10:45:35
参数9:0
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:47:07
参数4:
参数5:B62128e976751268
参数6:B62128e849690385
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:47:07
参数4:
参数5:B62128e709505203
参数6:B62128e752459727
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62128ed85992001
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128e976751268
参数2:B62128e849690385
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:47:07
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128e709505203
参数2:B62128e752459727
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:47:07
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:45:35
参数2:2017-06-21 10:45:35
参数3:303441
 
[INFO][2017-06-21 10:47:07] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62128ed85992001,0009-0058 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:45:35
参数2:2017-06-21 10:45:35
参数3:303441
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15827086804
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ed43065272
参数2:B62128ed85992001
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:47:07
参数9:0
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15527452978
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2518
参数2:2158
参数3:6
参数4:8.0
参数5:B62128ed85992001
 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18677953336
参数2:1
 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:113453
参数3:1
 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:47:08
参数4:
参数5:B62128ed10320051
参数6:B62128eb90433414
 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:47:08
参数4:
参数5:B62128ed11079613
参数6:B62128ea85867525
 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:农家小炒肉
 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128ed10320051
参数2:B62128eb90433414
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:47:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ed11079613
参数2:B62128ea85867525
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:47:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15927298093
 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ee67587681
参数2:0
参数3:113453
参数4:0009-0059
参数5:美团
参数6:10274163029292477
参数7:17
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:45:55
参数14:25.9
参数15:0.0
参数16:1.0
参数17:4.0
参数18:2.0
参数19:12.0
参数20:0.0
参数21:19.9
参数22:19.0
参数23:11.0
参数24:1.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:45:55
参数31:陈先生(先生)
参数32:18677953336
参数33:当代学生公寓5号楼 (5B)
参数34:114.396448
参数35:30.494044
参数36:114.40299126653231
参数37:30.49993377802634
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:47:08
参数66:2017-06-21 10:47:08
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"农家小炒肉","price":20.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ee44610107
参数2:B62128ee67587681
参数3:用户
参数4:0
参数5:商家待接单
参数6:陈先生(先生)支付成功
参数7:陈先生(先生)
参数8:2017-06-21 10:45:55
参数9:0
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:47:08
参数4:
参数5:B62128ee79515636
参数6:B62128ed85992001
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:45:55
参数2:2017-06-21 10:45:55
参数3:113453
 
[INFO][2017-06-21 10:47:09] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62128ee67587681,0009-0059 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62128ee67587681
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ee79515636
参数2:B62128ed85992001
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:47:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:45:55
参数2:2017-06-21 10:45:55
参数3:113453
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18677953336
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128ef29702831
参数2:B62128ee67587681
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:47:09
参数9:0
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1450
参数2:1242
参数3:3
参数4:5.0
参数5:B62128ee67587681
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15337219719
参数2:1
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B62128ed72262670
参数2:9
参数3:B62128ed85992001
参数4:5
参数5:38
参数6:荷包蛋
参数7:荷包蛋
参数8:0
参数9:null
参数10:2017-06-21 10:47:07
参数11:2.0661159
参数12:2
参数13:0
参数14:0
参数15:1
参数16:B62128ed95763654
参数17:9
参数18:B62128ed85992001
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 10:47:07
参数26:3.2231407
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128ee37477248
参数32:9
参数33:B62128ed85992001
参数34:1
参数35:130
参数36:肉末鱼香茄条
参数37:肉末鱼香茄条
参数38:0
参数39:null
参数40:2017-06-21 10:47:08
参数41:16.446281
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B62128ee62873011
参数47:9
参数48:B62128ed85992001
参数49:1
参数50:3
参数51:农家小炒肉
参数52:农家小炒肉
参数53:0
参数54:null
参数55:2017-06-21 10:47:08
参数56:17.272728
参数57:1
参数58:0
参数59:0
参数60:1
参数61:B62128ee76637040
参数62:9
参数63:B62128ed85992001
参数64:3
参数65:50
参数66:米饭
参数67:金枪鱼沙拉
参数68:0
参数69:null
参数70:2017-06-21 10:47:08
参数71:0.0
参数72:1
参数73:0
参数74:0
参数75:1
参数76:B62128ee61952512
参数77:9
参数78:B62128ed85992001
参数79:1
参数80:147
参数81:鹌鹑蛋烧香菇
参数82:鹌鹑蛋烧香菇
参数83:0
参数84:null
参数85:2017-06-21 10:47:08
参数86:18.099173
参数87:1
参数88:0
参数89:0
参数90:1
参数91:B62128ef32990531
参数92:9
参数93:B62128ed85992001
参数94:0
参数95:0
参数96:满18.0元赠哈尔滨冰纯白啤330ml*1
参数97:null
参数98:0
参数99:null
参数100:2017-06-21 10:47:09
参数101:0.0
参数102:1
参数103:0
参数104:0
参数105:1
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15337219719
参数2:菜大师用户
参数3:2017-06-21 10:46:17
参数4:2017-06-21 10:46:17
参数5:1
参数6:1
参数7:0.0
参数8:30.471859,114.416704
参数9:2017-06-21 10:46:17
参数10:2017-06-21 10:46:17
参数11:0
参数12:2017-06-21 10:46:17
参数13:2017-06-21 10:46:17
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:47:09
参数4:
参数5:B62128ef65501145
参数6:B62128ee67587681
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15337219719
参数2:1
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128ef65501145
参数2:B62128ee67587681
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:47:09
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:46:17
参数2:null
参数3:0
参数4:null
参数5:null
参数6:0
参数7:2017-06-21 10:46:17
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303442
参数18:1
 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128ef64905157
参数2:9
参数3:B62128ee67587681
参数4:1
参数5:3
参数6:农家小炒肉
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-21 10:47:09
参数11:15.332046
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128ef82884133
参数17:9
参数18:B62128ee67587681
参数19:2
参数20:123
参数21:香滑蒸鸡蛋
参数22:香滑蒸鸡蛋
参数23:0
参数24:null
参数25:2017-06-21 10:47:09
参数26:3.6679535
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128ef10707635
参数32:9
参数33:B62128ee67587681
参数34:0
参数35:0
参数36:满18.0元赠哈尔滨冰纯白啤330ml*1
参数37:null
参数38:0
参数39:null
参数40:2017-06-21 10:47:09
参数41:0.0
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ef47511423
参数2:0
参数3:303442
参数4:0009-0060
参数5:美团
参数6:10274160883226549
参数7:18
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:46:17
参数14:27.9
参数15:2.0
参数16:1.0
参数17:4.0
参数18:2.0
参数19:12.0
参数20:0.0
参数21:19.9
参数22:21.0
参数23:11.0
参数24:1.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:46:17
参数31:陈(先生)
参数32:15337219719
参数33:光谷理想城 (2栋2304)
参数34:114.416704
参数35:30.471859
参数36:114.42328606625641
参数37:30.47751872049618
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:47:09
参数66:2017-06-21 10:47:09
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211990661282181
参数2:B62128ef47511423
参数3:用户
参数4:0
参数5:商家待接单
参数6:陈(先生)支付成功
参数7:陈(先生)
参数8:2017-06-21 10:46:17
参数9:0
 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:46:17
参数2:2017-06-21 10:46:17
参数3:303442
 
[INFO][2017-06-21 10:47:10] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62128ef47511423,0009-0060 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62128ef47511423
 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:46:17
参数2:2017-06-21 10:46:17
参数3:303442
 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15337219719
 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211990644790806
参数2:B62128ef47511423
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:47:10
参数9:0
 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:3398
参数2:2912
参数3:7
参数4:9.0
参数5:B62128ef47511423
 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:47:10
参数4:
参数5:B6211990636639617
参数6:B62128ef47511423
 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211990636639617
参数2:B62128ef47511423
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:47:10
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B6211990656045511
参数2:9
参数3:B62128ef47511423
参数4:2
参数5:123
参数6:香滑蒸鸡蛋
参数7:香滑蒸鸡蛋
参数8:0
参数9:null
参数10:2017-06-21 10:47:10
参数11:3.7634408
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B6211990668305241
参数17:9
参数18:B62128ef47511423
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-21 10:47:10
参数26:17.236559
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B6211990605206226
参数32:9
参数33:B62128ef47511423
参数34:0
参数35:0
参数36:满18.0元赠哈尔滨冰纯白啤330ml*1
参数37:null
参数38:0
参数39:null
参数40:2017-06-21 10:47:10
参数41:0.0
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:49:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:49:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18771040744
参数2:1
 
[INFO][2017-06-21 10:49:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:49:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:55064
参数3:1
 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128fb45922232
参数2:0
参数3:55064
参数4:0009-0061
参数5:饿了么
参数6:3008693457614244892
参数7:43
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:45:26
参数14:28.699999
参数15:-4.7
参数16:0.93
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.0
参数22:21.77
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:45:41
参数31:余秋恒(先生)
参数32:18771040744
参数33:光谷创意大厦B座B座603房间
参数34:114.41094987
参数35:30.48329003
参数36:114.4175345554995
参数37:30.488985499868452
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:49:01
参数66:2017-06-21 10:49:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"百事可乐（听装）","price":3.8,"quantity":1,"id":157948150,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128fc56106333
参数2:B62128fb45922232
参数3:用户
参数4:0
参数5:商家待接单
参数6:余秋恒(先生)支付成功
参数7:余秋恒(先生)
参数8:2017-06-21 10:45:41
参数9:0
 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:45:26
参数2:2017-06-21 10:45:26
参数3:55064
 
[INFO][2017-06-21 10:49:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62128fb45922232,0009-0061 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:45:26
参数2:2017-06-21 10:45:26
参数3:55064
 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18771040744
 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:青豆米鸡丁
 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_prints
             


         WHERE stores_id = ? 
         
            ORDER BY print_id 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62128fb45922232
 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128fc65677100
参数2:B62128fb45922232
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:49:02
参数9:0
 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15629031330
参数2:1
 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:256877
参数3:1
 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B62128fc76023324
参数2:9
参数3:B62128fb45922232
参数4:1
参数5:117
参数6:青豆米鸡丁
参数7:青豆米鸡丁
参数8:0
参数9:null
参数10:2017-06-21 10:49:02
参数11:15.094879
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128fc08289378
参数17:9
参数18:B62128fb45922232
参数19:6
参数20:73
参数21:百事可乐（听装）
参数22:百事可乐（听装）
参数23:0
参数24:null
参数25:2017-06-21 10:49:02
参数26:2.8824391
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128fd79414043
参数32:9
参数33:B62128fb45922232
参数34:2
参数35:123
参数36:香滑蒸鸡蛋
参数37:香滑蒸鸡蛋
参数38:0
参数39:null
参数40:2017-06-21 10:49:03
参数41:3.7926831
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128fd87695201
参数2:0
参数3:256877
参数4:0009-0062
参数5:饿了么
参数6:3008693532482531356
参数7:44
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:45:46
参数14:25.8
参数15:0.0
参数16:0.79
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:15.8
参数22:19.01
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:45:56
参数31:杨(女士)
参数32:15629031330
参数33:中南财经政法大学(南湖校区)环湖公寓3号311
参数34:114.38967057
参数35:30.47608964
参数36:114.39616506373422
参数37:30.482094512140076
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:49:03
参数66:2017-06-21 10:49:03
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"绿豆汤","price":3.9,"quantity":1,"id":126727061,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":579329683,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128fd82948472
参数2:B62128fd87695201
参数3:用户
参数4:0
参数5:商家待接单
参数6:杨(女士)支付成功
参数7:杨(女士)
参数8:2017-06-21 10:45:56
参数9:0
 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:45:46
参数2:2017-06-21 10:45:46
参数3:256877
 
[INFO][2017-06-21 10:49:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B62128fd87695201,0009-0062 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15629031330
 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:45:46
参数2:2017-06-21 10:45:46
参数3:256877
 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:49:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:绿豆汤
 
[INFO][2017-06-21 10:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B62128fd87695201
 
[INFO][2017-06-21 10:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128fe35464764
参数2:B62128fd87695201
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:49:04
参数9:0
 
[INFO][2017-06-21 10:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128fd58859544
参数2:9
参数3:B62128fd87695201
参数4:1
参数5:24
参数6:小炒土豆片
参数7:小炒土豆片
参数8:0
参数9:null
参数10:2017-06-21 10:49:03
参数11:12.452287
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128fe65267121
参数17:9
参数18:B62128fd87695201
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 10:49:04
参数26:2.8736048
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B62128fe95842175
参数32:9
参数33:B62128fd87695201
参数34:2
参数35:123
参数36:香滑蒸鸡蛋
参数37:香滑蒸鸡蛋
参数38:0
参数39:null
参数40:2017-06-21 10:49:04
参数41:3.6841085
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18502750366
参数2:1
 
[INFO][2017-06-21 10:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:45283
参数3:1
 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128fe07083237
参数2:0
参数3:45283
参数4:0009-0063
参数5:饿了么
参数6:3008693466631790620
参数7:46
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:47:12
参数14:24.8
参数15:0.0
参数16:0.74
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.8
参数22:18.06
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:47:39
参数31:贾凌健(先生)
参数32:18502750366
参数33:武汉职业技术学院(东区)关山大道463号 东10c205
参数34:114.41518994
参数35:30.48403996
参数36:114.4217825641185
参数37:30.489708624072506
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:49:04
参数66:2017-06-21 10:49:04
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"绿豆汤","price":3.9,"quantity":1,"id":126727061,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ff28071364
参数2:B62128fe07083237
参数3:用户
参数4:0
参数5:商家待接单
参数6:贾凌健(先生)支付成功
参数7:贾凌健(先生)
参数8:2017-06-21 10:47:39
参数9:0
 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:47:12
参数2:2017-06-21 10:47:12
参数3:45283
 
[INFO][2017-06-21 10:49:05] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B62128fe07083237,0009-0063 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:47:12
参数2:2017-06-21 10:47:12
参数3:45283
 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B62128fe07083237
 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128ff40916883
参数2:B62128fe07083237
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:49:05
参数9:0
 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128ff50010213
参数2:9
参数3:B62128fe07083237
参数4:1
参数5:3
参数6:农家小炒肉-份
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-21 10:49:05
参数11:15.219919
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B62128ff63047682
参数17:9
参数18:B62128fe07083237
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 10:49:05
参数26:2.8400807
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18627047272
参数2:1
 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18627047272
参数2:菜大师用户
参数3:2017-06-21 10:47:25
参数4:2017-06-21 10:47:25
参数5:1
参数6:1
参数7:0.0
参数8:30.49452983,114.43112008
参数9:2017-06-21 10:47:25
参数10:2017-06-21 10:47:25
参数11:0
参数12:2017-06-21 10:47:25
参数13:2017-06-21 10:47:25
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18627047272
参数2:1
 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:47:25
参数2:null
参数3:0
参数4:2017-06-21 10:47:25
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303443
参数18:1
 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290024599337
参数2:0
参数3:303443
参数4:0009-0064
参数5:饿了么
参数6:3008693593400639516
参数7:45
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:47:23
参数14:32.3
参数15:-8.0
参数16:1.11
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:14.3
参数22:25.19
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:47:25
参数31:陶亮(先生)
参数32:18627047272
参数33:鼎新工业园佳园路 2栋2楼 武汉中谷联创光电科技股份有限公司
参数34:114.43112008
参数35:30.49452983
参数36:114.43770981417234
参数37:30.500246651950548
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:49:06
参数66:2017-06-21 10:49:06
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"手撕鸡+绿豆汤+荷包蛋","price":28.5,"quantity":1,"id":126723271,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"百事可乐（听装）","price":3.8,"quantity":1,"id":157948150,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290058454234
参数2:B621290024599337
参数3:用户
参数4:0
参数5:商家待接单
参数6:陶亮(先生)支付成功
参数7:陶亮(先生)
参数8:2017-06-21 10:47:25
参数9:0
 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:47:23
参数2:2017-06-21 10:47:23
参数3:303443
 
[INFO][2017-06-21 10:49:06] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621290024599337,0009-0064 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:47:23
参数2:2017-06-21 10:47:23
参数3:303443
 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-4 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-4 参数1:手撕鸡
 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621290024599337
 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290031724022
参数2:B621290024599337
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:49:06
参数9:0
 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15871757872
参数2:1
 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-4 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-4 参数1:荷包蛋
 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:227778
参数3:1
 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290119038443
参数2:0
参数3:227778
参数4:0009-0065
参数5:饿了么
参数6:3008693577160112156
参数7:47
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:47:42
参数14:22.279999
参数15:-3.8
参数16:0.71
参数17:4.0
参数18:4.0
参数19:16.0
参数20:0.0
参数21:10.48
参数22:17.57
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:48:01
参数31:吕(女士)
参数32:15871757872
参数33:金地・中心城西区六栋一单元2003
参数34:114.3923796
参数35:30.49658038
参数36:114.39890571730376
参数37:30.502541663833327
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:49:07
参数66:2017-06-21 10:49:07
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"另加筷子三件套装","price":0.38,"quantity":1,"id":148461928,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"米饭","price":1.0,"quantity":2,"id":92440355,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290138888382
参数2:B621290119038443
参数3:用户
参数4:0
参数5:商家待接单
参数6:吕(女士)支付成功
参数7:吕(女士)
参数8:2017-06-21 10:48:01
参数9:0
 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-4 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-4 参数1:B621290169486008
参数2:9
参数3:B621290024599337
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:49:07
参数11:16.817749
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621290147221436
参数17:9
参数18:B621290024599337
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 10:49:07
参数26:3.2959406
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621290147224607
参数32:9
参数33:B621290024599337
参数34:5
参数35:38
参数36:荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-21 10:49:07
参数41:2.1127825
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B621290178438716
参数47:9
参数48:B621290024599337
参数49:6
参数50:73
参数51:百事可乐（听装）
参数52:百事可乐（听装）
参数53:0
参数54:null
参数55:2017-06-21 10:49:07
参数56:2.9635293
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:47:42
参数2:2017-06-21 10:47:42
参数3:227778
 
[INFO][2017-06-21 10:49:08] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621290119038443,0009-0065 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:47:42
参数2:2017-06-21 10:47:42
参数3:227778
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621290119038443
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:另加筷子三件套装
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621290295838376
参数2:B621290119038443
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:49:08
参数9:0
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:49:08
参数4:
参数5:B62128fd83630845
参数6:B62128fd87695201
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:49:08
参数4:
参数5:B62128fc78872686
参数6:B62128fb45922232
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62128fd83630845
参数2:B62128fd87695201
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:49:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B62128fc78872686
参数2:B62128fb45922232
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:49:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:2
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:18627047272
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18502750366
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B621290288014245
参数2:9
参数3:B621290119038443
参数4:9
参数5:99
参数6:另加筷子三件套装
参数7:筷子三件套装
参数8:0
参数9:null
参数10:2017-06-21 10:49:08
参数11:0.29966787
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621290235995105
参数17:9
参数18:B621290119038443
参数19:1
参数20:117
参数21:青豆米鸡丁
参数22:青豆米鸡丁
参数23:0
参数24:null
参数25:2017-06-21 10:49:08
参数26:15.693133
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621290202728655
参数32:9
参数33:B621290119038443
参数34:3
参数35:50
参数36:米饭
参数37:金枪鱼沙拉
参数38:0
参数39:null
参数40:2017-06-21 10:49:08
参数41:0.0
参数42:2
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:49:08
参数4:
参数5:B621290226656104
参数6:B621290024599337
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:49:08
参数4:
参数5:B621290209995788
参数6:B62128fe07083237
 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290226656104
参数2:B621290024599337
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:49:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621290209995788
参数2:B62128fe07083237
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:49:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:15871757872
 
[INFO][2017-06-21 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:49:09
参数4:
参数5:B621290347586734
参数6:B621290119038443
 
[INFO][2017-06-21 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621290347586734
参数2:B621290119038443
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:49:09
参数8:0
参数9:0.0
 
[WARN][2017-06-21 10:49:14] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-2 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendDistanceReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.jms.OrderSendDistanceReceiver.onMessage(OrderSendDistanceReceiver.java:64)
	at sun.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[WARN][2017-06-21 10:49:14] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-1 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendDistanceReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.jms.OrderSendDistanceReceiver.onMessage(OrderSendDistanceReceiver.java:64)
	at sun.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[WARN][2017-06-21 10:49:14] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-2 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendDistanceReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.jms.OrderSendDistanceReceiver.onMessage(OrderSendDistanceReceiver.java:64)
	at sun.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[WARN][2017-06-21 10:49:14] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-1 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendDistanceReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.jms.OrderSendDistanceReceiver.onMessage(OrderSendDistanceReceiver.java:64)
	at sun.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[WARN][2017-06-21 10:49:14] org.springframework.jms.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:936) DefaultMessageListenerContainer-2 Execution of JMS message listener failed, and no ErrorHandler has been set. 
org.springframework.jms.listener.adapter.ListenerExecutionFailedException: Listener method 'public void com.jms.OrderSendDistanceReceiver.onMessage(javax.jms.Message)' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:112)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:69)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.jms.OrderSendDistanceReceiver.onMessage(OrderSendDistanceReceiver.java:64)
	at sun.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:196)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:113)
	at org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:104)
	... 10 more
[INFO][2017-06-21 10:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:50:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:50:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:50:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13720178190
参数2:1
 
[INFO][2017-06-21 10:50:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:50:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13720178190
参数2:菜大师用户
参数3:2017-06-21 10:48:00
参数4:2017-06-21 10:48:00
参数5:1
参数6:1
参数7:0.0
参数8:30.480538,114.41992
参数9:2017-06-21 10:48:00
参数10:2017-06-21 10:48:00
参数11:0
参数12:2017-06-21 10:48:00
参数13:2017-06-21 10:48:00
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:50:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:50:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13720178190
参数2:1
 
[INFO][2017-06-21 10:50:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:50:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:48:00
参数2:null
参数3:0
参数4:null
参数5:null
参数6:0
参数7:2017-06-21 10:48:00
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303444
参数18:1
 
[INFO][2017-06-21 10:50:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:50:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290592360883
参数2:0
参数3:303444
参数4:0009-0066
参数5:美团
参数6:10274164081337511
参数7:19
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:48:00
参数14:57.699997
参数15:4.0
参数16:2.0
参数17:4.0
参数18:6.0
参数19:26.0
参数20:0.0
参数21:37.7
参数22:42.0
参数23:22.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:48:00
参数31:曹宇翔(先生)
参数32:13720178190
参数33:光谷总部国际 (9栋1206)
参数34:114.41992
参数35:30.480538
参数36:114.42651198463189
参数37:30.48619488811892
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:50:01
参数66:2017-06-21 10:50:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"肉末鱼香茄条","price":19.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"香酥鸡柳","price":20.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:50:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:50:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290567065714
参数2:B621290592360883
参数3:用户
参数4:0
参数5:商家待接单
参数6:曹宇翔(先生)支付成功
参数7:曹宇翔(先生)
参数8:2017-06-21 10:48:00
参数9:0
 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:48:00
参数2:2017-06-21 10:48:00
参数3:303444
 
[INFO][2017-06-21 10:50:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621290592360883,0009-0066 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621290592360883
 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:48:00
参数2:2017-06-21 10:48:00
参数3:303444
 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13720178190
 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290621370445
参数2:B621290592360883
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:50:02
参数9:0
 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2925
参数2:2507
参数3:6
参数4:8.0
参数5:B621290592360883
 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:18694085802
参数2:1
 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:102526
参数3:1
 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:49:19
参数2:null
参数3:0
参数4:null
参数5:null
参数6:0
参数7:2017-06-21 10:49:19
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:102526
参数18:1
 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:50:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621290635809455
参数2:9
参数3:B621290592360883
参数4:1
参数5:130
参数6:肉末鱼香茄条
参数7:肉末鱼香茄条
参数8:0
参数9:null
参数10:2017-06-21 10:50:02
参数11:14.48527
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621290643796718
参数17:9
参数18:B621290592360883
参数19:1
参数20:127
参数21:香酥鸡柳
参数22:香酥鸡柳
参数23:0
参数24:null
参数25:2017-06-21 10:50:02
参数26:15.213173
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621290629092617
参数32:9
参数33:B621290592360883
参数34:1
参数35:24
参数36:小炒土豆片
参数37:小炒土豆片
参数38:0
参数39:null
参数40:2017-06-21 10:50:02
参数41:12.30156
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B621290674336546
参数47:9
参数48:B621290592360883
参数49:0
参数50:0
参数51:满18.0元赠哈尔滨冰纯白啤330ml*1
参数52:null
参数53:0
参数54:null
参数55:2017-06-21 10:50:02
参数56:0.0
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290603602733
参数2:0
参数3:102526
参数4:0009-0067
参数5:美团
参数6:10274163894104482
参数7:20
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:49:19
参数14:28.5
参数15:2.0
参数16:1.0
参数17:4.0
参数18:2.0
参数19:12.0
参数20:0.0
参数21:20.5
参数22:22.0
参数23:11.0
参数24:1.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:49:19
参数31:李(女士)
参数32:18694085802
参数33:绿之苑 (4栋3单元501室)
参数34:114.394536
参数35:30.498868
参数36:114.40107366124505
参数37:30.504791558034384
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:50:02
参数66:2017-06-21 10:50:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"手撕鸡+绿豆汤+荷包蛋","price":28.5,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290791169865
参数2:B621290603602733
参数3:用户
参数4:0
参数5:商家待接单
参数6:李(女士)支付成功
参数7:李(女士)
参数8:2017-06-21 10:49:19
参数9:0
 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:49:19
参数2:2017-06-21 10:49:19
参数3:102526
 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621290603602733
 
[INFO][2017-06-21 10:50:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621290603602733,0009-0067 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:49:19
参数2:2017-06-21 10:49:19
参数3:102526
 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:18694085802
 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621290741243342
参数2:B621290603602733
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:50:03
参数9:0
 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2245
参数2:1924
参数3:5
参数4:7.0
参数5:B621290603602733
 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290737435333
参数2:9
参数3:B621290603602733
参数4:1
参数5:4
参数6:手撕鸡
参数7:手撕鸡
参数8:0
参数9:null
参数10:2017-06-21 10:50:03
参数11:16.646389
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621290741371653
参数17:9
参数18:B621290603602733
参数19:2
参数20:46
参数21:绿豆汤
参数22:绿豆汤
参数23:0
参数24:null
参数25:2017-06-21 10:50:03
参数26:3.2623575
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621290713447207
参数32:9
参数33:B621290603602733
参数34:5
参数35:38
参数36:荷包蛋
参数37:荷包蛋
参数38:0
参数39:null
参数40:2017-06-21 10:50:03
参数41:2.091255
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B621290845085542
参数47:9
参数48:B621290603602733
参数49:0
参数50:0
参数51:满18.0元赠哈尔滨冰纯白啤330ml*1
参数52:null
参数53:0
参数54:null
参数55:2017-06-21 10:50:04
参数56:0.0
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-21 10:50:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:50:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:50:07
参数4:
参数5:B621290661234354
参数6:B621290592360883
 
[INFO][2017-06-21 10:50:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:50:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:50:07
参数4:
参数5:B621290702418186
参数6:B621290603602733
 
[INFO][2017-06-21 10:50:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:50:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621290702418186
参数2:B621290603602733
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:50:07
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:50:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:50:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621290661234354
参数2:B621290592360883
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:50:07
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 10:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
 
[INFO][2017-06-21 10:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:饿了么
参数4:9
参数5:1
 
[INFO][2017-06-21 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13627290262
参数2:1
 
[INFO][2017-06-21 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:230648
参数3:1
 
[INFO][2017-06-21 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621291a26200244
参数2:0
参数3:230648
参数4:0009-0068
参数5:饿了么
参数6:3008693584735158300
参数7:48
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:49:10
参数14:43.8
参数15:-5.0
参数16:1.64
参数17:4.0
参数18:4.0
参数19:21.0
参数20:0.0
参数21:25.8
参数22:35.16
参数23:15.0
参数24:6.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:49:43
参数31:方(女士)
参数32:13627290262
参数33:国际企业中心三期锦丰楼A座东湖高新区光谷大道 3楼305室
参数34:114.4222004
参数35:30.48791952
参数36:114.4287990429034
参数37:30.49358060356798
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:3用餐
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:52:02
参数66:2017-06-21 10:52:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"农家小炒肉-份","price":20.9,"quantity":1,"id":92241012,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"新派手撕鸡","price":22.9,"quantity":1,"id":638013871,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621291a70686038
参数2:B621291a26200244
参数3:用户
参数4:0
参数5:商家待接单
参数6:方(女士)支付成功
参数7:方(女士)
参数8:2017-06-21 10:49:43
参数9:0
 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:49:10
参数2:2017-06-21 10:49:10
参数3:230648
 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:49:10
参数2:2017-06-21 10:49:10
参数3:230648
 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13627290262
 
[INFO][2017-06-21 10:52:03] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621291a26200244,0009-0068 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2451
参数2:2100
参数3:5
参数4:7.0
参数5:B621291a26200244
 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621291a26200244
 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621291b57348116
参数2:B621291a26200244
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:52:03
参数9:0
 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-4 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-4 参数1:B621291b33471443
参数2:9
参数3:B621291a26200244
参数4:1
参数5:3
参数6:农家小炒肉-份
参数7:农家小炒肉
参数8:0
参数9:null
参数10:2017-06-21 10:52:03
参数11:16.77726
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621291b74700483
参数17:9
参数18:B621291a26200244
参数19:1
参数20:129
参数21:新派手撕鸡
参数22:新派手撕鸡
参数23:0
参数24:null
参数25:2017-06-21 10:52:03
参数26:18.38274
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:17371241519
参数2:1
 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:230824
参数3:1
 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621291c67821560
参数2:0
参数3:230824
参数4:0009-0069
参数5:饿了么
参数6:3008693606839129116
参数7:49
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:49:42
参数14:23.3
参数15:-6.0
参数16:0.66
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:7.3
参数22:16.64
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:49:59
参数31:雷(女士)
参数32:17371241519
参数33:光谷国际A座佳园路4附5 十楼1007
参数34:114.42996942
参数35:30.50490059
参数36:114.43656738718079
参数37:30.510607986782674
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:52:04
参数66:2017-06-21 10:52:04
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"小炒土豆片","price":16.9,"quantity":1,"id":92242419,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"绿豆汤","price":3.9,"quantity":1,"id":126727061,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621291c28184450
参数2:B621291c67821560
参数3:用户
参数4:0
参数5:商家待接单
参数6:雷(女士)支付成功
参数7:雷(女士)
参数8:2017-06-21 10:49:59
参数9:0
 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:49:42
参数2:2017-06-21 10:49:42
参数3:230824
 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:49:42
参数2:2017-06-21 10:49:42
参数3:230824
 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:17371241519
 
[INFO][2017-06-21 10:52:04] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621291c67821560,0009-0069 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621291c67821560
 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621291c39481844
参数2:B621291c67821560
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:52:04
参数9:0
 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:4620
参数2:3960
参数3:10
参数4:12.0
参数5:B621291c67821560
 
[INFO][2017-06-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B621291c61535133
参数2:9
参数3:B621291c67821560
参数4:1
参数5:24
参数6:小炒土豆片
参数7:小炒土豆片
参数8:0
参数9:null
参数10:2017-06-21 10:52:04
参数11:12.069356
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621291c94215120
参数17:9
参数18:B621291c67821560
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-21 10:52:04
参数26:1.7854077
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621291d48619206
参数32:9
参数33:B621291c67821560
参数34:2
参数35:46
参数36:绿豆汤
参数37:绿豆汤
参数38:0
参数39:null
参数40:2017-06-21 10:52:05
参数41:2.7852361
参数42:1
参数43:0
参数44:0
参数45:1
 
[INFO][2017-06-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15527870893
参数2:1
 
[INFO][2017-06-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15527870893
参数2:菜大师用户
参数3:2017-06-21 10:50:41
参数4:2017-06-21 10:50:41
参数5:1
参数6:1
参数7:0.0
参数8:30.4740002,114.38702054
参数9:2017-06-21 10:50:41
参数10:2017-06-21 10:50:41
参数11:0
参数12:2017-06-21 10:50:41
参数13:2017-06-21 10:50:41
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15527870893
参数2:1
 
[INFO][2017-06-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:50:41
参数2:null
参数3:0
参数4:2017-06-21 10:50:41
参数5:null
参数6:0
参数7:null
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303445
参数18:1
 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621291d75443041
参数2:0
参数3:303445
参数4:0009-0070
参数5:饿了么
参数6:3008693611083778076
参数7:50
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:50:24
参数14:23.4
参数15:0.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:13.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:50:41
参数31:周贤桀(先生)
参数32:15527870893
参数33:中南财经政法大学中区学生公寓3中三
参数34:114.38702054
参数35:30.4740002
参数36:114.39350036370878
参数37:30.480051926695815
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:52:05
参数66:2017-06-21 10:52:05
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"鲜菇炒肉丝","price":20.9,"quantity":1,"id":638014838,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"荷包蛋","price":2.5,"quantity":1,"id":92441172,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621291e93558567
参数2:B621291d75443041
参数3:用户
参数4:0
参数5:商家待接单
参数6:周贤桀(先生)支付成功
参数7:周贤桀(先生)
参数8:2017-06-21 10:50:41
参数9:0
 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:50:24
参数2:2017-06-21 10:50:24
参数3:303445
 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:50:24
参数2:2017-06-21 10:50:24
参数3:303445
 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2930
参数2:2511
参数3:6
参数4:8.0
参数5:B621291d75443041
 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621291e20219880
参数2:9
参数3:B621291d75443041
参数4:1
参数5:132
参数6:鲜菇炒肉丝
参数7:鲜菇炒肉丝
参数8:0
参数9:null
参数10:2017-06-21 10:52:06
参数11:14.942606
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621291e34382218
参数17:9
参数18:B621291d75443041
参数19:5
参数20:38
参数21:荷包蛋
参数22:荷包蛋
参数23:0
参数24:null
参数25:2017-06-21 10:52:06
参数26:1.7873931
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621291d75443041
 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621291e00753331
参数2:B621291d75443041
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:52:06
参数9:0
 
[INFO][2017-06-21 10:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13308630181
参数2:1
 
[INFO][2017-06-21 10:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:53825
参数3:1
 
[INFO][2017-06-21 10:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621291f88624270
参数2:0
参数3:53825
参数4:0009-0071
参数5:饿了么
参数6:3008693649067360284
参数7:51
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:51:00
参数14:25.8
参数15:-5.0
参数16:0.79
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:10.8
参数22:19.01
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:51:21
参数31:周(先生)
参数32:13308630181
参数33:湖北省武汉市洪山区光谷E城内光谷E城E1，6楼科匠中国
参数34:114.40225013
参数35:30.47717996
参数36:114.40880199279782
参数37:30.48297385158881
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:52:07
参数66:2017-06-21 10:52:07
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"绿豆汤","price":3.9,"quantity":1,"id":126727061,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"鹌鹑蛋烧香菇","price":21.9,"quantity":1,"id":1228943975,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621291f19627452
参数2:B621291f88624270
参数3:用户
参数4:0
参数5:商家待接单
参数6:周(先生)支付成功
参数7:周(先生)
参数8:2017-06-21 10:51:21
参数9:0
 
[INFO][2017-06-21 10:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:52:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:51:00
参数2:2017-06-21 10:51:00
参数3:53825
 
[INFO][2017-06-21 10:52:07] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621291d75443041,0009-0070 
[INFO][2017-06-21 10:52:07] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621291f88624270,0009-0071 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:51:00
参数2:2017-06-21 10:51:00
参数3:53825
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1511
参数2:1295
参数3:4
参数4:6.0
参数5:B621291f88624270
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621291f88624270
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621292076585326
参数2:B621291f88624270
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:52:08
参数9:0
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:鹌鹑蛋烧香菇
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13419518357
参数2:1
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621292062697724
参数2:9
参数3:B621291f88624270
参数4:2
参数5:46
参数6:绿豆汤
参数7:绿豆汤
参数8:0
参数9:null
参数10:2017-06-21 10:52:08
参数11:2.8736048
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621292062075131
参数17:9
参数18:B621291f88624270
参数19:1
参数20:147
参数21:鹌鹑蛋烧香菇
参数22:鹌鹑蛋烧香菇
参数23:0
参数24:null
参数25:2017-06-21 10:52:08
参数26:16.136395
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:61450
参数3:1
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:52:08
参数4:
参数5:B621291b65851146
参数6:B621291a26200244
 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:52:08
参数4:
参数5:B621291c18712344
参数6:B621291c67821560
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621291c18712344
参数2:B621291c67821560
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:52:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621291b65851146
参数2:B621291a26200244
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:52:08
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621292038169240
参数2:0
参数3:61450
参数4:0009-0072
参数5:饿了么
参数6:3008693650761947164
参数7:52
参数8:948110
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:51:19
参数14:23.4
参数15:-1.0
参数16:0.67
参数17:4.0
参数18:2.0
参数19:16.0
参数20:0.0
参数21:12.4
参数22:16.73
参数23:12.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:51:38
参数31:罗佳(先生)
参数32:13419518357
参数33:清江山水软件园中路 4栋3单元3楼303
参数34:114.40132996
参数35:30.47370994
参数36:114.40787481795252
参数37:30.479516407999153
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:52:08
参数66:2017-06-21 10:52:08
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":1,"good_name":"雪花蛋酒","price":3.5,"quantity":1,"id":108171986,"good_id":0,"good_type":1,"note":null,"spec":null},{"class_id":1,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":579331155,"good_id":0,"good_type":1,"note":null,"spec":null}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621292129212668
参数2:B621292038169240
参数3:用户
参数4:0
参数5:商家待接单
参数6:罗佳(先生)支付成功
参数7:罗佳(先生)
参数8:2017-06-21 10:51:38
参数9:0
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15527870893
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13308630181
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord1: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:51:19
参数2:2017-06-21 10:51:19
参数3:61450
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord1: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time1 = ?,
            all_order_count1 = all_order_count1+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:51:19
参数2:2017-06-21 10:51:19
参数3:61450
 
[INFO][2017-06-21 10:52:09] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621292038169240,0009-0072 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1993
参数2:1708
参数3:4
参数4:6.0
参数5:B621292038169240
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_brand.getStores: 
select brand.stores_brand_id,brand.brand_id,stores.stores_id,brand.stores_name as name,
            brand.dispatch_extinfo,
            service_phone as linkman,address,
            elem_restaurant_id,
            meituan_restaurant_id,
            brand.baidu_restaurant_id,
            points,pickup_time,complete_time,b.brand_fromno_start
            from cds_stores stores
            left join cds_stores_brand brand on stores.stores_id = brand.stores_id
            left join cds_brand b on brand.brand_id=b.brand_id
            where brand.stores_brand_id=? 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:25
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:52:09
参数4:
参数5:B621292175889080
参数6:B621291d75443041
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:52:09
参数4:
参数5:B621292190219132
参数6:B621291f88624270
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621292175889080
参数2:B621291d75443041
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:52:09
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-4 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-4 参数1:B621292119484428
参数2:9
参数3:B621292038169240
参数4:2
参数5:47
参数6:雪花蛋酒
参数7:雪花蛋酒
参数8:0
参数9:null
参数10:2017-06-21 10:52:09
参数11:2.5023503
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621292159145244
参数17:9
参数18:B621292038169240
参数19:1
参数20:117
参数21:青豆米鸡丁
参数22:青豆米鸡丁
参数23:0
参数24:null
参数25:2017-06-21 10:52:09
参数26:14.227649
参数27:1
参数28:0
参数29:0
参数30:1
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621292190219132
参数2:B621291f88624270
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:52:09
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13419518357
 
[INFO][2017-06-21 10:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621292038169240
 
[INFO][2017-06-21 10:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B62119afa01976453
参数2:B621292038169240
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:52:10
参数9:0
 
[INFO][2017-06-21 10:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:52:10
参数4:
参数5:B621292135766326
参数6:B621292038169240
 
[INFO][2017-06-21 10:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621292135766326
参数2:B621292038169240
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:52:10
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13886179130
参数2:1
 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:59272
参数3:1
 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621292d92834468
参数2:0
参数3:59272
参数4:0009-0073
参数5:美团
参数6:10274161425506100
参数7:21
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:50:21
参数14:55.8
参数15:0.0
参数16:2.0
参数17:4.0
参数18:4.0
参数19:16.0
参数20:0.0
参数21:47.8
参数22:46.0
参数23:14.0
参数24:2.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:50:21
参数31:张(先生)
参数32:13886179130
参数33:中南民族大学-法学院 (2号楼)
参数34:114.392929
参数35:30.48811
参数36:114.39945093412798
参数37:30.494059697462163
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:54:01
参数66:2017-06-21 10:54:01
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"香滑蒸鸡蛋","price":5.0,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"花菜炒豆腐","price":20.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"番茄炒鸡蛋","price":19.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"加多宝（听装）","price":5.0,"quantity":2,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621292d17159272
参数2:B621292d92834468
参数3:用户
参数4:0
参数5:商家待接单
参数6:张(先生)支付成功
参数7:张(先生)
参数8:2017-06-21 10:50:21
参数9:0
 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:50:21
参数2:2017-06-21 10:50:21
参数3:59272
 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:54:01] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-2 打印订单===B621292d92834468,0009-0073 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
参数2:B621292d92834468
 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2017-06-21 10:50:21
参数2:2017-06-21 10:50:21
参数3:59272
 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:9
参数2:13886179130
 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621292d21576775
参数2:B621292d92834468
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:54:01
参数9:0
 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:香滑蒸鸡蛋
 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1169
参数2:1002
参数3:3
参数4:5.0
参数5:B621292d92834468
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:13554502407
参数2:1
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:141154
参数3:1
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:花菜炒豆腐
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:2
参数2:点我达
参数3:2017-06-21 10:54:02
参数4:
参数5:B621292d49997816
参数6:B621292d92834468
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:1
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621292d49997816
参数2:B621292d92834468
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:54:02
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:番茄炒鸡蛋
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621292e00283263
参数2:0
参数3:141154
参数4:0009-0074
参数5:美团
参数6:10274163755418773
参数7:22
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:52:17
参数14:61.699997
参数15:4.0
参数16:2.0
参数17:4.0
参数18:6.0
参数19:28.0
参数20:0.0
参数21:39.7
参数22:44.0
参数23:24.0
参数24:4.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:52:17
参数31:李1(女士)
参数32:13554502407
参数33:光谷总部国际9栋 (1206)
参数34:114.41988
参数35:30.480688
参数36:114.42647213578663
参数37:30.486344932417303
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:54:02
参数66:2017-06-21 10:54:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"鲜菇炒肉丝","price":20.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"花菜炒豆腐","price":20.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"青豆米鸡丁","price":19.9,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621292e50793821
参数2:B621292e00283263
参数3:用户
参数4:0
参数5:商家待接单
参数6:李1(女士)支付成功
参数7:李1(女士)
参数8:2017-06-21 10:52:17
参数9:0
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:52:17
参数2:2017-06-21 10:52:17
参数3:141154
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:54:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621292e00283263,0009-0074 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621292e00283263
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:13554502407
 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:52:17
参数2:2017-06-21 10:52:17
参数3:141154
 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621292e77688680
参数2:B621292e00283263
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:54:02
参数9:0
 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2956
参数2:2533
参数3:6
参数4:8.0
参数5:B621292e00283263
 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET is_sync = ?
            ,
                send_name = ?
            ,
                send_time = ?
            ,
                send_exception = ?
            ,
                send_id = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2
参数2:点我达
参数3:2017-06-21 10:54:03
参数4:
参数5:B621292e94719606
参数6:B621292e00283263
 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_send_log(
          
            send_id
         , 
            order_id
         , 
            send_type
         , 
            opt_type
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         , 
            send_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621292e94719606
参数2:B621292e00283263
参数3:点我达
参数4:1
参数5:null
参数6:系统操作
参数7:2017-06-21 10:54:03
参数8:0
参数9:0.0
 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-3 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-3 参数1:B621292e11950225
参数2:9
参数3:B621292d92834468
参数4:2
参数5:123
参数6:香滑蒸鸡蛋
参数7:香滑蒸鸡蛋
参数8:0
参数9:null
参数10:2017-06-21 10:54:02
参数11:4.121864
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621292e08986103
参数17:9
参数18:B621292d92834468
参数19:1
参数20:10
参数21:花菜炒豆腐
参数22:花菜炒豆腐
参数23:0
参数24:null
参数25:2017-06-21 10:54:02
参数26:17.229391
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621292e61385373
参数32:9
参数33:B621292d92834468
参数34:1
参数35:7
参数36:番茄炒鸡蛋
参数37:番茄炒鸡蛋
参数38:0
参数39:null
参数40:2017-06-21 10:54:02
参数41:16.405018
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B621292f65728663
参数47:9
参数48:B621292d92834468
参数49:6
参数50:71
参数51:加多宝（听装）
参数52:加多宝
参数53:0
参数54:null
参数55:2017-06-21 10:54:03
参数56:4.121864
参数57:2
参数58:0
参数59:0
参数60:1
参数61:B621292f17026045
参数62:9
参数63:B621292d92834468
参数64:0
参数65:0
参数66:满18.0元赠哈尔滨冰纯白啤330ml*1
参数67:null
参数68:0
参数69:null
参数70:2017-06-21 10:54:03
参数71:0.0
参数72:1
参数73:0
参数74:0
参数75:1
 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_good.insertBatGoodRecord: 
INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
          
            INSERT INTO cds_ms_goods_list(good_list_id,stores_id,order_id,class_id,good_id,good_name,class_good_name,standard_id,standard_name,sale_time,price,count,listorder,cm_id,brand_id)
            VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
[INFO][2017-06-21 10:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:B621292e95879257
参数2:9
参数3:B621292e00283263
参数4:1
参数5:132
参数6:鲜菇炒肉丝
参数7:鲜菇炒肉丝
参数8:0
参数9:null
参数10:2017-06-21 10:54:02
参数11:14.904377
参数12:1
参数13:0
参数14:0
参数15:1
参数16:B621292f12763311
参数17:9
参数18:B621292e00283263
参数19:1
参数20:10
参数21:花菜炒豆腐
参数22:花菜炒豆腐
参数23:0
参数24:null
参数25:2017-06-21 10:54:03
参数26:14.904377
参数27:1
参数28:0
参数29:0
参数30:1
参数31:B621292f46464477
参数32:9
参数33:B621292e00283263
参数34:1
参数35:117
参数36:青豆米鸡丁
参数37:青豆米鸡丁
参数38:0
参数39:null
参数40:2017-06-21 10:54:03
参数41:14.191249
参数42:1
参数43:0
参数44:0
参数45:1
参数46:B621292f22625723
参数47:9
参数48:B621292e00283263
参数49:0
参数50:0
参数51:满18.0元赠哈尔滨冰纯白啤330ml*1
参数52:null
参数53:0
参数54:null
参数55:2017-06-21 10:54:03
参数56:0.0
参数57:1
参数58:0
参数59:0
参数60:1
 
[INFO][2017-06-21 10:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:56:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:2
 
[INFO][2017-06-21 10:56:48] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jun 21 09:14:14 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-06-21 10:56:48] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-06-21 10:56:49] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-06-21 10:56:50] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Jun 21 09:14:11 CST 2017]; root of context hierarchy 
[INFO][2017-06-21 10:56:50] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-06-21 10:57:03] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-06-21 10:57:03] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Wed Jun 21 10:57:03 CST 2017]; root of context hierarchy 
[INFO][2017-06-21 10:57:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-06-21 10:57:04] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-06-21 10:57:04] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-06-21 10:57:04] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-06-21 10:57:06] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-06-21 10:57:06] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2947 ms 
[INFO][2017-06-21 10:57:06] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-06-21 10:57:06] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jun 21 10:57:06 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-06-21 10:57:06] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-06-21 10:57:08] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getSigna() 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-06-21 10:57:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-06-21 10:57:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Jun 21 10:57:06 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-06-21 10:57:09] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-06-21 10:57:09] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-06-21 10:57:09] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-63765-1498013829741-1:1,clientId=null,started=false} 
[INFO][2017-06-21 10:57:09] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://114.55.97.90:61616 
[INFO][2017-06-21 10:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-06-21 10:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-06-21 10:57:10] org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:245) RMI TCP Connection(5)-127.0.0.1 No TaskScheduler/ScheduledExecutorService bean found for scheduled processing 
[INFO][2017-06-21 10:57:10] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3748 ms 
[INFO][2017-06-21 10:57:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-06-21 10:57:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:chenbin
 
[INFO][2017-06-21 10:57:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 10:57:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:351
参数2:1032
 
[INFO][2017-06-21 10:57:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 10:57:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:352
参数2:1032
 
[INFO][2017-06-21 10:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 10:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:353
参数2:1032
 
[INFO][2017-06-21 10:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 10:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:372
参数2:1032
 
[INFO][2017-06-21 10:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 10:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:354
参数2:1032
 
[INFO][2017-06-21 10:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 10:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:355
参数2:1032
 
[INFO][2017-06-21 10:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-06-21 10:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:356
参数2:1032
 
[INFO][2017-06-21 10:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-06-21 10:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-06-21 10:57:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-06-21 10:57:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
参数2:2017-06-21
参数3:2017-06-21
参数4:9
参数5:2017-06-21
参数6:2017-06-21
参数7:9
参数8:2017-06-21
参数9:2017-06-21
参数10:9
参数11:2017-06-21
参数12:2017-06-21
参数13:9
参数14:2017-06-21
参数15:2017-06-21
参数16:9
参数17:2017-06-21
参数18:2017-06-21
 
[INFO][2017-06-21 10:57:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-06-21 10:57:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2017-06-21
参数2:2017-06-21
参数3:9
参数4:2017-06-20
参数5:2017-06-20
参数6:9
参数7:2017-06-14
参数8:2017-06-14
参数9:9
 
[INFO][2017-06-21 10:57:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 10:57:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-06-21 10:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-06-21 10:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-06-21 10:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-06-21 10:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[WARN][2017-06-21 10:57:53] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for cds_stores.GetStoresGoodsList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for cds_stores.GetStoresGoodsList 
[INFO][2017-06-21 10:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 10:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-06-21 10:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-06-21 10:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-06-21 10:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-06-21 10:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-06-21 10:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 cds_order_info.getOrderSum: 
select '2017-06-21' as cday,sb.stores_brand_id,o.stores_id,o.brand_id,o.fromin,COUNT(1) as all_count,MAX(CAST(o.fromin_no as int)) as max_num
            from cds_order_info o
            left join cds_stores_brand sb on o.stores_id = sb.stores_id and o.brand_id = sb.brand_id
            where create_date>? and create_date< ? + ' 23:59:59'
            group by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin
            order by o.stores_id,o.brand_id,sb.stores_brand_id,o.fromin 
[INFO][2017-06-21 10:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:2017-06-21
参数2:2017-06-21
 
[INFO][2017-06-21 10:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) pool-2-thread-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE stores_id = ? 
         
            ORDER BY stores_brand_id 
[INFO][2017-06-21 10:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) pool-2-thread-1 参数1:9
 
[INFO][2017-06-21 10:58:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_order_info.getOrderNolist: 
select order_desc,fromin_no
            from cds_order_info
            where create_date>?
            and create_date< ? + ' 23:59:59'
            and fromin=?
            and stores_id=?
            and brand_id=?
            order by CAST(fromin_no as int) 
[INFO][2017-06-21 10:58:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21
参数2:2017-06-21
参数3:美团
参数4:9
参数5:1
 
[INFO][2017-06-21 10:58:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:58:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15827585876
参数2:1
 
[INFO][2017-06-21 10:58:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member_stores
             


         WHERE stores_id = ?
            and
                member_id = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:58:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:239151
参数3:1
 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621295695210535
参数2:0
参数3:239151
参数4:0009-0075
参数5:美团
参数6:10274161268638086
参数7:23
参数8:1027416
参数9:菜大师
参数10:1
参数11:1
参数12:null
参数13:2017-06-21 10:54:32
参数14:28.5
参数15:0.0
参数16:1.0
参数17:4.0
参数18:2.0
参数19:12.0
参数20:0.0
参数21:22.5
参数22:22.0
参数23:11.0
参数24:1.0
参数25:0.0
参数26:0.0
参数27:0
参数28:6
参数29:三方平台
参数30:2017-06-21 10:54:32
参数31:张思睿(先生)
参数32:15827585876
参数33:中南财经政法大学南湖校区滨湖公寓2栋 (315)
参数34:114.394248
参数35:30.477217
参数36:114.40076536320352
参数37:30.48314054787076
参数38:null
参数39:null
参数40:及时送达
参数41:0
参数42:0
参数43:null
参数44:null
参数45:null
参数46:null
参数47:0
参数48:null
参数49:null
参数50:null
参数51:0
参数52:null
参数53:null
参数54:null
参数55:null
参数56:null
参数57:
参数58:9
参数59:null
参数60:1
参数61:点我达
参数62:null
参数63:0
参数64:null
参数65:2017-06-21 10:58:02
参数66:2017-06-21 10:58:02
参数67:0
参数68:null
参数69:null
参数70:null
参数71:null
参数72:null
参数73:[{"class_id":0,"good_name":"手撕鸡+雪花蛋酒+爱心荷包蛋","price":28.5,"quantity":1,"id":0,"good_id":0,"good_type":1,"note":null,"spec":""},{"class_id":0,"good_name":"满18.0元赠哈尔滨冰纯白啤330ml*1","price":0.01,"quantity":1,"id":0,"good_id":0,"good_type":5,"note":null,"spec":""}]
参数74:null
参数75:null
参数76:0
参数77:0
参数78:0
参数79:0.0
参数80:1
 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621295657598250
参数2:B621295695210535
参数3:用户
参数4:0
参数5:商家待接单
参数6:张思睿(先生)支付成功
参数7:张思睿(先生)
参数8:2017-06-21 10:54:32
参数9:0
 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member.updateMemberRecord2: 
UPDATE cds_member
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:54:32
参数2:2017-06-21 10:54:32
参数3:239151
 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET order_status = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
参数2:B621295695210535
 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 cds_member_stores.updateMemberRecord2: 
UPDATE cds_member_stores
            SET
            last_order_time = ?,
            all_order_count = all_order_count+1,
            last_order_time2 = ?,
            all_order_count2 = all_order_count2+1
            WHERE  member_id= ? 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:54:32
参数2:2017-06-21 10:54:32
参数3:239151
 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_dianwoda_phone
             


         WHERE stores_id = ?
            and
                phone = ? 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:9
参数2:15827585876
 
[INFO][2017-06-21 10:58:02] com.jms.OrderPrintReceiver.onMessage(OrderPrintReceiver.java:38) DefaultMessageListenerContainer-1 打印订单===B621295695210535,0009-0075 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_log(
          
            ol_id
         , 
            order_id
         , 
            opt_type
         , 
            order_status
         , 
            order_status_chi
         , 
            opt_note
         , 
            opt_name
         , 
            opt_time
         , 
            opt_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:B621295695249158
参数2:B621295695210535
参数3:商家接单
参数4:1
参数5:商家已接单
参数6:商家已确认接单
参数7:系统处理
参数8:2017-06-21 10:58:02
参数9:0
 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.updateRecord: 
UPDATE cds_order_info
         SET distance = ?
            ,
                duration = ?
            ,
                kilometre = ?
            ,
                send_price = ? 
         WHERE order_id = ? 
[INFO][2017-06-21 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2726
参数2:2336
参数3:6
参数4:8.0
参数5:B621295695210535
 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:雪花蛋酒
 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT * FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15732030701
参数2:1
 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member(
          
            phone
         , 
            name
         , 
            create_time
         , 
            last_login_time
         , 
            login_count
         , 
            user_status
         , 
            balance_money
         , 
            location
         , 
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            level_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15732030701
参数2:菜大师用户
参数3:2017-06-21 10:54:16
参数4:2017-06-21 10:54:16
参数5:1
参数6:1
参数7:0.0
参数8:30.49243,114.3974
参数9:2017-06-21 10:54:16
参数10:2017-06-21 10:54:16
参数11:0
参数12:2017-06-21 10:54:16
参数13:2017-06-21 10:54:16
参数14:0
参数15:1
参数16:1
 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:爱心荷包蛋
 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    member_id
                 , 
                    phone
                 , 
                    name
                 , 
                    create_time
                 , 
                    last_login_time
                 , 
                    login_count
                 , 
                    user_status
                 , 
                    balance_money
                 , 
                    location
                 , 
                    first_order_time
                 , 
                    last_order_time
                 , 
                    all_order_count
                 , 
                    first_order_time1
                 , 
                    last_order_time1
                 , 
                    all_order_count1
                 , 
                    level_id
                 , 
                    brand_id
                 
                FROM cds_member
             


         WHERE phone = ?
            and
                brand_id = ? 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:15732030701
参数2:1
 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_member_stores(
          
            first_order_time
         , 
            last_order_time
         , 
            all_order_count
         , 
            first_order_time1
         , 
            last_order_time1
         , 
            all_order_count1
         , 
            first_order_time2
         , 
            last_order_time2
         , 
            all_order_count2
         , 
            first_order_time3
         , 
            last_order_time3
         , 
            all_order_count3
         , 
            first_order_time4
         , 
            last_order_time4
         , 
            all_order_count4
         , 
            stores_id
         , 
            member_id
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:2017-06-21 10:54:16
参数2:null
参数3:0
参数4:null
参数5:null
参数6:0
参数7:2017-06-21 10:54:16
参数8:null
参数9:0
参数10:null
参数11:null
参数12:0
参数13:null
参数14:null
参数15:0
参数16:9
参数17:303446
参数18:1
 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.getRecord: 
SELECT
                  
                    brand_id
                 , 
                    brand_name
                 , 
                    brand_comment
                 , 
                    brand_fromno_start
                 , 
                    weixin_appid
                 , 
                    weixin_appsecret
                 , 
                    weixin_token
                 , 
                    weixin_mchid
                 , 
                    weixin_key
                 
                FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-1 参数1:1
 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-2 cds_ms_good_standard.getErpGood: 
select top 1 good_id,good_name as class_good_name,good_price,class_id
            from cds_ms_goods
            where good_key like '%'+?+'%' 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) DefaultMessageListenerContainer-2 参数1:满18.0元赠哈尔滨冰纯白啤330ml*1
 
[INFO][2017-06-21 10:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) DefaultMessageListenerContainer-1 baseSqlMap.insertRecord: 
INSERT INTO cds_order_info(
          
            order_id
         , 
            user_id
         , 
            member_id
         , 
            order_no
         , 
            fromin
         , 
            order_desc
         , 
            fromin_no
         , 
            fromin_id
         , 
            fromin_name
         , 
            order_type
         , 
            bookdinner
         , 
            desk_no
         , 
            create_date
         , 
            goods_prcie
         , 
            uc_price
         , 
            serviceFee
         , 
            ship_fee
         , 
            box_price
         , 
            deduction_price
         , 
            vip_deduction_price
         , 
            total_price
         , 
            income
         , 
            shop_part
         , 
            platform_part
         , 
            out_ship_fee
         , 
            message_price
         , 
            uc_id
         , 
            pay_type_id
         , 
            pay_type_name
         , 
            pay_time
         , 
            receiver_name
         , 
            receiver_phone
         , 
            receiver_adress
         , 
            receiver_lng
         , 
            receiver_lat
         , 
            baidu_lng
         , 
            baidu_lat
         , 
            receiver_sex
         , 
            service_time
         , 
            service_time_str
         , 
            order_status
         , 
            back_status
         , 
            task_order_code
         , 
            task_order_name
         , 
            task_order_phone
         , 
            task_order_time
         , 
            pack_user_id
         , 
            pack_user_name
         , 
            pack_user_phone
         , 
            pack_user_time
         , 
            task_user_id
         , 
            task_user_code
         , 
            task_user_name
         , 
            task_user_phone
         , 
            task_user_time
         , 
            task_time
         , 
            member_desc
         , 
            stores_id
         , 
            transaction_id
         , 
            is_sync
         , 
            send_name
         , 
            send_time
         , 
            isstoresprint
         , 
            print_time
         , 
            in_time
         , 
            updatetime
         , 
            battch_isdo
         , 
            pack_exception_time
         , 
            send_exception
         , 
            send_exception_time
         , 
            send_id
         , 
            service_exception_time
         , 
            goods
         , 
            cancel_type
         , 
            cancel_remark
         , 
            distance
         , 
            duration
         , 
            kilometre
         , 
            send_price
         , 
            brand_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
